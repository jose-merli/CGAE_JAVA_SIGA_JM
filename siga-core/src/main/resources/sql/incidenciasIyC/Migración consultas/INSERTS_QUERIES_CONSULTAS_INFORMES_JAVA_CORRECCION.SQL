
/* -----------------------------------------------------------------------------------------------------
-																														-		
-					IDINSITTUCION = 2000																		-		
-					IDCONSULTA ES SECUENCIAL, DEPENDE DEL IDINSTITUCION 					-
-                                      HAY ALGUNOS CREADOS EXCESIVAMENTE GRANDES			-	
-					TIPOCONSULTA: DESTINATARIO = 'E', DATOS = 'I'									-
-					USUMODIFICACION, LAS PRUEBAS ESTÁN REALIZADAS CON 1   				-
-					e IDTABLA, PARA 2000 SON TODOS NULL												-
-																														-
------------------------------------------------------------------------------------------------------*/

/* GENERAL */
INSERT INTO CON_CONSULTA
   (IDINSTITUCION, 
   IDCONSULTA, 
   DESCRIPCION, 
   GENERAL, 
   TIPOCONSULTA, 
   IDMODULO, 
   FECHAMODIFICACION, 
   USUMODIFICACION, 
   BASES, 
   IDTABLA, 
   ESEXPERTA,
   SENTENCIA, 
   OBSERVACIONES, 
   FECHABAJA, 
   IDOBJETIVO, 
   IDCLASE, 
   IDCLASECOMUNICACION)
   VALUES
   (2000, 
    (SELECT MAX(IDCONSULTA) + 1
		FROM CON_CONSULTA CONS
	   WHERE CONS.IDINSTITUCION = 2000
	   AND CONS.IDCONSULTA < 630000),
	'MIGRACION CENSO: INFORMACIÓN GENERAL',
   1,
   'E',
   3,
   TO_DATE(SYSDATE,'DD/MM/YY'),
   1,
   NULL,
   NULL,
   1,
   to_clob('<SELECT>SELECT PER.NOMBRE,
       PER.APELLIDOS1,
       PER.APELLIDOS2,
       PER.NIFCIF,
       PER.IDTIPOIDENTIFICACION,
       TO_CHAR(PER.FECHANACIMIENTO, ''dd-mm-yyyy'') FECHANACIMIENTO,
       PER.IDESTADOCIVIL,
       PER.NATURALDE,
       PER.FALLECIDO,
       PER.SEXO,
       F_SIGA_GETRECURSO_ETIQUETA(''censo.sexo.'' ||
                                  DECODE(PER.SEXO, ''H'', ''o'', ''a''),
                                  1) as O_A,
       F_SIGA_GETRECURSO_ETIQUETA(''censo.sexo.'' ||
                                  DECODE(PER.SEXO, ''H'', ''o'', ''a''),
                                  1) as A_O,
       F_SIGA_GETRECURSO_ETIQUETA(''censo.sexo.'' ||
                                  DECODE(PER.SEXO, ''H'', ''el'', ''la''),
                                  1) as EL_LA,
       F_SIGA_GETRECURSO_ETIQUETA(''censo.sexo.'' ||
                                  DECODE(PER.SEXO, ''H'', ''del'', ''dela''),
                                  1) as DEL_DELA,
       F_SIGA_GETRECURSO_ETIQUETA(''censo.sexo.'' ||
                                  DECODE(PER.SEXO,
                                         ''H'',
                                         ''del.contraccion'',
                                         ''dela.contraccion''),
                                  1) as DEL_DELA_CONTRACCION,
       F_SIGA_GETRECURSO(EC.DESCRIPCION, 1) DESC_ESTADOCIVIL,
       F_SIGA_GETRECURSO(TI.DESCRIPCION, 1) DESC_TIPOIDENTIFICACION,
       TO_CHAR(CLI.FECHAALTA, ''dd-mm-yyyy'') FECHAALTA,
       CLI.CARACTER,
       CLI.PUBLICIDAD,
       CLI.GUIAJUDICIAL,
       CLI.CARGOSBANCO,
       CLI.COMISIONES,
       CLI.IDTRATAMIENTO,
       CLI.IDLENGUAJE,
       CLI.FOTOGRAFIA,
       CLI.ASIENTOCONTABLE,
       TO_CHAR(CLI.FECHACARGA, ''dd-mm-yyyy'') FECHACARGA,
       CLI.LETRADO,
       TO_CHAR(CLI.FECHAACTUALIZACION, ''dd-mm-yyyy'') FECHAACTUALIZACION,
       TO_CHAR(CLI.FECHAEXPORTCENSO, ''dd-mm-yyyy'') FECHAEXPORTCENSO,
       CLI.NOENVIARREVISTA,
       CLI.NOAPARECERREDABOGACIA,
       F_SIGA_GETRECURSO(TRA.DESCRIPCION, 1) DESC_TRATAMIENTO,
       F_SIGA_GETRECURSO(LEN.DESCRIPCION, 1) DESC_LENGUAJE</SELECT>
  <FROM>FROM CEN_CLIENTE            CLI,
       CEN_PERSONA            PER,
       CEN_ESTADOCIVIL        EC,
       CEN_TIPOIDENTIFICACION TI,
       CEN_TRATAMIENTO        TRA,
       ADM_LENGUAJES          LEN</FROM>
 <WHERE>WHERE CLI.IDPERSONA = PER.IDPERSONA
   AND PER.IDTIPOIDENTIFICACION = TI.IDTIPOIDENTIFICACION
   AND PER.IDESTADOCIVIL = EC.IDESTADOCIVIL(+)
   AND CLI.IDTRATAMIENTO = TRA.IDTRATAMIENTO
   AND CLI.IDLENGUAJE = LEN.IDLENGUAJE
   AND (CLI.IDINSTITUCION, CLI.IDPERSONA) = (%%IDINSTITUCION%%, %%IDPERSONA%%)</WHERE>'),
   NULL,
   NULL,
   4,
   NULL,
   1
   );
   
   
   /* INFO GENERAL + DATOS COLEGIADO */  

INSERT INTO CON_CONSULTA
   (IDINSTITUCION, 
   IDCONSULTA, 
   DESCRIPCION, 
   GENERAL, 
   TIPOCONSULTA, 
   IDMODULO, 
   FECHAMODIFICACION, 
   USUMODIFICACION, 
   BASES, 
   IDTABLA, 
   ESEXPERTA,
   SENTENCIA, 
   OBSERVACIONES, 
   FECHABAJA, 
   IDOBJETIVO, 
   IDCLASE, 
   IDCLASECOMUNICACION)
   VALUES
   (2000, 
   (SELECT MAX(IDCONSULTA) + 1
		FROM CON_CONSULTA CONS
	   WHERE CONS.IDINSTITUCION = 2000),
   'MIGRACION CENSO: INFORMACIÓN GENERAL + DATOS DEL COLEGIADO',
   1,
   'E',--TIPOCONSULTA
   3,
   TO_DATE(SYSDATE,'DD/MM/YY'),
   1,
   NULL,
   NULL,
   1,
   to_clob('<SELECT>SELECT PER.NOMBRE,
			  PER.APELLIDOS1,
			  PER.APELLIDOS2,
			  PER.NIFCIF,
			  PER.IDTIPOIDENTIFICACION,
			  TO_CHAR(PER.FECHANACIMIENTO, ''dd-mm-yyyy'') FECHANACIMIENTO,
			  PER.IDESTADOCIVIL,
			  PER.NATURALDE,
			  PER.FALLECIDO,
			  PER.SEXO,
			  F_SIGA_GETRECURSO_ETIQUETA(''censo.sexo.'' ||
										 DECODE(PER.SEXO, ''H'', ''o'', ''a''),
										 1) as O_A,
			  F_SIGA_GETRECURSO_ETIQUETA(''censo.sexo.'' ||
										 DECODE(PER.SEXO, ''H'', ''o'', ''a''),
										 1) as A_O,
			  F_SIGA_GETRECURSO_ETIQUETA(''censo.sexo.'' ||
										 DECODE(PER.SEXO, ''H'', ''el'', ''la''),
										 1) as EL_LA,
			  F_SIGA_GETRECURSO_ETIQUETA(''censo.sexo.'' ||
										 DECODE(PER.SEXO, ''H'', ''del'', ''dela''),
										 1) as DEL_DELA,
			  F_SIGA_GETRECURSO_ETIQUETA(''censo.sexo.'' ||
										 DECODE(PER.SEXO,
												''H'',
												''del.contraccion'',
												''dela.contraccion''),
										 1) as DEL_DELA_CONTRACCION,
			  F_SIGA_GETRECURSO(EC.DESCRIPCION, 1) DESC_ESTADOCIVIL,
			  F_SIGA_GETRECURSO(TI.DESCRIPCION, 1) DESC_TIPOIDENTIFICACION,
			  TO_CHAR(CLI.FECHAALTA, ''dd-mm-yyyy'') FECHAALTA,
			  CLI.CARACTER,
			  CLI.PUBLICIDAD,
			  CLI.GUIAJUDICIAL,
			  CLI.CARGOSBANCO,
			  CLI.ABONOSBANCO,
			  CLI.COMISIONES,
			  CLI.IDTRATAMIENTO,
			  CLI.IDLENGUAJE,
			  CLI.FOTOGRAFIA,
			  CLI.ASIENTOCONTABLE,
			  TO_CHAR(CLI.FECHACARGA, ''dd-mm-yyyy'') FECHACARGA,
			  CLI.LETRADO,
			  TO_CHAR(CLI.FECHAACTUALIZACION, ''dd-mm-yyyy'') FECHAACTUALIZACION,
			  TO_CHAR(CLI.FECHAEXPORTCENSO, ''dd-mm-yyyy'') FECHAEXPORTCENSO,
			  CLI.NOENVIARREVISTA,
			  CLI.NOAPARECERREDABOGACIA,
			  F_SIGA_GETRECURSO(TRA.DESCRIPCION, 1) DESC_TRATAMIENTO,
			  F_SIGA_GETRECURSO(LEN.DESCRIPCION, 1) DESC_LENGUAJE,')
              ||
              to_clob('TO_CHAR(COL.FECHAPRESENTACION, ''dd-mm-yyyy'') FECHAPRESENTACION,
			  TO_CHAR(COL.FECHAINCORPORACION, ''dd-mm-yyyy'') FECHAINCORPORACION,
			  COL.INDTITULACION,
			  COL.JUBILACIONCUOTA,
			  COL.SITUACIONEJERCICIO,
			  COL.SITUACIONRESIDENTE,
			  COL.SITUACIONEMPRESA,
			  COL.COMUNITARIO,
			  COL.NCOLEGIADO,
			  TO_CHAR(COL.FECHAJURA, ''dd-mm-yyyy'') FECHAJURA,
			  COL.NCOMUNITARIO,
			  TO_CHAR(COL.FECHATITULACION, ''dd-mm-yyyy'') FECHATITULACION,
			  COL.OTROSCOLEGIOS,
			  TO_CHAR(COL.FECHADEONTOLOGIA, ''dd-mm-yyyy'') FECHADEONTOLOGIA,
			  TO_CHAR(COL.FECHAMOVIMIENTO, ''dd-mm-yyyy'') FECHAMOVIMIENTO,
			  COL.IDTIPOSSEGURO,
			  COL.CUENTACONTABLESJCS,
			  F_SIGA_GETRECURSO(SEG.NOMBRE, 1) DESC_TIPOSEGURO,
              
			  TO_CHAR(COL.FECHAPRESENTACION, ''dd'') FECHAPRESENTACION_DD,
			  PKG_SIGA_FECHA_EN_LETRA.F_SIGA_FECHAENLETRA(COL.FECHAPRESENTACION,
														  ''D'',
														  1) FECHAPRESENTACION_DDD,
			  TO_CHAR(COL.FECHAPRESENTACION, ''mm'') FECHAPRESENTACION_MM,
			  PKG_SIGA_FECHA_EN_LETRA.F_SIGA_FECHAENLETRA(COL.FECHAPRESENTACION,
														  ''M'',
														  1) FECHAPRESENTACION_MMM,
			  TO_CHAR(COL.FECHAPRESENTACION, ''yyyy'') FECHAPRESENTACION_YYYY,
			  PKG_SIGA_FECHA_EN_LETRA.F_SIGA_FECHAENLETRA(COL.FECHAPRESENTACION,
														  ''A'',
														  1) FECHAPRESENTACION_YYY,
			  TO_CHAR(COL.FECHAPRESENTACION, ''dd/mm/yyyy'') FECHAPRESENTACION_DDMMYYYY,
			  PKG_SIGA_FECHA_EN_LETRA.F_SIGA_FECHACOMPLETAENLETRA(COL.FECHAPRESENTACION,
																  ''M'',
																  1) FECHAPRESENTACION_DDMMMYYYY,
			  PKG_SIGA_FECHA_EN_LETRA.F_SIGA_FECHACOMPLETAENLETRA(COL.FECHAPRESENTACION,
																  ''DMA'',
																  1) FECHAPRESENTACION_DDDMMMYYY,
			  TO_CHAR(COL.FECHAINCORPORACION, ''dd'') FECHAINCORPORACION_DD,
			  PKG_SIGA_FECHA_EN_LETRA.F_SIGA_FECHAENLETRA(COL.FECHAINCORPORACION,
														  ''D'',
														  1) FECHAINCORPORACION_DDD,
			  TO_CHAR(COL.FECHAINCORPORACION, ''mm'') FECHAINCORPORACION_MM,
			  PKG_SIGA_FECHA_EN_LETRA.F_SIGA_FECHAENLETRA(COL.FECHAINCORPORACION,
														  ''M'',
														  1) FECHAINCORPORACION_MMM,
			  TO_CHAR(COL.FECHAINCORPORACION, ''yyyy'') FECHAINCORPORACION_YYYY,
			  PKG_SIGA_FECHA_EN_LETRA.F_SIGA_FECHAENLETRA(COL.FECHAINCORPORACION,
														  ''A'',
														  1) FECHAINCORPORACION_YYY,
			  TO_CHAR(COL.FECHAINCORPORACION, ''dd/mm/yyyy'') FECHAINCORPORACION_DDMMYYYY,
			  PKG_SIGA_FECHA_EN_LETRA.F_SIGA_FECHACOMPLETAENLETRA(COL.FECHAINCORPORACION,
																  ''M'',
																  1) FECHAINCORPORACION_DDMMMYYYY,
			  PKG_SIGA_FECHA_EN_LETRA.F_SIGA_FECHACOMPLETAENLETRA(COL.FECHAINCORPORACION,
																  ''DMA'',
																  1) FECHAINCORPORACION_DDDMMMYYY</SELECT>
		 <FROM>FROM CEN_COLEGIADO          COL,
			  CEN_CLIENTE            CLI,
			  CEN_PERSONA            PER,
			  CEN_ESTADOCIVIL        EC,
			  CEN_TIPOIDENTIFICACION TI,
			  CEN_TRATAMIENTO        TRA,
			  ADM_LENGUAJES          LEN,
			  CEN_TIPOSSEGURO        SEG</FROM>
		<WHERE>WHERE COL.IDINSTITUCION = CLI.IDINSTITUCION
		  AND COL.IDPERSONA = CLI.IDPERSONA
		  AND COL.IDPERSONA = PER.IDPERSONA
		  AND CLI.IDPERSONA = PER.IDPERSONA
		  AND PER.IDTIPOIDENTIFICACION = TI.IDTIPOIDENTIFICACION
		  AND PER.IDESTADOCIVIL = EC.IDESTADOCIVIL(+)
		  AND CLI.IDTRATAMIENTO = TRA.IDTRATAMIENTO
		  AND CLI.IDLENGUAJE = LEN.IDLENGUAJE
		  AND COL.IDTIPOSSEGURO = SEG.IDTIPOSSEGURO(+)
		  AND (COL.IDINSTITUCION, COL.IDPERSONA) = (%%IDINSTITUCION%%, %%IDPERSONA%%)</WHERE>'),
   NULL,
   NULL,
   4,
   NULL,
   1 
   );
   
   
   
  /*QUERY DATOS ESTADO COLEGIAL*/
INSERT INTO CON_CONSULTA
   (IDINSTITUCION, 
   IDCONSULTA, 
   DESCRIPCION, 
   GENERAL, 
   TIPOCONSULTA, 
   IDMODULO, 
   FECHAMODIFICACION, 
   USUMODIFICACION, 
   BASES, 
   IDTABLA, 
   ESEXPERTA,
   SENTENCIA, 
   OBSERVACIONES, 
   FECHABAJA, 
   IDOBJETIVO, 
   IDCLASE, 
   IDCLASECOMUNICACION)
   VALUES
   (2000, 
   (SELECT MAX(IDCONSULTA) + 1
		FROM CON_CONSULTA CONS
	   WHERE CONS.IDINSTITUCION = 2000
	   AND CONS.IDCONSULTA < 630000),
   'MIGRACION CENSO: DATOS ESTADO COLEGIAL',
   1,
   'I',
   3,
   TO_DATE(SYSDATE,'DD/MM/YY'),
   1,
   NULL,
   NULL,
   1,
   to_clob('<SELECT>SELECT D.IDESTADO,
			  F_SIGA_GETRECURSO(E.DESCRIPCION, 1) ESTADO_COLEGIAL,
			  TO_CHAR(D.FECHAESTADO, ''DD-MM-YYYY'') FECHA_ESTADO_COLEGIAL
		 </SELECT><FROM>FROM CEN_DATOSCOLEGIALESESTADO D, CEN_ESTADOCOLEGIAL E
		</FROM><WHERE>WHERE D.IDESTADO = E.IDESTADO
		  AND (D.IDINSTITUCION, D.IDPERSONA) = (%%IDINSTITUCION%%, %%IDPERSONA%%)
		  AND D.FECHAESTADO =
			  (SELECT MAX(FECHAESTADO)
				 FROM CEN_DATOSCOLEGIALESESTADO
				WHERE IDINSTITUCION = D.IDINSTITUCION
				  AND IDPERSONA = D.IDPERSONA
				  AND TRUNC(FECHAESTADO) <= TRUNC(SYSDATE))</WHERE>'),
   NULL,
   NULL,
   4,
   NULL,
   1 
   );
   
   /*LISTADO ESTADOS COLEGIALES*/				  
INSERT INTO CON_CONSULTA
   (IDINSTITUCION, 
   IDCONSULTA, 
   DESCRIPCION, 
   GENERAL, 
   TIPOCONSULTA, 
   IDMODULO, 
   FECHAMODIFICACION, 
   USUMODIFICACION, 
   BASES, 
   IDTABLA, 
   ESEXPERTA,
   SENTENCIA, 
   OBSERVACIONES, 
   FECHABAJA, 
   IDOBJETIVO, 
   IDCLASE, 
   IDCLASECOMUNICACION)
   VALUES
   (2000, 
   (SELECT MAX(IDCONSULTA) + 1
		FROM CON_CONSULTA CONS
	   WHERE CONS.IDINSTITUCION = 2000
	   AND CONS.IDCONSULTA < 630000),
   'MIGRACION CENSO: LISTADO ESTADOS COLEGIAL',
   1,
   'I',
   3,
   TO_DATE(SYSDATE,'DD/MM/YY'),
   1,
   NULL,
   NULL,
   1,
   to_clob('<SELECT>SELECT F_SIGA_GETRECURSO(EC.DESCRIPCION, 1) ESTADO_DESCRIPCION,
			  TO_CHAR(DCE.FECHAESTADO, ''DD/MM/YYYY'') ESTADO_FECHA,
			  DCE.OBSERVACIONES ESTADO_OBSERVACIONES
		 </SELECT><FROM>FROM CEN_DATOSCOLEGIALESESTADO DCE, CEN_ESTADOCOLEGIAL EC
		</FROM><WHERE>WHERE DCE.IDESTADO = EC.IDESTADO
		  AND (DCE.IDINSTITUCION, DCE.IDPERSONA) = (%%IDINSTITUCION%%, %%IDPERSONA%%)
		  </WHERE><ORDER BY>ORDER BY DCE.FECHAESTADO DESC</ORDER BY>'),
   NULL,
   NULL,
   4,
   NULL,
   1 
   );
   
   
   /* INFO GENERAL + DATOS NO COLEGIADO */      
INSERT INTO CON_CONSULTA
   (IDINSTITUCION, 
   IDCONSULTA, 
   DESCRIPCION, 
   GENERAL, 
   TIPOCONSULTA, 
   IDMODULO, 
   FECHAMODIFICACION, 
   USUMODIFICACION, 
   BASES, 
   IDTABLA, 
   ESEXPERTA,
   SENTENCIA, 
   OBSERVACIONES, 
   FECHABAJA, 
   IDOBJETIVO, 
   IDCLASE, 
   IDCLASECOMUNICACION)
   VALUES
   (2000, 
   (SELECT MAX(IDCONSULTA) + 1
		FROM CON_CONSULTA CONS
	   WHERE CONS.IDINSTITUCION = 2000
	   AND CONS.IDCONSULTA < 630000),
   'MIGRACION CENSO: DATOS GENERALES + DATOS NO COLEGIADO',
   1,
   'E',
   3,
   TO_DATE(SYSDATE,'DD/MM/YY'),
   1,
   NULL,
   NULL,
   1,
  to_clob('<SELECT>SELECT PER.NOMBRE,
			   PER.APELLIDOS1,
			   PER.APELLIDOS2,
			   PER.NIFCIF,
			   PER.IDTIPOIDENTIFICACION,
			   TO_CHAR(PER.FECHANACIMIENTO, ''dd-mm-yyyy'') FECHANACIMIENTO,
			   PER.IDESTADOCIVIL,
			   PER.NATURALDE,
			   PER.FALLECIDO,
			   PER.SEXO,
			   F_SIGA_GETRECURSO_ETIQUETA(''censo.sexo.'' ||
										  DECODE(PER.SEXO, ''H'', ''o'', ''a''),
										  1) as O_A,
			   F_SIGA_GETRECURSO_ETIQUETA(''censo.sexo.'' ||
										  DECODE(PER.SEXO, ''H'', ''o'', ''a''),
										  1) as A_O,
			   F_SIGA_GETRECURSO_ETIQUETA(''censo.sexo.'' ||
										  DECODE(PER.SEXO, ''H'', ''el'', ''la''),
										  1) as EL_LA,
			   F_SIGA_GETRECURSO_ETIQUETA(''censo.sexo.'' ||
										  DECODE(PER.SEXO, ''H'', ''del'', ''dela''),
										  1) as DEL_DELA,
			   F_SIGA_GETRECURSO_ETIQUETA(''censo.sexo.'' ||
										  DECODE(PER.SEXO,
												 ''H'',
												 ''del.contraccion'',
												 ''dela.contraccion''),
										  1) as DEL_DELA_CONTRACCION,
			   F_SIGA_GETRECURSO(EC.DESCRIPCION, 1) DESC_ESTADOCIVIL,
			   F_SIGA_GETRECURSO(TI.DESCRIPCION, 1) DESC_TIPOIDENTIFICACION,
			   TO_CHAR(CLI.FECHAALTA, ''dd-mm-yyyy'') FECHAALTA,
			   CLI.CARACTER,
			   CLI.PUBLICIDAD,
			   CLI.GUIAJUDICIAL,
			   CLI.CARGOSBANCO,
			   CLI.ABONOSBANCO,
			   CLI.COMISIONES,
			   CLI.IDTRATAMIENTO,
			   CLI.IDLENGUAJE,
			   CLI.FOTOGRAFIA,
			   CLI.ASIENTOCONTABLE,
			   TO_CHAR(CLI.FECHACARGA, ''dd-mm-yyyy'') FECHACARGA,
			   CLI.LETRADO,
			   TO_CHAR(CLI.FECHAACTUALIZACION, ''dd-mm-yyyy'') FECHAACTUALIZACION,
			   TO_CHAR(CLI.FECHAEXPORTCENSO, ''dd-mm-yyyy'') FECHAEXPORTCENSO,
			   CLI.NOENVIARREVISTA,
			   CLI.NOAPARECERREDABOGACIA,
			   F_SIGA_GETRECURSO(TRA.DESCRIPCION, 1) DESC_TRATAMIENTO,
			   F_SIGA_GETRECURSO(LEN.DESCRIPCION, 1) DESC_LENGUAJE,')
				||
			   to_clob('NCOL.SERIE,
			   DECODE(NCOL.SOCIEDADPROFESIONAL,
					  ''1'',
					  NCOL.CONTADOR_NUMSSPP,
					  DECODE(NCOL.SOCIEDADSJ, ''1'', NCOL.CONTADOR_NUMREG, '''')) AS NUMEROREF,
			   NCOL.SOCIEDADSJ,
			   NCOL.TIPO,
			   NCOL.ANOTACIONES,
			   NCOL.PREFIJO_NUMREG,
			   NCOL.CONTADOR_NUMREG,
			   NCOL.SUFIJO_NUMREG,
			   TO_CHAR(NCOL.FECHAFIN, ''dd-mm-yyyy'') FECHAFIN,
			   NCOL.IDPERSONANOTARIO,
			   NCOL.RESENA,
			   NCOL.OBJETOSOCIAL,
			   NCOL.SOCIEDADPROFESIONAL,
			   NCOL.PREFIJO_NUMSSPP,
			   NCOL.CONTADOR_NUMSSPP,
			   NCOL.SUFIJO_NUMSSPP,
			   NCOL.NOPOLIZA,
			   NCOL.COMPANIASEG,
			   CLINOT.IDINSTITUCION IDINSTITUCION_NOTARIO,
			   TO_CHAR(CLINOT.FECHAALTA, ''dd-mm-yyyy'') FECHAALTA_NOTARIO,
			   CLINOT.CARACTER CARACTER_NOTARIO,
			   CLINOT.PUBLICIDAD PUBLICIDAD_NOTARIO,
			   CLINOT.GUIAJUDICIAL GUIAJUDICIAL_NOTARIO,
			   CLINOT.CARGOSBANCO CARGOSBANCO_NOTARIO,
			   CLINOT.COMISIONES COMISIONES_NOTARIO,
			   CLINOT.IDTRATAMIENTO IDTRATAMIENTO_NOTARIO,
			   CLINOT.IDLENGUAJE IDLENGUAJE_NOTARIO,
			   CLINOT.ABONOSBANCO ABONOSBANCO_NOTARIO,
			   CLINOT.FOTOGRAFIA FOTOGRAFIA_NOTARIO,
			   CLINOT.ASIENTOCONTABLE ASIENTOCONTABLE_NOTARIO,
			   TO_CHAR(CLINOT.FECHACARGA, ''dd-mm-yyyy'') FECHACARGA_NOTARIO,
			   CLINOT.LETRADO LETRADO_NOTARIO,
			   TO_CHAR(CLINOT.FECHAACTUALIZACION, ''dd-mm-yyyy'') FECHAACTUALIZACION_NOTARIO,
			   TO_CHAR(CLINOT.FECHAEXPORTCENSO, ''dd-mm-yyyy'') FECHAEXPORTCENSO_NOTARIO,
			   CLINOT.NOENVIARREVISTA NOENVIARREVISTA_NOTARIO,
			   CLINOT.NOAPARECERREDABOGACIA NOAPARECERREDABOGACIA,
			   PERNOT.NOMBRE NOMBRE_NOTARIO,
			   PERNOT.APELLIDOS1 APELLIDOS1_NOTARIO,
			   PERNOT.APELLIDOS2 APELLIDOS2_NOTARIO,
			   PERNOT.NIFCIF NIFCIF_NOTARIO,
			   PERNOT.IDTIPOIDENTIFICACION IDTIPOIDENTIFICACION_NOTARIO,
			   TO_CHAR(PERNOT.FECHANACIMIENTO, ''dd-mm-yyyy'') FECHANACIMIENTO_NOTARIO,
			   PERNOT.IDESTADOCIVIL IDESTADOCIVIL_NOTARIO,
			   PERNOT.NATURALDE NATURALDE_NOTARIO,
			   PERNOT.FALLECIDO FALLECIDO_NOTARIO,
			   PERNOT.SEXO SEXO_NOTARIO</SELECT>
		  <FROM>FROM CEN_NOCOLEGIADO        NCOL,
			   CEN_CLIENTE            CLI,
			   CEN_PERSONA            PER,
			   CEN_ESTADOCIVIL        EC,
			   CEN_TIPOIDENTIFICACION TI,
			   CEN_TRATAMIENTO        TRA,
			   ADM_LENGUAJES          LEN,
			   CEN_CLIENTE            CLINOT,
			   CEN_PERSONA            PERNOT</FROM>
		<WHERE>WHERE NCOL.IDINSTITUCION(+) = CLI.IDINSTITUCION
		   AND NCOL.IDPERSONA(+) = CLI.IDPERSONA
		   AND CLI.IDPERSONA = PER.IDPERSONA
		   AND PER.IDTIPOIDENTIFICACION = TI.IDTIPOIDENTIFICACION
		   AND PER.IDESTADOCIVIL = EC.IDESTADOCIVIL(+)
		   AND CLI.IDTRATAMIENTO = TRA.IDTRATAMIENTO
		   AND CLI.IDLENGUAJE = LEN.IDLENGUAJE
		   AND CLINOT.IDINSTITUCION(+) = NCOL.IDINSTITUCION
		   AND CLINOT.IDPERSONA(+) = NCOL.IDPERSONANOTARIO
		   AND CLINOT.IDPERSONA = PERNOT.IDPERSONA(+)
		   AND (CLI.IDINSTITUCION, CLI.IDPERSONA) = (%%IDINSTITUCION%%, %%IDPERSONA%%)</WHERE>'),
   NULL,
   NULL,
   4,
   NULL,
   1 
   );
   
   
   
   /*RECUPERA ALGUNOS CAMPOS DE COMPONENTES, 
PERO MUCHOS FALTAN Y OTROS CAMPOS NO TIENEN RELACIÓN CON EL DOCUMENTO*/            	  
INSERT INTO CON_CONSULTA
   (IDINSTITUCION, 
   IDCONSULTA, 
   DESCRIPCION, 
   GENERAL, 
   TIPOCONSULTA, 
   IDMODULO, 
   FECHAMODIFICACION, 
   USUMODIFICACION, 
   BASES, 
   IDTABLA, 
   ESEXPERTA,
   SENTENCIA, 
   OBSERVACIONES, 
   FECHABAJA, 
   IDOBJETIVO, 
   IDCLASE, 
   IDCLASECOMUNICACION)
   VALUES
   (2000, 
   (SELECT MAX(IDCONSULTA) + 1
		FROM CON_CONSULTA CONS
	   WHERE CONS.IDINSTITUCION = 2000
	   AND CONS.IDCONSULTA < 630000),
   'MIGRACION CENSO: CAMPOS COMPONENTES',
   1,
   'I',
   3,
   TO_DATE(SYSDATE,'DD/MM/YY'),
   1,
   NULL,
   NULL,
   1,  
    to_clob('<SELECT>SELECT CEN_COMPONENTES.IDINSTITUCION,
           CEN_COMPONENTES.IDPERSONA,
           CEN_COMPONENTES.IDCOMPONENTE, 
           CEN_COMPONENTES.CARGO, 
           CEN_COMPONENTES.FECHACARGO, 
           CEN_COMPONENTES.FECHABAJA,  
           CEN_COMPONENTES.CEN_CLIENTE_IDPERSONA, 
           CEN_COMPONENTES.CEN_CLIENTE_IDINSTITUCION, 
           CEN_COMPONENTES.SOCIEDAD,
           CEN_COMPONENTES.IDCUENTA, 
           CEN_COMPONENTES.IDTIPOCOLEGIO, 
           CEN_COMPONENTES.NUMCOLEGIADO, 
           CEN_COMPONENTES.CAPITALSOCIAL, 
           CEN_COMPONENTES.IDCARGO,
           CEN_COMPONENTES.IDPROVINCIA,
           CEN_COMPONENTES.CAPITALSOCIAL,
           CEN_PERSONA.NIFCIF,
           CEN_PERSONA.NOMBRE, 
           CEN_PERSONA.APELLIDOS1, 
           CEN_PERSONA.APELLIDOS2, 
           CEN_CUENTASBANCARIAS.CBO_CODIGO,
           CEN_CUENTASBANCARIAS.CODIGOSUCURSAL,
           CEN_CUENTASBANCARIAS.DIGITOCONTROL,
           CEN_CUENTASBANCARIAS.NUMEROCUENTA,
           CEN_CUENTASBANCARIAS.IBAN,
           TO_CHAR(CEN_COMPONENTES.FECHACARGO, ''dd/mm/yyyy'') AS FECHACARGOINFORME,
           DECODE(F_SIGA_GETTIPOCLIENTE(CEN_COMPONENTES.CEN_CLIENTE_IDPERSONA,
                                        CEN_COMPONENTES.CEN_CLIENTE_IDINSTITUCION,
                                        SYSDATE),
                  20,
                  1,
                  0) AS EJERCIENTE </SELECT>
      <FROM>FROM CEN_COMPONENTES
    INNER JOIN CEN_PERSONA ON CEN_COMPONENTES.CEN_CLIENTE_IDPERSONA =
                               CEN_PERSONA.IDPERSONA
      LEFT JOIN CEN_CUENTASBANCARIAS ON CEN_COMPONENTES.IDINSTITUCION =
                                        CEN_CUENTASBANCARIAS.IDINSTITUCION
                                    AND CEN_COMPONENTES.IDPERSONA =
                                        CEN_CUENTASBANCARIAS.IDPERSONA
                                    AND CEN_COMPONENTES.IDCUENTA =
                                        CEN_CUENTASBANCARIAS.IDCUENTA</FROM>
    <WHERE>WHERE (CEN_COMPONENTES.IDINSTITUCION, CEN_COMPONENTES.IDPERSONA) = (%%IDINSTITUCION%%, %%IDPERSONA%%)
       AND (CEN_COMPONENTES.FECHABAJA IS NULL or
           CEN_COMPONENTES.FECHABAJA > SYSDATE)</WHERE>
    <ORDER BY>ORDER BY CEN_PERSONA.NIFCIF</ORDER BY>'),
   NULL,
   NULL,
   4,
   NULL,
   1 
   );
   
   
      /*LETRADO, INFO GENERAL*/
INSERT INTO CON_CONSULTA
   (IDINSTITUCION, 
   IDCONSULTA, 
   DESCRIPCION, 
   GENERAL, 
   TIPOCONSULTA, 
   IDMODULO, 
   FECHAMODIFICACION, 
   USUMODIFICACION, 
   BASES, 
   IDTABLA, 
   ESEXPERTA,
   SENTENCIA, 
   OBSERVACIONES, 
   FECHABAJA, 
   IDOBJETIVO, 
   IDCLASE, 
   IDCLASECOMUNICACION)
   VALUES
   (2000, 
   (SELECT MAX(IDCONSULTA) + 1
		FROM CON_CONSULTA CONS
	   WHERE CONS.IDINSTITUCION = 2000
	   AND CONS.IDCONSULTA < 630000),
   'MIGRACION CENSO: INFORMACIÓN GENERAL LETRADO',
   1,
   'E',
   3,
   TO_DATE(SYSDATE,'DD/MM/YY'),
   1,
   NULL,
   NULL,
   1,  
    to_clob('<SELECT>SELECT PER.NOMBRE,
			   PER.APELLIDOS1,
			   PER.APELLIDOS2,
			   PER.NIFCIF,
			   PER.IDTIPOIDENTIFICACION,
			   TO_CHAR(PER.FECHANACIMIENTO, ''dd-mm-yyyy'') FECHANACIMIENTO,
			   PER.IDESTADOCIVIL,
			   PER.NATURALDE,
			   PER.FALLECIDO,
			   PER.SEXO,
			   F_SIGA_GETRECURSO_ETIQUETA(''censo.sexo.'' ||
										  DECODE(PER.SEXO, ''H'', ''o'', ''a''),
										  1) as O_A,
			   F_SIGA_GETRECURSO_ETIQUETA(''censo.sexo.'' ||
										  DECODE(PER.SEXO, ''H'', ''o'', ''a''),
										  1) as A_O,
			   F_SIGA_GETRECURSO_ETIQUETA(''censo.sexo.'' ||
										  DECODE(PER.SEXO, ''H'', ''el'', ''la''),
										  1) as EL_LA,
			   F_SIGA_GETRECURSO_ETIQUETA(''censo.sexo.'' ||
										  DECODE(PER.SEXO, ''H'', ''del'', ''dela''),
										  1) as DEL_DELA,
			   F_SIGA_GETRECURSO_ETIQUETA(''censo.sexo.'' ||
										  DECODE(PER.SEXO,
												 ''H'',
												 ''del.contraccion'',
												 ''dela.contraccion''),
										  1) as DEL_DELA_CONTRACCION,
			   F_SIGA_GETRECURSO(EC.DESCRIPCION, 1) DESC_ESTADOCIVIL,
			   F_SIGA_GETRECURSO(TI.DESCRIPCION, 1) DESC_TIPOIDENTIFICACION,
			   TO_CHAR(CLI.FECHAALTA, ''dd-mm-yyyy'') FECHAALTA,
			   CLI.CARACTER,
			   CLI.PUBLICIDAD,
			   CLI.GUIAJUDICIAL,
			   CLI.CARGOSBANCO,
			   CLI.COMISIONES,
			   CLI.IDTRATAMIENTO,
			   CLI.IDLENGUAJE,
			   CLI.FOTOGRAFIA,
			   CLI.ASIENTOCONTABLE,
			   TO_CHAR(CLI.FECHACARGA, ''dd-mm-yyyy'') FECHACARGA,
			   CLI.LETRADO,
			   TO_CHAR(CLI.FECHAACTUALIZACION, ''dd-mm-yyyy'') FECHAACTUALIZACION,
			   TO_CHAR(CLI.FECHAEXPORTCENSO, ''dd-mm-yyyy'') FECHAEXPORTCENSO,
			   CLI.NOENVIARREVISTA,
			   CLI.NOAPARECERREDABOGACIA,
			   F_SIGA_GETRECURSO(TRA.DESCRIPCION, 1) DESC_TRATAMIENTO,
			   F_SIGA_GETRECURSO(LEN.DESCRIPCION, 1) DESC_LENGUAJE</SELECT>
			   
		  <FROM>FROM CEN_CLIENTE            CLI,
			   CEN_PERSONA            PER,
			   CEN_ESTADOCIVIL        EC,
			   CEN_TIPOIDENTIFICACION TI,
			   CEN_TRATAMIENTO        TRA,
			   ADM_LENGUAJES          LEN</FROM>
		 <WHERE>WHERE CLI.IDPERSONA = PER.IDPERSONA
		   AND PER.IDTIPOIDENTIFICACION = TI.IDTIPOIDENTIFICACION
		   AND PER.IDESTADOCIVIL = EC.IDESTADOCIVIL(+)
		   AND CLI.IDTRATAMIENTO = TRA.IDTRATAMIENTO
		   AND CLI.IDLENGUAJE = LEN.IDLENGUAJE
		   AND (CLI.IDINSTITUCION, CLI.IDPERSONA) = (%%IDINSTITUCION%%, %%IDPERSONA%%)</WHERE>'),
   NULL,
   NULL,
   4,
   NULL,
   1 
   );
   
   
   
 /* QUERIES DE CUENTAS BANCARIAS*/
 --ABONO
 
INSERT INTO CON_CONSULTA
   (IDINSTITUCION, 
   IDCONSULTA, 
   DESCRIPCION, 
   GENERAL, 
   TIPOCONSULTA, 
   IDMODULO, 
   FECHAMODIFICACION, 
   USUMODIFICACION, 
   BASES, 
   IDTABLA, 
   ESEXPERTA,
   SENTENCIA, 
   OBSERVACIONES, 
   FECHABAJA, 
   IDOBJETIVO, 
   IDCLASE, 
   IDCLASECOMUNICACION)
   VALUES
   (2000, 
   (SELECT MAX(IDCONSULTA) + 1
		FROM CON_CONSULTA CONS
	   WHERE CONS.IDINSTITUCION = 2000
	   AND CONS.IDCONSULTA < 630000),
   'MIGRACION CENSO: INFORMACIÓN CUENTAS BANCARIAS - ABONO',
   1,
   'I',
   3,
   TO_DATE(SYSDATE,'DD/MM/YY'),
   1,
   NULL,
   NULL,
   1,  
    to_clob('<SELECT>SELECT '' nº '' || CUEN.IBAN AS CUENTABANCARIA_ABONO,
           '' nº '' || CUEN.IBAN AS CUENTABANCARIA_ABONO_ABIERTA
      </SELECT><FROM>FROM CEN_CUENTASBANCARIAS CUEN
     </FROM><WHERE>WHERE CUEN.ABONOCARGO IN (''A'', ''T'')
       AND (CUEN.IDINSTITUCION, CUEN.IDPERSONA) = (%%IDINSTITUCION%%, %%IDPERSONA%%)
       AND (CUEN.FECHABAJA IS NULL OR CUEN.FECHABAJA > SYSDATE)
     </WHERE><ORDER BY>ORDER BY FECHAMODIFICACION DESC
     </ORDER BY>'),
   NULL,
   NULL,
   4,
   NULL,
   1 
   );
   
   
   
 --CARGO

INSERT INTO CON_CONSULTA
   (IDINSTITUCION, 
   IDCONSULTA, 
   DESCRIPCION, 
   GENERAL, 
   TIPOCONSULTA, 
   IDMODULO, 
   FECHAMODIFICACION, 
   USUMODIFICACION, 
   BASES, 
   IDTABLA, 
   ESEXPERTA,
   SENTENCIA, 
   OBSERVACIONES, 
   FECHABAJA, 
   IDOBJETIVO, 
   IDCLASE, 
   IDCLASECOMUNICACION)
   VALUES
   (2000, 
   (SELECT MAX(IDCONSULTA) + 1
		FROM CON_CONSULTA CONS
	   WHERE CONS.IDINSTITUCION = 2000
	   AND CONS.IDCONSULTA < 630000),
   'MIGRACION CENSO: INFORMACIÓN CUENTAS BANCARIAS - CARGO',
   1,
   'I',
   3,
   TO_DATE(SYSDATE,'DD/MM/YY'),
   1,
   NULL,
   NULL,
   1,  
    to_clob('<SELECT>SELECT '' nº '' || CUEN.IBAN AS CUENTABANCARIA_CARGO,
			   '' nº '' || CUEN.IBAN AS CUENTABANCARIA_CARGO_ABIERTA
		  </SELECT><FROM>FROM CEN_CUENTASBANCARIAS CUEN
		 </FROM><WHERE>WHERE CUEN.ABONOCARGO IN (''C'', ''T'')
		   AND (CUEN.IDINSTITUCION, CUEN.IDPERSONA) = (%%IDINSTITUCION%%, %%IDPERSONA%%)
		   AND (CUEN.FECHABAJA IS NULL OR CUEN.FECHABAJA > SYSDATE)
		 </WHERE><ORDER BY>ORDER BY FECHAMODIFICACION DESC
    </ORDER BY>'),
   NULL,
   NULL,
   4,
   NULL,
   1 
   );
   
   
   
 --SJCS
 
INSERT INTO CON_CONSULTA
   (IDINSTITUCION, 
   IDCONSULTA, 
   DESCRIPCION, 
   GENERAL, 
   TIPOCONSULTA, 
   IDMODULO, 
   FECHAMODIFICACION, 
   USUMODIFICACION, 
   BASES, 
   IDTABLA, 
   ESEXPERTA,
   SENTENCIA, 
   OBSERVACIONES, 
   FECHABAJA, 
   IDOBJETIVO, 
   IDCLASE, 
   IDCLASECOMUNICACION)
   VALUES
   (2000, 
   (SELECT MAX(IDCONSULTA) + 1
		FROM CON_CONSULTA CONS
	   WHERE CONS.IDINSTITUCION = 2000
	   AND CONS.IDCONSULTA < 630000),
   'MIGRACION CENSO:INFORMACIÓN CUENTAS BANCARIAS - SJCS',
   1,
   'I',
   3,
   TO_DATE(SYSDATE,'DD/MM/YY'),
   1,
   NULL,
   NULL,
   1,  
   to_clob('<SELECT>SELECT '' nº '' || CUEN.IBAN AS CUENTABANCARIA_SJCS,
			   '' nº '' || CUEN.IBAN AS CUENTABANCARIA_SJCS_ABIERTA
		  </SELECT><FROM>FROM CEN_CUENTASBANCARIAS CUEN
		 </FROM><WHERE>WHERE CUEN.ABONOSJCS = ''1''
		   AND (CUEN.IDINSTITUCION, CUEN.IDPERSONA) = (%%IDINSTITUCION%%, %%IDPERSONA%%)
		   AND (CUEN.FECHABAJA IS NULL OR CUEN.FECHABAJA > SYSDATE)
		 </WHERE><ORDER BY>ORDER BY ABONOSJCS DESC, FECHAMODIFICACION DESC
   </ORDER BY>'),
   NULL,
   NULL,
   4,
   NULL,
   1 
   );
   
   
 /* QUERY FECHA ACTUAL */  
INSERT INTO CON_CONSULTA
   (IDINSTITUCION, 
   IDCONSULTA, 
   DESCRIPCION, 
   GENERAL, 
   TIPOCONSULTA, 
   IDMODULO, 
   FECHAMODIFICACION, 
   USUMODIFICACION, 
   BASES, 
   IDTABLA, 
   ESEXPERTA,
   SENTENCIA, 
   OBSERVACIONES, 
   FECHABAJA, 
   IDOBJETIVO, 
   IDCLASE, 
   IDCLASECOMUNICACION)
   VALUES
   (2000, 
   (SELECT MAX(IDCONSULTA) + 1
		FROM CON_CONSULTA CONS
	   WHERE CONS.IDINSTITUCION = 2000
	   AND CONS.IDCONSULTA < 630000),
   'MIGRACION CENSO: RECUPERAR FECHA ACTUAL',
   1,
   'I',
   3,
   TO_DATE(SYSDATE,'DD/MM/YY'),
   1,
   NULL,
   NULL,
   1,  
   to_clob('<SELECT>SELECT F_SIGA_GETRECURSO_ETIQUETA(''CALENDARIO.LITERAL.SEMANA.'' ||
										  TO_CHAR(SYSDATE, ''D''),
										  1) || '', '' ||
			   PKG_SIGA_FECHA_EN_LETRA.F_SIGA_FECHACOMPLETAENLETRA(SYSDATE, ''M'', 1) AS FECHAACTUAL_LETRAYDIA,
			   PKG_SIGA_FECHA_EN_LETRA.F_SIGA_FECHACOMPLETAENLETRA(SYSDATE,
																   ''DMA'',
																   1) AS FECHAACTUAL_LETRA </SELECT>
    <FROM>FROM DUAL</FROM>'),
   NULL,
   NULL,
   4,
   NULL,
   1 
   );
   
   --DIRECCION PREF. 1
   INSERT INTO CON_CONSULTA
   (IDINSTITUCION, 
   IDCONSULTA, 
   DESCRIPCION, 
   GENERAL, 
   TIPOCONSULTA, 
   IDMODULO, 
   FECHAMODIFICACION, 
   USUMODIFICACION, 
   BASES, 
   IDTABLA, 
   ESEXPERTA,
   SENTENCIA, 
   OBSERVACIONES, 
   FECHABAJA, 
   IDOBJETIVO, 
   IDCLASE, 
   IDCLASECOMUNICACION)
   VALUES
   (2000, 
   (SELECT MAX(IDCONSULTA) + 1
		FROM CON_CONSULTA CONS
	   WHERE CONS.IDINSTITUCION = 2000
	   AND CONS.IDCONSULTA < 630000),
   'MIGRACION CENSO: RECUPERAR ID DIRECCIÓN PREFERENTE',
   1,
   'I',
   3,
   TO_DATE(SYSDATE,'DD/MM/YY'),
   1,
   NULL,
   NULL,
   1,  
  to_clob('<SELECT>SELECT F_SIGA_GETIDDIRECCION_TIPOPRE2(%%IDINSTITUCION%%, %%IDPERSONA%%, 2, 3) AS IDDIRECCIONPREFERENTE</SELECT>
		  <FROM>FROM DUAL</FROM>'),
   NULL,
   NULL,
   4,
   NULL,
   1 
   );
   
   /*DIRECCION PREFERENTE*/   
INSERT INTO CON_CONSULTA
   (IDINSTITUCION, 
   IDCONSULTA, 
   DESCRIPCION, 
   GENERAL, 
   TIPOCONSULTA, 
   IDMODULO, 
   FECHAMODIFICACION, 
   USUMODIFICACION, 
   BASES, 
   IDTABLA, 
   ESEXPERTA,
   SENTENCIA, 
   OBSERVACIONES, 
   FECHABAJA, 
   IDOBJETIVO, 
   IDCLASE, 
   IDCLASECOMUNICACION)
   VALUES
   (2000, 
   (SELECT MAX(IDCONSULTA) + 1
		FROM CON_CONSULTA CONS
	   WHERE CONS.IDINSTITUCION = 2000
	   AND CONS.IDCONSULTA < 630000),
   'MIGRACION CENSO: RECUPERAR DIRECCIÓN PREFERENTE',
   1,
   'I',
   3,
   TO_DATE(SYSDATE,'DD/MM/YY'),
   1,
   NULL,
   NULL,
   1,  
  		to_clob('<SELECT>SELECT DIR.DOMICILIO,
			   DIR.CODIGOPOSTAL,
			   DIR.TELEFONO1,
			   DIR.TELEFONO2,
			   DIR.MOVIL,
			   DIR.FAX1,
			   DIR.FAX2,
			   DIR.CORREOELECTRONICO,
			   DIR.PAGINAWEB,
			   DIR.POBLACIONEXTRANJERA,
			   F_SIGA_GETRECURSO(POB.NOMBRE, 1) POBLACION,
			   F_SIGA_GETRECURSO(PRO.NOMBRE, 1) PROVINCIA,
			   F_SIGA_GETRECURSO(PA.NOMBRE, 1) PAIS</SELECT>
		  <FROM>FROM CEN_DIRECCIONES DIR,
			   CEN_PAIS        PA,
			   CEN_POBLACIONES POB,
			   CEN_PROVINCIAS  PRO</FROM>
		 <WHERE>WHERE DIR.IDDIRECCION = 3
		   AND (DIR.IDINSTITUCION, DIR.IDPERSONA) = (%%IDINSTITUCION%%, %%IDPERSONA%%)
		   AND DIR.FECHABAJA IS NULL
		   AND PRO.IDPROVINCIA(+) = DIR.IDPROVINCIA
		   AND POB.IDPOBLACION(+) = DIR.IDPOBLACION
		   AND PA.IDPAIS(+) = DIR.IDPAIS</WHERE>'),
   NULL,
   NULL,
   4,
   NULL,
   1 
   );
   
     /*DIRECCIÓN RESIDENCIA*/ 		 
INSERT INTO CON_CONSULTA
   (IDINSTITUCION, 
   IDCONSULTA, 
   DESCRIPCION, 
   GENERAL, 
   TIPOCONSULTA, 
   IDMODULO, 
   FECHAMODIFICACION, 
   USUMODIFICACION, 
   BASES, 
   IDTABLA, 
   ESEXPERTA,
   SENTENCIA, 
   OBSERVACIONES, 
   FECHABAJA, 
   IDOBJETIVO, 
   IDCLASE, 
   IDCLASECOMUNICACION)
   VALUES
   (2000, 
   (SELECT MAX(IDCONSULTA) + 1
		FROM CON_CONSULTA CONS
	   WHERE CONS.IDINSTITUCION = 2000
	   AND CONS.IDCONSULTA < 630000),
   'MIGRACION CENSO: RECUPERAR ID DIRECCIÓN RESIDENCIA',
   1,
   'I',
   3,
   TO_DATE(SYSDATE,'DD/MM/YY'),
   1,
   NULL,
   NULL,
   1,  
    to_clob('<SELECT>SELECT *
		  </SELECT><FROM>FROM (SELECT DIR.DOMICILIO AS DOMICILIORESIDENCIA,
					   NVL(DIR.TELEFONO1, DIR.TELEFONO2) AS TELEFONORESIDENCIA,
					   DIR.MOVIL AS MOVILRESIDENCIA,
					   NVL(DIR.FAX1, DIR.FAX2) AS FAXRESIDENCIA,
					   DIR.CORREOELECTRONICO AS EMAILRESIDENCIA,
					   DIR.CODIGOPOSTAL AS CPRESIDENCIA,
					   CASE
						 WHEN (PAIS.IDPAIS IS NULL OR PAIS.IDPAIS = 191) THEN
						  F_SIGA_GETRECURSO(POBL.NOMBRE, 1)
						 ELSE
						  DIR.POBLACIONEXTRANJERA
					   END POBLACIONRESIDENCIA,
					   F_SIGA_GETRECURSO(PROV.NOMBRE, 1) PROVINCIARESIDENCIA,
					   F_SIGA_GETRECURSO(PAIS.NOMBRE, 1) PAISRESIDENCIA
				  FROM CEN_DIRECCIONES             DIR,
					   CEN_DIRECCION_TIPODIRECCION TIPO,
					   CEN_PAIS                    PAIS,
					   CEN_POBLACIONES             POBL,
					   CEN_PROVINCIAS              PROV
				 WHERE (DIR.IDINSTITUCION, DIR.IDPERSONA) = (%%IDINSTITUCION%%, %%IDPERSONA%%)
				   AND DIR.FECHABAJA IS NULL
				   AND TIPO.IDINSTITUCION(+) = DIR.IDINSTITUCION
				   AND TIPO.IDPERSONA(+) = DIR.IDPERSONA
				   AND TIPO.IDDIRECCION(+) = DIR.IDDIRECCION
				   AND TIPO.IDTIPODIRECCION = 1
				   AND PROV.IDPROVINCIA(+) = DIR.IDPROVINCIA
				   AND POBL.IDPOBLACION(+) = DIR.IDPOBLACION
				   AND PAIS.IDPAIS(+) = DIR.IDPAIS
				 ORDER BY DIR.FECHAMODIFICACION DESC)
		 </FROM><WHERE>WHERE ROWNUM = 1</WHERE>'),
   NULL,
   NULL,
   4,
   NULL,
   1 
   );
   
   --RECOGE LOS TIPOS Y SUBTIPOS DE CVS ASOCIADOS A UNA INSTITUCIÓN	
INSERT INTO CON_CONSULTA
   (IDINSTITUCION, 
   IDCONSULTA, 
   DESCRIPCION, 
   GENERAL, 
   TIPOCONSULTA, 
   IDMODULO, 
   FECHAMODIFICACION, 
   USUMODIFICACION, 
   BASES, 
   IDTABLA, 
   ESEXPERTA,
   SENTENCIA, 
   OBSERVACIONES, 
   FECHABAJA, 
   IDOBJETIVO, 
   IDCLASE, 
   IDCLASECOMUNICACION)
   VALUES
   (2000, 
   (SELECT MAX(IDCONSULTA) + 1
		FROM CON_CONSULTA CONS
	   WHERE CONS.IDINSTITUCION = 2000
	   AND CONS.IDCONSULTA < 630000),
   'MIGRACION CENSO: RECUPERAR TIPOS Y SUBTIPOS DE CVS ASOCIADOS A UNA INSTITUCION',
   1,
   'I',
   3,
   TO_DATE(SYSDATE,'DD/MM/YY'),
   1,
   NULL,
   NULL,
   1,  
   to_clob('<SELECT>SELECT TIP.IDTIPOCV,
			   SUB1.IDTIPOCVSUBTIPO1,
			   SUB2.IDTIPOCVSUBTIPO2,
			   '''' TIPOAPUNTE,
			   '''' IDCV,
			   '''' IDINSTITUCION,
			   '''' IDPERSONA,
			   '''' FECHAINICIO,
			   '''' FECHAFIN,
			   '''' DESCRIPCION,
			   '''' CERTIFICADO,
			   '''' CREDITOS,
			   '''' IDINSTITUCION_SUBT1,
			   '''' IDINSTITUCION_SUBT2,
			   '''' FECHAVERIFICACION,
			   '''' FECHABAJA,
			   '''' DESCSUBTIPO1,
			   '''' DESCSUBTIPO2
		  </SELECT><FROM>FROM CEN_TIPOSCV TIP, CEN_TIPOSCVSUBTIPO1 SUB1, CEN_TIPOSCVSUBTIPO2 SUB2
		 </FROM><WHERE>WHERE TIP.IDTIPOCV = SUB1.IDTIPOCV(+)
		   AND TIP.IDTIPOCV = SUB2.IDTIPOCV(+)
		 </WHERE><ORDER BY>ORDER BY TIP.IDTIPOCV</ORDER BY>'),
   NULL,
   NULL,
   4,
   NULL,
   1 
   );
   
   
   /* CVS */
								  
INSERT INTO CON_CONSULTA
   (IDINSTITUCION, 
   IDCONSULTA, 
   DESCRIPCION, 
   GENERAL, 
   TIPOCONSULTA, 
   IDMODULO, 
   FECHAMODIFICACION, 
   USUMODIFICACION, 
   BASES, 
   IDTABLA, 
   ESEXPERTA,
   SENTENCIA, 
   OBSERVACIONES, 
   FECHABAJA, 
   IDOBJETIVO, 
   IDCLASE, 
   IDCLASECOMUNICACION)
   VALUES
   (2000, 
   (SELECT MAX(IDCONSULTA) + 1
		FROM CON_CONSULTA CONS
	   WHERE CONS.IDINSTITUCION = 2000
	   AND CONS.IDCONSULTA < 630000),
   'MIGRACION CENSO: RECUPERAR CVS',
   1,
   'I',
   3,
   TO_DATE(SYSDATE,'DD/MM/YY'),
   1,
   NULL,
   NULL,
   1,  
   to_clob('<SELECT>SELECT IDTIPOCV,
			   IDTIPOCVSUBTIPO1,
			   IDTIPOCVSUBTIPO2,
			   TIPOAPUNTE,
			   IDCV,
			   IDINSTITUCION,
			   IDPERSONA,
			   TO_CHAR(FECHAINICIO, ''DD/MM/YYYY'') FECHAINICIO,
			   TO_CHAR(FECHAFIN, ''DD/MM/YYYY'') FECHAFIN,
			   F_SIGA_GETRECURSO_ETIQUETA(DECODE(CERTIFICADO,
												 1,
												 ''MESSAGES.SI'',
												 ''MESSAGES.NO''),
										  1) AS CERTIFICADO,
			   DESCRIPCION,
			   CREDITOS,
			   IDINSTITUCION_SUBT1,
			   IDINSTITUCION_SUBT2,
			   TO_CHAR(FECHAMOVIMIENTO, ''DD/MM/YYYY'') AS FECHAVERIFICACION,
			   TO_CHAR(FECHABAJA, ''DD/MM/YYYY'') FECHABAJA,
			   DESCSUBTIPO1,
			   DESCSUBTIPO2
		  </SELECT><FROM>FROM (SELECT F_SIGA_GETRECURSO(CEN_TIPOSCV.DESCRIPCION, 1) AS TIPOAPUNTE,
					   CEN_DATOSCV.IDCV,
					   CEN_DATOSCV.IDINSTITUCION,
					   CEN_DATOSCV.IDPERSONA,
					   CEN_DATOSCV.FECHAINICIO,
					   CEN_DATOSCV.FECHAFIN,
					   CEN_DATOSCV.DESCRIPCION,
					   CEN_DATOSCV.CERTIFICADO,
					   CEN_DATOSCV.CREDITOS,
					   CEN_DATOSCV.IDTIPOCV,
					   CEN_DATOSCV.IDTIPOCVSUBTIPO1,
					   CEN_DATOSCV.IDTIPOCVSUBTIPO2,
					   CEN_DATOSCV.IDINSTITUCION_SUBT1,
					   CEN_DATOSCV.IDINSTITUCION_SUBT2,
					   CEN_DATOSCV.FECHAMOVIMIENTO,
					   CEN_DATOSCV.FECHABAJA,
					   CEN_DATOSCV.IDINSTITUCIONCARGO,
					   (SELECT F_SIGA_GETRECURSO(DESCRIPCION, 1) DESCRIPCION
						  FROM CEN_TIPOSCVSUBTIPO1
						 WHERE IDTIPOCV = CEN_DATOSCV.IDTIPOCV
						   AND IDTIPOCVSUBTIPO1 = CEN_DATOSCV.IDTIPOCVSUBTIPO1
						   AND IDINSTITUCION = CEN_DATOSCV.IDINSTITUCION_SUBT1) DESCSUBTIPO1,
					   (SELECT F_SIGA_GETRECURSO(DESCRIPCION, 1) DESCRIPCION
						  FROM CEN_TIPOSCVSUBTIPO2
						 WHERE IDTIPOCV = CEN_DATOSCV.IDTIPOCV
						   AND IDTIPOCVSUBTIPO2 = CEN_DATOSCV.IDTIPOCVSUBTIPO2
						   AND IDINSTITUCION = CEN_DATOSCV.IDINSTITUCION_SUBT2) DESCSUBTIPO2
						FROM CEN_DATOSCV
				 INNER JOIN CEN_TIPOSCV ON CEN_DATOSCV.IDTIPOCV =
										   CEN_TIPOSCV.IDTIPOCV
				 WHERE  (CEN_DATOSCV.IDINSTITUCION, CEN_DATOSCV.IDPERSONA) = (%%IDINSTITUCION%%, %%IDPERSONA%%)
				 ORDER BY CEN_DATOSCV.IDTIPOCV,
						  CEN_DATOSCV.IDTIPOCVSUBTIPO1,
						  CEN_DATOSCV.IDTIPOCVSUBTIPO2,
						  CEN_DATOSCV.FECHAINICIO)</FROM>'),
   NULL,
   NULL,
   4,
   NULL,
   1 
   );
   
   
   /* QUERY DESTINATARIOS */
								  
INSERT INTO CON_CONSULTA
   (IDINSTITUCION, 
   IDCONSULTA, 
   DESCRIPCION, 
   GENERAL, 
   TIPOCONSULTA, 
   IDMODULO, 
   FECHAMODIFICACION, 
   USUMODIFICACION, 
   BASES, 
   IDTABLA, 
   ESEXPERTA,
   SENTENCIA, 
   OBSERVACIONES, 
   FECHABAJA, 
   IDOBJETIVO, 
   IDCLASE, 
   IDCLASECOMUNICACION)
   VALUES
   (2000, 
   (SELECT MAX(IDCONSULTA) + 1
		FROM CON_CONSULTA CONS
	   WHERE CONS.IDINSTITUCION = 2000
	   AND CONS.IDCONSULTA < 630000),
   'MIGRACION CENSO: CONSULTA DESTINATARIOS',
   1,
   'I',
   3,
   TO_DATE(SYSDATE,'DD/MM/YY'),
   1,
   NULL,
   NULL,
   1,  
	   to_clob('<SELECT>Select Per.Nombre As "nombre",
	       Trim(Per.Apellidos1 || '' '' || Per.Apellidos2) As "apellidos",
	       Col.Ncolegiado As "numcol",
	       --ini obligatorio por ser consulta destinatarios
	       Cen_Direcciones.Domicilio As "DOMICILIO",
	       Cen_Direcciones.Codigopostal As "CODIGOPOSTAL",
	       Cen_Direcciones.Idpoblacion As "IDPOBLACION",
	       Cen_Direcciones.Idprovincia As "IDPROVINCIA",
	       Cen_Direcciones.Idpais As "IDPAIS",
	       Cen_Direcciones.Correoelectronico As "CORREOELECTRONICO",
	       Cen_Direcciones.Movil As "MOVIL",
	       Cen_Direcciones.Fax1 As "FAX1",
	       Cen_Direcciones.Fax2 As "FAX2"
	</SELECT><FROM> From Cen_Persona Per, Cen_Colegiado Col, Cen_Direcciones, Cen_Direccion_Tipodireccion Tip </FROM>
	<WHERE> Where Per.Idpersona = Col.Idpersona
	   And Col.Idpersona = Cen_Direcciones.Idpersona
	   And Col.Idinstitucion = Cen_Direcciones.Idinstitucion
	   And Cen_Direcciones.Idinstitucion = Tip.Idinstitucion
	   And Cen_Direcciones.Idpersona = Tip.Idpersona
	   And Cen_Direcciones.Iddireccion = Tip.Iddireccion
	   And Cen_Direcciones.Fechabaja Is Null
	   And Tip.Idtipodireccion = 3
	   And Col.Idinstitucion =  %%IDINSTITUCION%%
	   And Col.Idpersona = %%IDPERSONA%%
	</WHERE>'),
   NULL,
   NULL,
   1,
   NULL,
   1 
   );
   
   COMMIT;
   
   