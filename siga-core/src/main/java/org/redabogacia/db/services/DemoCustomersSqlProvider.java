package org.redabogacia.db.services;

import org.redabogacia.db.entities.DemoCustomers;
import org.redabogacia.db.entities.DemoCustomersExample.Criteria;
import org.redabogacia.db.entities.DemoCustomersExample.Criterion;
import org.redabogacia.db.entities.DemoCustomersExample;
import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;

public class DemoCustomersSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEMO_SOCIEDADES.DEMO_CUSTOMERS
     *
     * @mbg.generated Wed Jan 31 17:21:07 CET 2018
     */
    public String countByExample(DemoCustomersExample example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("DEMO_SOCIEDADES.DEMO_CUSTOMERS");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEMO_SOCIEDADES.DEMO_CUSTOMERS
     *
     * @mbg.generated Wed Jan 31 17:21:07 CET 2018
     */
    public String deleteByExample(DemoCustomersExample example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("DEMO_SOCIEDADES.DEMO_CUSTOMERS");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEMO_SOCIEDADES.DEMO_CUSTOMERS
     *
     * @mbg.generated Wed Jan 31 17:21:07 CET 2018
     */
    public String insertSelective(DemoCustomers record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("DEMO_SOCIEDADES.DEMO_CUSTOMERS");
        
        if (record.getCustomerId() != null) {
            sql.VALUES("CUSTOMER_ID", "#{customerId,jdbcType=DECIMAL}");
        }
        
        if (record.getCustFirstName() != null) {
            sql.VALUES("CUST_FIRST_NAME", "#{custFirstName,jdbcType=VARCHAR}");
        }
        
        if (record.getCustLastName() != null) {
            sql.VALUES("CUST_LAST_NAME", "#{custLastName,jdbcType=VARCHAR}");
        }
        
        if (record.getCustStreetAddress1() != null) {
            sql.VALUES("CUST_STREET_ADDRESS1", "#{custStreetAddress1,jdbcType=VARCHAR}");
        }
        
        if (record.getCustStreetAddress2() != null) {
            sql.VALUES("CUST_STREET_ADDRESS2", "#{custStreetAddress2,jdbcType=VARCHAR}");
        }
        
        if (record.getCustCity() != null) {
            sql.VALUES("CUST_CITY", "#{custCity,jdbcType=VARCHAR}");
        }
        
        if (record.getCustState() != null) {
            sql.VALUES("CUST_STATE", "#{custState,jdbcType=VARCHAR}");
        }
        
        if (record.getCustPostalCode() != null) {
            sql.VALUES("CUST_POSTAL_CODE", "#{custPostalCode,jdbcType=VARCHAR}");
        }
        
        if (record.getPhoneNumber1() != null) {
            sql.VALUES("PHONE_NUMBER1", "#{phoneNumber1,jdbcType=VARCHAR}");
        }
        
        if (record.getPhoneNumber2() != null) {
            sql.VALUES("PHONE_NUMBER2", "#{phoneNumber2,jdbcType=VARCHAR}");
        }
        
        if (record.getCreditLimit() != null) {
            sql.VALUES("CREDIT_LIMIT", "#{creditLimit,jdbcType=DECIMAL}");
        }
        
        if (record.getCustEmail() != null) {
            sql.VALUES("CUST_EMAIL", "#{custEmail,jdbcType=VARCHAR}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEMO_SOCIEDADES.DEMO_CUSTOMERS
     *
     * @mbg.generated Wed Jan 31 17:21:07 CET 2018
     */
    public String selectByExample(DemoCustomersExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("CUSTOMER_ID");
        } else {
            sql.SELECT("CUSTOMER_ID");
        }
        sql.SELECT("CUST_FIRST_NAME");
        sql.SELECT("CUST_LAST_NAME");
        sql.SELECT("CUST_STREET_ADDRESS1");
        sql.SELECT("CUST_STREET_ADDRESS2");
        sql.SELECT("CUST_CITY");
        sql.SELECT("CUST_STATE");
        sql.SELECT("CUST_POSTAL_CODE");
        sql.SELECT("PHONE_NUMBER1");
        sql.SELECT("PHONE_NUMBER2");
        sql.SELECT("CREDIT_LIMIT");
        sql.SELECT("CUST_EMAIL");
        sql.FROM("DEMO_SOCIEDADES.DEMO_CUSTOMERS");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEMO_SOCIEDADES.DEMO_CUSTOMERS
     *
     * @mbg.generated Wed Jan 31 17:21:07 CET 2018
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        DemoCustomers record = (DemoCustomers) parameter.get("record");
        DemoCustomersExample example = (DemoCustomersExample) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("DEMO_SOCIEDADES.DEMO_CUSTOMERS");
        
        if (record.getCustomerId() != null) {
            sql.SET("CUSTOMER_ID = #{record.customerId,jdbcType=DECIMAL}");
        }
        
        if (record.getCustFirstName() != null) {
            sql.SET("CUST_FIRST_NAME = #{record.custFirstName,jdbcType=VARCHAR}");
        }
        
        if (record.getCustLastName() != null) {
            sql.SET("CUST_LAST_NAME = #{record.custLastName,jdbcType=VARCHAR}");
        }
        
        if (record.getCustStreetAddress1() != null) {
            sql.SET("CUST_STREET_ADDRESS1 = #{record.custStreetAddress1,jdbcType=VARCHAR}");
        }
        
        if (record.getCustStreetAddress2() != null) {
            sql.SET("CUST_STREET_ADDRESS2 = #{record.custStreetAddress2,jdbcType=VARCHAR}");
        }
        
        if (record.getCustCity() != null) {
            sql.SET("CUST_CITY = #{record.custCity,jdbcType=VARCHAR}");
        }
        
        if (record.getCustState() != null) {
            sql.SET("CUST_STATE = #{record.custState,jdbcType=VARCHAR}");
        }
        
        if (record.getCustPostalCode() != null) {
            sql.SET("CUST_POSTAL_CODE = #{record.custPostalCode,jdbcType=VARCHAR}");
        }
        
        if (record.getPhoneNumber1() != null) {
            sql.SET("PHONE_NUMBER1 = #{record.phoneNumber1,jdbcType=VARCHAR}");
        }
        
        if (record.getPhoneNumber2() != null) {
            sql.SET("PHONE_NUMBER2 = #{record.phoneNumber2,jdbcType=VARCHAR}");
        }
        
        if (record.getCreditLimit() != null) {
            sql.SET("CREDIT_LIMIT = #{record.creditLimit,jdbcType=DECIMAL}");
        }
        
        if (record.getCustEmail() != null) {
            sql.SET("CUST_EMAIL = #{record.custEmail,jdbcType=VARCHAR}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEMO_SOCIEDADES.DEMO_CUSTOMERS
     *
     * @mbg.generated Wed Jan 31 17:21:07 CET 2018
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("DEMO_SOCIEDADES.DEMO_CUSTOMERS");
        
        sql.SET("CUSTOMER_ID = #{record.customerId,jdbcType=DECIMAL}");
        sql.SET("CUST_FIRST_NAME = #{record.custFirstName,jdbcType=VARCHAR}");
        sql.SET("CUST_LAST_NAME = #{record.custLastName,jdbcType=VARCHAR}");
        sql.SET("CUST_STREET_ADDRESS1 = #{record.custStreetAddress1,jdbcType=VARCHAR}");
        sql.SET("CUST_STREET_ADDRESS2 = #{record.custStreetAddress2,jdbcType=VARCHAR}");
        sql.SET("CUST_CITY = #{record.custCity,jdbcType=VARCHAR}");
        sql.SET("CUST_STATE = #{record.custState,jdbcType=VARCHAR}");
        sql.SET("CUST_POSTAL_CODE = #{record.custPostalCode,jdbcType=VARCHAR}");
        sql.SET("PHONE_NUMBER1 = #{record.phoneNumber1,jdbcType=VARCHAR}");
        sql.SET("PHONE_NUMBER2 = #{record.phoneNumber2,jdbcType=VARCHAR}");
        sql.SET("CREDIT_LIMIT = #{record.creditLimit,jdbcType=DECIMAL}");
        sql.SET("CUST_EMAIL = #{record.custEmail,jdbcType=VARCHAR}");
        
        DemoCustomersExample example = (DemoCustomersExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEMO_SOCIEDADES.DEMO_CUSTOMERS
     *
     * @mbg.generated Wed Jan 31 17:21:07 CET 2018
     */
    public String updateByPrimaryKeySelective(DemoCustomers record) {
        SQL sql = new SQL();
        sql.UPDATE("DEMO_SOCIEDADES.DEMO_CUSTOMERS");
        
        if (record.getCustFirstName() != null) {
            sql.SET("CUST_FIRST_NAME = #{custFirstName,jdbcType=VARCHAR}");
        }
        
        if (record.getCustLastName() != null) {
            sql.SET("CUST_LAST_NAME = #{custLastName,jdbcType=VARCHAR}");
        }
        
        if (record.getCustStreetAddress1() != null) {
            sql.SET("CUST_STREET_ADDRESS1 = #{custStreetAddress1,jdbcType=VARCHAR}");
        }
        
        if (record.getCustStreetAddress2() != null) {
            sql.SET("CUST_STREET_ADDRESS2 = #{custStreetAddress2,jdbcType=VARCHAR}");
        }
        
        if (record.getCustCity() != null) {
            sql.SET("CUST_CITY = #{custCity,jdbcType=VARCHAR}");
        }
        
        if (record.getCustState() != null) {
            sql.SET("CUST_STATE = #{custState,jdbcType=VARCHAR}");
        }
        
        if (record.getCustPostalCode() != null) {
            sql.SET("CUST_POSTAL_CODE = #{custPostalCode,jdbcType=VARCHAR}");
        }
        
        if (record.getPhoneNumber1() != null) {
            sql.SET("PHONE_NUMBER1 = #{phoneNumber1,jdbcType=VARCHAR}");
        }
        
        if (record.getPhoneNumber2() != null) {
            sql.SET("PHONE_NUMBER2 = #{phoneNumber2,jdbcType=VARCHAR}");
        }
        
        if (record.getCreditLimit() != null) {
            sql.SET("CREDIT_LIMIT = #{creditLimit,jdbcType=DECIMAL}");
        }
        
        if (record.getCustEmail() != null) {
            sql.SET("CUST_EMAIL = #{custEmail,jdbcType=VARCHAR}");
        }
        
        sql.WHERE("CUSTOMER_ID = #{customerId,jdbcType=DECIMAL}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEMO_SOCIEDADES.DEMO_CUSTOMERS
     *
     * @mbg.generated Wed Jan 31 17:21:07 CET 2018
     */
    protected void applyWhere(SQL sql, DemoCustomersExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}