package org.itcgae.siga.db.entities;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CenEstadoactividadpersonaExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table USCGAE_DESA.CEN_ESTADOACTIVIDADPERSONA
	 * @mbg.generated  Wed Mar 14 18:23:45 CET 2018
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table USCGAE_DESA.CEN_ESTADOACTIVIDADPERSONA
	 * @mbg.generated  Wed Mar 14 18:23:45 CET 2018
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table USCGAE_DESA.CEN_ESTADOACTIVIDADPERSONA
	 * @mbg.generated  Wed Mar 14 18:23:45 CET 2018
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_DESA.CEN_ESTADOACTIVIDADPERSONA
	 * @mbg.generated  Wed Mar 14 18:23:45 CET 2018
	 */
	public CenEstadoactividadpersonaExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_DESA.CEN_ESTADOACTIVIDADPERSONA
	 * @mbg.generated  Wed Mar 14 18:23:45 CET 2018
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_DESA.CEN_ESTADOACTIVIDADPERSONA
	 * @mbg.generated  Wed Mar 14 18:23:45 CET 2018
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_DESA.CEN_ESTADOACTIVIDADPERSONA
	 * @mbg.generated  Wed Mar 14 18:23:45 CET 2018
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_DESA.CEN_ESTADOACTIVIDADPERSONA
	 * @mbg.generated  Wed Mar 14 18:23:45 CET 2018
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_DESA.CEN_ESTADOACTIVIDADPERSONA
	 * @mbg.generated  Wed Mar 14 18:23:45 CET 2018
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_DESA.CEN_ESTADOACTIVIDADPERSONA
	 * @mbg.generated  Wed Mar 14 18:23:45 CET 2018
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_DESA.CEN_ESTADOACTIVIDADPERSONA
	 * @mbg.generated  Wed Mar 14 18:23:45 CET 2018
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_DESA.CEN_ESTADOACTIVIDADPERSONA
	 * @mbg.generated  Wed Mar 14 18:23:45 CET 2018
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_DESA.CEN_ESTADOACTIVIDADPERSONA
	 * @mbg.generated  Wed Mar 14 18:23:45 CET 2018
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_DESA.CEN_ESTADOACTIVIDADPERSONA
	 * @mbg.generated  Wed Mar 14 18:23:45 CET 2018
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table USCGAE_DESA.CEN_ESTADOACTIVIDADPERSONA
	 * @mbg.generated  Wed Mar 14 18:23:45 CET 2018
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdpersonaIsNull() {
			addCriterion("IDPERSONA is null");
			return (Criteria) this;
		}

		public Criteria andIdpersonaIsNotNull() {
			addCriterion("IDPERSONA is not null");
			return (Criteria) this;
		}

		public Criteria andIdpersonaEqualTo(Long value) {
			addCriterion("IDPERSONA =", value, "idpersona");
			return (Criteria) this;
		}

		public Criteria andIdpersonaNotEqualTo(Long value) {
			addCriterion("IDPERSONA <>", value, "idpersona");
			return (Criteria) this;
		}

		public Criteria andIdpersonaGreaterThan(Long value) {
			addCriterion("IDPERSONA >", value, "idpersona");
			return (Criteria) this;
		}

		public Criteria andIdpersonaGreaterThanOrEqualTo(Long value) {
			addCriterion("IDPERSONA >=", value, "idpersona");
			return (Criteria) this;
		}

		public Criteria andIdpersonaLessThan(Long value) {
			addCriterion("IDPERSONA <", value, "idpersona");
			return (Criteria) this;
		}

		public Criteria andIdpersonaLessThanOrEqualTo(Long value) {
			addCriterion("IDPERSONA <=", value, "idpersona");
			return (Criteria) this;
		}

		public Criteria andIdpersonaIn(List<Long> values) {
			addCriterion("IDPERSONA in", values, "idpersona");
			return (Criteria) this;
		}

		public Criteria andIdpersonaNotIn(List<Long> values) {
			addCriterion("IDPERSONA not in", values, "idpersona");
			return (Criteria) this;
		}

		public Criteria andIdpersonaBetween(Long value1, Long value2) {
			addCriterion("IDPERSONA between", value1, value2, "idpersona");
			return (Criteria) this;
		}

		public Criteria andIdpersonaNotBetween(Long value1, Long value2) {
			addCriterion("IDPERSONA not between", value1, value2, "idpersona");
			return (Criteria) this;
		}

		public Criteria andIdcodigoIsNull() {
			addCriterion("IDCODIGO is null");
			return (Criteria) this;
		}

		public Criteria andIdcodigoIsNotNull() {
			addCriterion("IDCODIGO is not null");
			return (Criteria) this;
		}

		public Criteria andIdcodigoEqualTo(Short value) {
			addCriterion("IDCODIGO =", value, "idcodigo");
			return (Criteria) this;
		}

		public Criteria andIdcodigoNotEqualTo(Short value) {
			addCriterion("IDCODIGO <>", value, "idcodigo");
			return (Criteria) this;
		}

		public Criteria andIdcodigoGreaterThan(Short value) {
			addCriterion("IDCODIGO >", value, "idcodigo");
			return (Criteria) this;
		}

		public Criteria andIdcodigoGreaterThanOrEqualTo(Short value) {
			addCriterion("IDCODIGO >=", value, "idcodigo");
			return (Criteria) this;
		}

		public Criteria andIdcodigoLessThan(Short value) {
			addCriterion("IDCODIGO <", value, "idcodigo");
			return (Criteria) this;
		}

		public Criteria andIdcodigoLessThanOrEqualTo(Short value) {
			addCriterion("IDCODIGO <=", value, "idcodigo");
			return (Criteria) this;
		}

		public Criteria andIdcodigoIn(List<Short> values) {
			addCriterion("IDCODIGO in", values, "idcodigo");
			return (Criteria) this;
		}

		public Criteria andIdcodigoNotIn(List<Short> values) {
			addCriterion("IDCODIGO not in", values, "idcodigo");
			return (Criteria) this;
		}

		public Criteria andIdcodigoBetween(Short value1, Short value2) {
			addCriterion("IDCODIGO between", value1, value2, "idcodigo");
			return (Criteria) this;
		}

		public Criteria andIdcodigoNotBetween(Short value1, Short value2) {
			addCriterion("IDCODIGO not between", value1, value2, "idcodigo");
			return (Criteria) this;
		}

		public Criteria andFechaestadoIsNull() {
			addCriterion("FECHAESTADO is null");
			return (Criteria) this;
		}

		public Criteria andFechaestadoIsNotNull() {
			addCriterion("FECHAESTADO is not null");
			return (Criteria) this;
		}

		public Criteria andFechaestadoEqualTo(Date value) {
			addCriterion("FECHAESTADO =", value, "fechaestado");
			return (Criteria) this;
		}

		public Criteria andFechaestadoNotEqualTo(Date value) {
			addCriterion("FECHAESTADO <>", value, "fechaestado");
			return (Criteria) this;
		}

		public Criteria andFechaestadoGreaterThan(Date value) {
			addCriterion("FECHAESTADO >", value, "fechaestado");
			return (Criteria) this;
		}

		public Criteria andFechaestadoGreaterThanOrEqualTo(Date value) {
			addCriterion("FECHAESTADO >=", value, "fechaestado");
			return (Criteria) this;
		}

		public Criteria andFechaestadoLessThan(Date value) {
			addCriterion("FECHAESTADO <", value, "fechaestado");
			return (Criteria) this;
		}

		public Criteria andFechaestadoLessThanOrEqualTo(Date value) {
			addCriterion("FECHAESTADO <=", value, "fechaestado");
			return (Criteria) this;
		}

		public Criteria andFechaestadoIn(List<Date> values) {
			addCriterion("FECHAESTADO in", values, "fechaestado");
			return (Criteria) this;
		}

		public Criteria andFechaestadoNotIn(List<Date> values) {
			addCriterion("FECHAESTADO not in", values, "fechaestado");
			return (Criteria) this;
		}

		public Criteria andFechaestadoBetween(Date value1, Date value2) {
			addCriterion("FECHAESTADO between", value1, value2, "fechaestado");
			return (Criteria) this;
		}

		public Criteria andFechaestadoNotBetween(Date value1, Date value2) {
			addCriterion("FECHAESTADO not between", value1, value2, "fechaestado");
			return (Criteria) this;
		}

		public Criteria andIdestadoIsNull() {
			addCriterion("IDESTADO is null");
			return (Criteria) this;
		}

		public Criteria andIdestadoIsNotNull() {
			addCriterion("IDESTADO is not null");
			return (Criteria) this;
		}

		public Criteria andIdestadoEqualTo(Short value) {
			addCriterion("IDESTADO =", value, "idestado");
			return (Criteria) this;
		}

		public Criteria andIdestadoNotEqualTo(Short value) {
			addCriterion("IDESTADO <>", value, "idestado");
			return (Criteria) this;
		}

		public Criteria andIdestadoGreaterThan(Short value) {
			addCriterion("IDESTADO >", value, "idestado");
			return (Criteria) this;
		}

		public Criteria andIdestadoGreaterThanOrEqualTo(Short value) {
			addCriterion("IDESTADO >=", value, "idestado");
			return (Criteria) this;
		}

		public Criteria andIdestadoLessThan(Short value) {
			addCriterion("IDESTADO <", value, "idestado");
			return (Criteria) this;
		}

		public Criteria andIdestadoLessThanOrEqualTo(Short value) {
			addCriterion("IDESTADO <=", value, "idestado");
			return (Criteria) this;
		}

		public Criteria andIdestadoIn(List<Short> values) {
			addCriterion("IDESTADO in", values, "idestado");
			return (Criteria) this;
		}

		public Criteria andIdestadoNotIn(List<Short> values) {
			addCriterion("IDESTADO not in", values, "idestado");
			return (Criteria) this;
		}

		public Criteria andIdestadoBetween(Short value1, Short value2) {
			addCriterion("IDESTADO between", value1, value2, "idestado");
			return (Criteria) this;
		}

		public Criteria andIdestadoNotBetween(Short value1, Short value2) {
			addCriterion("IDESTADO not between", value1, value2, "idestado");
			return (Criteria) this;
		}

		public Criteria andMotivoIsNull() {
			addCriterion("MOTIVO is null");
			return (Criteria) this;
		}

		public Criteria andMotivoIsNotNull() {
			addCriterion("MOTIVO is not null");
			return (Criteria) this;
		}

		public Criteria andMotivoEqualTo(String value) {
			addCriterion("MOTIVO =", value, "motivo");
			return (Criteria) this;
		}

		public Criteria andMotivoNotEqualTo(String value) {
			addCriterion("MOTIVO <>", value, "motivo");
			return (Criteria) this;
		}

		public Criteria andMotivoGreaterThan(String value) {
			addCriterion("MOTIVO >", value, "motivo");
			return (Criteria) this;
		}

		public Criteria andMotivoGreaterThanOrEqualTo(String value) {
			addCriterion("MOTIVO >=", value, "motivo");
			return (Criteria) this;
		}

		public Criteria andMotivoLessThan(String value) {
			addCriterion("MOTIVO <", value, "motivo");
			return (Criteria) this;
		}

		public Criteria andMotivoLessThanOrEqualTo(String value) {
			addCriterion("MOTIVO <=", value, "motivo");
			return (Criteria) this;
		}

		public Criteria andMotivoLike(String value) {
			addCriterion("MOTIVO like", value, "motivo");
			return (Criteria) this;
		}

		public Criteria andMotivoNotLike(String value) {
			addCriterion("MOTIVO not like", value, "motivo");
			return (Criteria) this;
		}

		public Criteria andMotivoIn(List<String> values) {
			addCriterion("MOTIVO in", values, "motivo");
			return (Criteria) this;
		}

		public Criteria andMotivoNotIn(List<String> values) {
			addCriterion("MOTIVO not in", values, "motivo");
			return (Criteria) this;
		}

		public Criteria andMotivoBetween(String value1, String value2) {
			addCriterion("MOTIVO between", value1, value2, "motivo");
			return (Criteria) this;
		}

		public Criteria andMotivoNotBetween(String value1, String value2) {
			addCriterion("MOTIVO not between", value1, value2, "motivo");
			return (Criteria) this;
		}

		public Criteria andFechamodificacionIsNull() {
			addCriterion("FECHAMODIFICACION is null");
			return (Criteria) this;
		}

		public Criteria andFechamodificacionIsNotNull() {
			addCriterion("FECHAMODIFICACION is not null");
			return (Criteria) this;
		}

		public Criteria andFechamodificacionEqualTo(Date value) {
			addCriterion("FECHAMODIFICACION =", value, "fechamodificacion");
			return (Criteria) this;
		}

		public Criteria andFechamodificacionNotEqualTo(Date value) {
			addCriterion("FECHAMODIFICACION <>", value, "fechamodificacion");
			return (Criteria) this;
		}

		public Criteria andFechamodificacionGreaterThan(Date value) {
			addCriterion("FECHAMODIFICACION >", value, "fechamodificacion");
			return (Criteria) this;
		}

		public Criteria andFechamodificacionGreaterThanOrEqualTo(Date value) {
			addCriterion("FECHAMODIFICACION >=", value, "fechamodificacion");
			return (Criteria) this;
		}

		public Criteria andFechamodificacionLessThan(Date value) {
			addCriterion("FECHAMODIFICACION <", value, "fechamodificacion");
			return (Criteria) this;
		}

		public Criteria andFechamodificacionLessThanOrEqualTo(Date value) {
			addCriterion("FECHAMODIFICACION <=", value, "fechamodificacion");
			return (Criteria) this;
		}

		public Criteria andFechamodificacionIn(List<Date> values) {
			addCriterion("FECHAMODIFICACION in", values, "fechamodificacion");
			return (Criteria) this;
		}

		public Criteria andFechamodificacionNotIn(List<Date> values) {
			addCriterion("FECHAMODIFICACION not in", values, "fechamodificacion");
			return (Criteria) this;
		}

		public Criteria andFechamodificacionBetween(Date value1, Date value2) {
			addCriterion("FECHAMODIFICACION between", value1, value2, "fechamodificacion");
			return (Criteria) this;
		}

		public Criteria andFechamodificacionNotBetween(Date value1, Date value2) {
			addCriterion("FECHAMODIFICACION not between", value1, value2, "fechamodificacion");
			return (Criteria) this;
		}

		public Criteria andUsumodificacionIsNull() {
			addCriterion("USUMODIFICACION is null");
			return (Criteria) this;
		}

		public Criteria andUsumodificacionIsNotNull() {
			addCriterion("USUMODIFICACION is not null");
			return (Criteria) this;
		}

		public Criteria andUsumodificacionEqualTo(Integer value) {
			addCriterion("USUMODIFICACION =", value, "usumodificacion");
			return (Criteria) this;
		}

		public Criteria andUsumodificacionNotEqualTo(Integer value) {
			addCriterion("USUMODIFICACION <>", value, "usumodificacion");
			return (Criteria) this;
		}

		public Criteria andUsumodificacionGreaterThan(Integer value) {
			addCriterion("USUMODIFICACION >", value, "usumodificacion");
			return (Criteria) this;
		}

		public Criteria andUsumodificacionGreaterThanOrEqualTo(Integer value) {
			addCriterion("USUMODIFICACION >=", value, "usumodificacion");
			return (Criteria) this;
		}

		public Criteria andUsumodificacionLessThan(Integer value) {
			addCriterion("USUMODIFICACION <", value, "usumodificacion");
			return (Criteria) this;
		}

		public Criteria andUsumodificacionLessThanOrEqualTo(Integer value) {
			addCriterion("USUMODIFICACION <=", value, "usumodificacion");
			return (Criteria) this;
		}

		public Criteria andUsumodificacionIn(List<Integer> values) {
			addCriterion("USUMODIFICACION in", values, "usumodificacion");
			return (Criteria) this;
		}

		public Criteria andUsumodificacionNotIn(List<Integer> values) {
			addCriterion("USUMODIFICACION not in", values, "usumodificacion");
			return (Criteria) this;
		}

		public Criteria andUsumodificacionBetween(Integer value1, Integer value2) {
			addCriterion("USUMODIFICACION between", value1, value2, "usumodificacion");
			return (Criteria) this;
		}

		public Criteria andUsumodificacionNotBetween(Integer value1, Integer value2) {
			addCriterion("USUMODIFICACION not between", value1, value2, "usumodificacion");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table USCGAE_DESA.CEN_ESTADOACTIVIDADPERSONA
	 * @mbg.generated  Wed Mar 14 18:23:45 CET 2018
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE_DESA.CEN_ESTADOACTIVIDADPERSONA
     *
     * @mbg.generated do_not_delete_during_merge Wed Mar 07 17:49:31 CET 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}