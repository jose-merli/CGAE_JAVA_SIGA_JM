package org.itcgae.siga.db.mappers;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.jdbc.SQL;
import org.itcgae.siga.db.entities.ScsCabeceraguardias;
import org.itcgae.siga.db.entities.ScsCabeceraguardiasExample;
import org.itcgae.siga.db.entities.ScsCabeceraguardiasExample.Criteria;
import org.itcgae.siga.db.entities.ScsCabeceraguardiasExample.Criterion;

public class ScsCabeceraguardiasSqlProvider {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.SCS_CABECERAGUARDIAS
	 * @mbg.generated  Tue Aug 31 09:04:15 CEST 2021
	 */
	public String countByExample(ScsCabeceraguardiasExample example) {
		SQL sql = new SQL();
		sql.SELECT("count(*)").FROM("SCS_CABECERAGUARDIAS");
		applyWhere(sql, example, false);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.SCS_CABECERAGUARDIAS
	 * @mbg.generated  Tue Aug 31 09:04:15 CEST 2021
	 */
	public String deleteByExample(ScsCabeceraguardiasExample example) {
		SQL sql = new SQL();
		sql.DELETE_FROM("SCS_CABECERAGUARDIAS");
		applyWhere(sql, example, false);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.SCS_CABECERAGUARDIAS
	 * @mbg.generated  Tue Aug 31 09:04:15 CEST 2021
	 */
	public String insertSelective(ScsCabeceraguardias record) {
		SQL sql = new SQL();
		sql.INSERT_INTO("SCS_CABECERAGUARDIAS");
		if (record.getIdinstitucion() != null) {
			sql.VALUES("IDINSTITUCION", "#{idinstitucion,jdbcType=DECIMAL}");
		}
		if (record.getIdturno() != null) {
			sql.VALUES("IDTURNO", "#{idturno,jdbcType=DECIMAL}");
		}
		if (record.getIdguardia() != null) {
			sql.VALUES("IDGUARDIA", "#{idguardia,jdbcType=DECIMAL}");
		}
		if (record.getIdpersona() != null) {
			sql.VALUES("IDPERSONA", "#{idpersona,jdbcType=DECIMAL}");
		}
		if (record.getFechainicio() != null) {
			sql.VALUES("FECHAINICIO", "#{fechainicio,jdbcType=TIMESTAMP}");
		}
		if (record.getIdcalendarioguardias() != null) {
			sql.VALUES("IDCALENDARIOGUARDIAS", "#{idcalendarioguardias,jdbcType=DECIMAL}");
		}
		if (record.getFechaFin() != null) {
			sql.VALUES("FECHA_FIN", "#{fechaFin,jdbcType=TIMESTAMP}");
		}
		if (record.getFechamodificacion() != null) {
			sql.VALUES("FECHAMODIFICACION", "#{fechamodificacion,jdbcType=TIMESTAMP}");
		}
		if (record.getSustituto() != null) {
			sql.VALUES("SUSTITUTO", "#{sustituto,jdbcType=VARCHAR}");
		}
		if (record.getUsumodificacion() != null) {
			sql.VALUES("USUMODIFICACION", "#{usumodificacion,jdbcType=DECIMAL}");
		}
		if (record.getFacturado() != null) {
			sql.VALUES("FACTURADO", "#{facturado,jdbcType=VARCHAR}");
		}
		if (record.getPagado() != null) {
			sql.VALUES("PAGADO", "#{pagado,jdbcType=VARCHAR}");
		}
		if (record.getValidado() != null) {
			sql.VALUES("VALIDADO", "#{validado,jdbcType=VARCHAR}");
		}
		if (record.getLetradosustituido() != null) {
			sql.VALUES("LETRADOSUSTITUIDO", "#{letradosustituido,jdbcType=DECIMAL}");
		}
		if (record.getFechasustitucion() != null) {
			sql.VALUES("FECHASUSTITUCION", "#{fechasustitucion,jdbcType=TIMESTAMP}");
		}
		if (record.getComensustitucion() != null) {
			sql.VALUES("COMENSUSTITUCION", "#{comensustitucion,jdbcType=VARCHAR}");
		}
		if (record.getFechavalidacion() != null) {
			sql.VALUES("FECHAVALIDACION", "#{fechavalidacion,jdbcType=TIMESTAMP}");
		}
		if (record.getIdfacturacion() != null) {
			sql.VALUES("IDFACTURACION", "#{idfacturacion,jdbcType=DECIMAL}");
		}
		if (record.getFechaalta() != null) {
			sql.VALUES("FECHAALTA", "#{fechaalta,jdbcType=TIMESTAMP}");
		}
		if (record.getPosicion() != null) {
			sql.VALUES("POSICION", "#{posicion,jdbcType=DECIMAL}");
		}
		if (record.getUsualta() != null) {
			sql.VALUES("USUALTA", "#{usualta,jdbcType=DECIMAL}");
		}
		if (record.getNumerogrupo() != null) {
			sql.VALUES("NUMEROGRUPO", "#{numerogrupo,jdbcType=DECIMAL}");
		}
		if (record.getObservacionesanulacion() != null) {
			sql.VALUES("OBSERVACIONESANULACION", "#{observacionesanulacion,jdbcType=VARCHAR}");
		}
		if (record.getIdmovimiento() != null) {
			sql.VALUES("IDMOVIMIENTO", "#{idmovimiento,jdbcType=DECIMAL}");
		}
		return sql.toString();
	}
	
	
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.SCS_CABECERAGUARDIAS
     *
     * @mbg.generated Fri Dec 14 13:11:58 CET 2018
     */
    public String insertSelective2(ScsCabeceraguardias record, String fechaInicioPSt, String fechaFinPSt, String today, String idInstitucion, String idturno, String idguardia, String idpersona, String fechaalta) {
        SQL sql = new SQL();
        sql.INSERT_INTO("SCS_CABECERAGUARDIAS");
        
        if (record.getIdinstitucion() != null) {
            sql.VALUES("IDINSTITUCION", idInstitucion);
        }
        
        if (record.getIdturno() != null) {
            sql.VALUES("IDTURNO", idturno);
        }
        
        if (record.getIdguardia() != null) {
            sql.VALUES("IDGUARDIA", idguardia);
        }
        
        if (record.getIdpersona() != null) {
            sql.VALUES("IDPERSONA", idpersona);
        }
        
        if (record.getFechainicio() != null) {
            sql.VALUES("FECHAINICIO", "'" + fechaInicioPSt + "'");
        }
        
        if (record.getIdcalendarioguardias() != null) {
            sql.VALUES("IDCALENDARIOGUARDIAS", record.getIdcalendarioguardias().toString());
        }
        
        if (record.getFechaFin() != null) {
            sql.VALUES("FECHA_FIN", "'" + fechaFinPSt + "'");
        }
        
        if (record.getFechamodificacion() != null) {
            sql.VALUES("FECHAMODIFICACION", "'" + today + "'");
        }
        
        if (record.getSustituto() != null) {
            sql.VALUES("SUSTITUTO", record.getSustituto());
        }
        
        if (record.getUsumodificacion() != null) {
            sql.VALUES("USUMODIFICACION", record.getUsumodificacion().toString());
        }
        
        if (record.getFacturado() != null && !record.getFacturado().isEmpty()) {
            sql.VALUES("FACTURADO", record.getFacturado());
        }
        
        if (record.getPagado() != null && !record.getPagado().isEmpty()) {
            sql.VALUES("PAGADO", record.getPagado());
        }
        
        if (record.getValidado() != null) {
            sql.VALUES("VALIDADO", record.getValidado());
        }
        
        if (record.getLetradosustituido() != null) {
            sql.VALUES("LETRADOSUSTITUIDO", record.getLetradosustituido().toString());
        }
        
        if (record.getFechasustitucion() != null) {
            sql.VALUES("FECHASUSTITUCION", "'" + record.getFechasustitucion().toString()+ "'");
        }
        
        if (record.getComensustitucion() != null) {
            sql.VALUES("COMENSUSTITUCION", "'" + record.getComensustitucion()+ "'");
        }
        
        if (record.getFechavalidacion() != null) {
            sql.VALUES("FECHAVALIDACION", "'" + record.getFechavalidacion().toString() + "'");
        }
        
        if (record.getIdfacturacion() != null) {
            sql.VALUES("IDFACTURACION", record.getIdfacturacion().toString() );
        }
        
        if (fechaalta != null) {
            sql.VALUES("FECHAALTA", "'" + fechaalta + "'");
        }else {
        	sql.VALUES("FECHAALTA", "'" + today + "'");
        }
        
        if (record.getPosicion() != null) {
            sql.VALUES("POSICION", record.getPosicion().toString());
        }
        
        if (record.getUsualta() != null) {
            sql.VALUES("USUALTA", record.getUsualta().toString());
        }
        
        if (record.getNumerogrupo() != null) {
            sql.VALUES("NUMEROGRUPO", record.getNumerogrupo().toString());
        }
        
        if (record.getObservacionesanulacion() != null) {
            sql.VALUES("OBSERVACIONESANULACION", record.getObservacionesanulacion());
        }
        
        if (record.getIdmovimiento() != null) {
            sql.VALUES("IDMOVIMIENTO", record.getIdmovimiento().toString());
        }
        
        return sql.toString();
    }

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.SCS_CABECERAGUARDIAS
	 * @mbg.generated  Tue Aug 31 09:04:15 CEST 2021
	 */
	public String selectByExample(ScsCabeceraguardiasExample example) {
		SQL sql = new SQL();
		if (example != null && example.isDistinct()) {
			sql.SELECT_DISTINCT("IDINSTITUCION");
		} else {
			sql.SELECT("IDINSTITUCION");
		}
		sql.SELECT("IDTURNO");
		sql.SELECT("IDGUARDIA");
		sql.SELECT("IDPERSONA");
		sql.SELECT("FECHAINICIO");
		sql.SELECT("IDCALENDARIOGUARDIAS");
		sql.SELECT("FECHA_FIN");
		sql.SELECT("FECHAMODIFICACION");
		sql.SELECT("SUSTITUTO");
		sql.SELECT("USUMODIFICACION");
		sql.SELECT("FACTURADO");
		sql.SELECT("PAGADO");
		sql.SELECT("VALIDADO");
		sql.SELECT("LETRADOSUSTITUIDO");
		sql.SELECT("FECHASUSTITUCION");
		sql.SELECT("COMENSUSTITUCION");
		sql.SELECT("FECHAVALIDACION");
		sql.SELECT("IDFACTURACION");
		sql.SELECT("FECHAALTA");
		sql.SELECT("POSICION");
		sql.SELECT("USUALTA");
		sql.SELECT("NUMEROGRUPO");
		sql.SELECT("OBSERVACIONESANULACION");
		sql.SELECT("IDMOVIMIENTO");
		sql.FROM("SCS_CABECERAGUARDIAS");
		applyWhere(sql, example, false);
		if (example != null && example.getOrderByClause() != null) {
			sql.ORDER_BY(example.getOrderByClause());
		}
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.SCS_CABECERAGUARDIAS
	 * @mbg.generated  Tue Aug 31 09:04:15 CEST 2021
	 */
	public String updateByExampleSelective(Map<String, Object> parameter) {
		ScsCabeceraguardias record = (ScsCabeceraguardias) parameter.get("record");
		ScsCabeceraguardiasExample example = (ScsCabeceraguardiasExample) parameter.get("example");
		SQL sql = new SQL();
		sql.UPDATE("SCS_CABECERAGUARDIAS");
		if (record.getIdinstitucion() != null) {
			sql.SET("IDINSTITUCION = #{record.idinstitucion,jdbcType=DECIMAL}");
		}
		if (record.getIdturno() != null) {
			sql.SET("IDTURNO = #{record.idturno,jdbcType=DECIMAL}");
		}
		if (record.getIdguardia() != null) {
			sql.SET("IDGUARDIA = #{record.idguardia,jdbcType=DECIMAL}");
		}
		if (record.getIdpersona() != null) {
			sql.SET("IDPERSONA = #{record.idpersona,jdbcType=DECIMAL}");
		}
		if (record.getFechainicio() != null) {
			sql.SET("FECHAINICIO = #{record.fechainicio,jdbcType=TIMESTAMP}");
		}
		if (record.getIdcalendarioguardias() != null) {
			sql.SET("IDCALENDARIOGUARDIAS = #{record.idcalendarioguardias,jdbcType=DECIMAL}");
		}
		if (record.getFechaFin() != null) {
			sql.SET("FECHA_FIN = #{record.fechaFin,jdbcType=TIMESTAMP}");
		}
		if (record.getFechamodificacion() != null) {
			sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=TIMESTAMP}");
		}
		if (record.getSustituto() != null) {
			sql.SET("SUSTITUTO = #{record.sustituto,jdbcType=VARCHAR}");
		}
		if (record.getUsumodificacion() != null) {
			sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
		}
		if (record.getFacturado() != null) {
			sql.SET("FACTURADO = #{record.facturado,jdbcType=VARCHAR}");
		}
		if (record.getPagado() != null) {
			sql.SET("PAGADO = #{record.pagado,jdbcType=VARCHAR}");
		}
		if (record.getValidado() != null) {
			sql.SET("VALIDADO = #{record.validado,jdbcType=VARCHAR}");
		}
		if (record.getLetradosustituido() != null) {
			sql.SET("LETRADOSUSTITUIDO = #{record.letradosustituido,jdbcType=DECIMAL}");
		}
		if (record.getFechasustitucion() != null) {
			sql.SET("FECHASUSTITUCION = #{record.fechasustitucion,jdbcType=TIMESTAMP}");
		}
		if (record.getComensustitucion() != null) {
			sql.SET("COMENSUSTITUCION = #{record.comensustitucion,jdbcType=VARCHAR}");
		}
		if (record.getFechavalidacion() != null) {
			sql.SET("FECHAVALIDACION = #{record.fechavalidacion,jdbcType=TIMESTAMP}");
		}
		if (record.getIdfacturacion() != null) {
			sql.SET("IDFACTURACION = #{record.idfacturacion,jdbcType=DECIMAL}");
		}
		if (record.getFechaalta() != null) {
			sql.SET("FECHAALTA = #{record.fechaalta,jdbcType=TIMESTAMP}");
		}
		if (record.getPosicion() != null) {
			sql.SET("POSICION = #{record.posicion,jdbcType=DECIMAL}");
		}
		if (record.getUsualta() != null) {
			sql.SET("USUALTA = #{record.usualta,jdbcType=DECIMAL}");
		}
		if (record.getNumerogrupo() != null) {
			sql.SET("NUMEROGRUPO = #{record.numerogrupo,jdbcType=DECIMAL}");
		}
		if (record.getObservacionesanulacion() != null) {
			sql.SET("OBSERVACIONESANULACION = #{record.observacionesanulacion,jdbcType=VARCHAR}");
		}
		if (record.getIdmovimiento() != null) {
			sql.SET("IDMOVIMIENTO = #{record.idmovimiento,jdbcType=DECIMAL}");
		}
		applyWhere(sql, example, true);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.SCS_CABECERAGUARDIAS
	 * @mbg.generated  Tue Aug 31 09:04:15 CEST 2021
	 */
	public String updateByExample(Map<String, Object> parameter) {
		SQL sql = new SQL();
		sql.UPDATE("SCS_CABECERAGUARDIAS");
		sql.SET("IDINSTITUCION = #{record.idinstitucion,jdbcType=DECIMAL}");
		sql.SET("IDTURNO = #{record.idturno,jdbcType=DECIMAL}");
		sql.SET("IDGUARDIA = #{record.idguardia,jdbcType=DECIMAL}");
		sql.SET("IDPERSONA = #{record.idpersona,jdbcType=DECIMAL}");
		sql.SET("FECHAINICIO = #{record.fechainicio,jdbcType=TIMESTAMP}");
		sql.SET("IDCALENDARIOGUARDIAS = #{record.idcalendarioguardias,jdbcType=DECIMAL}");
		sql.SET("FECHA_FIN = #{record.fechaFin,jdbcType=TIMESTAMP}");
		sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=TIMESTAMP}");
		sql.SET("SUSTITUTO = #{record.sustituto,jdbcType=VARCHAR}");
		sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
		sql.SET("FACTURADO = #{record.facturado,jdbcType=VARCHAR}");
		sql.SET("PAGADO = #{record.pagado,jdbcType=VARCHAR}");
		sql.SET("VALIDADO = #{record.validado,jdbcType=VARCHAR}");
		sql.SET("LETRADOSUSTITUIDO = #{record.letradosustituido,jdbcType=DECIMAL}");
		sql.SET("FECHASUSTITUCION = #{record.fechasustitucion,jdbcType=TIMESTAMP}");
		sql.SET("COMENSUSTITUCION = #{record.comensustitucion,jdbcType=VARCHAR}");
		sql.SET("FECHAVALIDACION = #{record.fechavalidacion,jdbcType=TIMESTAMP}");
		sql.SET("IDFACTURACION = #{record.idfacturacion,jdbcType=DECIMAL}");
		sql.SET("FECHAALTA = #{record.fechaalta,jdbcType=TIMESTAMP}");
		sql.SET("POSICION = #{record.posicion,jdbcType=DECIMAL}");
		sql.SET("USUALTA = #{record.usualta,jdbcType=DECIMAL}");
		sql.SET("NUMEROGRUPO = #{record.numerogrupo,jdbcType=DECIMAL}");
		sql.SET("OBSERVACIONESANULACION = #{record.observacionesanulacion,jdbcType=VARCHAR}");
		sql.SET("IDMOVIMIENTO = #{record.idmovimiento,jdbcType=DECIMAL}");
		ScsCabeceraguardiasExample example = (ScsCabeceraguardiasExample) parameter.get("example");
		applyWhere(sql, example, true);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.SCS_CABECERAGUARDIAS
	 * @mbg.generated  Tue Aug 31 09:04:15 CEST 2021
	 */
	public String updateByPrimaryKeySelective(ScsCabeceraguardias record) {
		SQL sql = new SQL();
		sql.UPDATE("SCS_CABECERAGUARDIAS");
		if (record.getIdcalendarioguardias() != null) {
			sql.SET("IDCALENDARIOGUARDIAS = #{idcalendarioguardias,jdbcType=DECIMAL}");
		}
		if (record.getFechaFin() != null) {
			sql.SET("FECHA_FIN = #{fechaFin,jdbcType=TIMESTAMP}");
		}
		if (record.getFechamodificacion() != null) {
			sql.SET("FECHAMODIFICACION = #{fechamodificacion,jdbcType=TIMESTAMP}");
		}
		if (record.getSustituto() != null) {
			sql.SET("SUSTITUTO = #{sustituto,jdbcType=VARCHAR}");
		}
		if (record.getUsumodificacion() != null) {
			sql.SET("USUMODIFICACION = #{usumodificacion,jdbcType=DECIMAL}");
		}
		if (record.getFacturado() != null) {
			sql.SET("FACTURADO = #{facturado,jdbcType=VARCHAR}");
		}
		if (record.getPagado() != null) {
			sql.SET("PAGADO = #{pagado,jdbcType=VARCHAR}");
		}
		if (record.getValidado() != null) {
			sql.SET("VALIDADO = #{validado,jdbcType=VARCHAR}");
		}
		if (record.getLetradosustituido() != null) {
			sql.SET("LETRADOSUSTITUIDO = #{letradosustituido,jdbcType=DECIMAL}");
		}
		if (record.getFechasustitucion() != null) {
			sql.SET("FECHASUSTITUCION = #{fechasustitucion,jdbcType=TIMESTAMP}");
		}
		if (record.getComensustitucion() != null) {
			sql.SET("COMENSUSTITUCION = #{comensustitucion,jdbcType=VARCHAR}");
		}
		if (record.getFechavalidacion() != null) {
			sql.SET("FECHAVALIDACION = #{fechavalidacion,jdbcType=TIMESTAMP}");
		}
		if (record.getIdfacturacion() != null) {
			sql.SET("IDFACTURACION = #{idfacturacion,jdbcType=DECIMAL}");
		}
		if (record.getFechaalta() != null) {
			sql.SET("FECHAALTA = #{fechaalta,jdbcType=TIMESTAMP}");
		}
		if (record.getPosicion() != null) {
			sql.SET("POSICION = #{posicion,jdbcType=DECIMAL}");
		}
		if (record.getUsualta() != null) {
			sql.SET("USUALTA = #{usualta,jdbcType=DECIMAL}");
		}
		if (record.getNumerogrupo() != null) {
			sql.SET("NUMEROGRUPO = #{numerogrupo,jdbcType=DECIMAL}");
		}
		if (record.getObservacionesanulacion() != null) {
			sql.SET("OBSERVACIONESANULACION = #{observacionesanulacion,jdbcType=VARCHAR}");
		}
		if (record.getIdmovimiento() != null) {
			sql.SET("IDMOVIMIENTO = #{idmovimiento,jdbcType=DECIMAL}");
		}
		sql.WHERE("IDINSTITUCION = #{idinstitucion,jdbcType=DECIMAL}");
		sql.WHERE("IDTURNO = #{idturno,jdbcType=DECIMAL}");
		sql.WHERE("IDGUARDIA = #{idguardia,jdbcType=DECIMAL}");
		sql.WHERE("IDPERSONA = #{idpersona,jdbcType=DECIMAL}");
		sql.WHERE("FECHAINICIO = #{fechainicio,jdbcType=TIMESTAMP}");
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.SCS_CABECERAGUARDIAS
	 * @mbg.generated  Tue Aug 31 09:04:15 CEST 2021
	 */
	protected void applyWhere(SQL sql, ScsCabeceraguardiasExample example, boolean includeExamplePhrase) {
		if (example == null) {
			return;
		}
		String parmPhrase1;
		String parmPhrase1_th;
		String parmPhrase2;
		String parmPhrase2_th;
		String parmPhrase3;
		String parmPhrase3_th;
		if (includeExamplePhrase) {
			parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
			parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
			parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
			parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
			parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
			parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
		} else {
			parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
			parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
			parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
			parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
			parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
			parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
		}
		StringBuilder sb = new StringBuilder();
		List<Criteria> oredCriteria = example.getOredCriteria();
		boolean firstCriteria = true;
		for (int i = 0; i < oredCriteria.size(); i++) {
			Criteria criteria = oredCriteria.get(i);
			if (criteria.isValid()) {
				if (firstCriteria) {
					firstCriteria = false;
				} else {
					sb.append(" or ");
				}
				sb.append('(');
				List<Criterion> criterions = criteria.getAllCriteria();
				boolean firstCriterion = true;
				for (int j = 0; j < criterions.size(); j++) {
					Criterion criterion = criterions.get(j);
					if (firstCriterion) {
						firstCriterion = false;
					} else {
						sb.append(" and ");
					}
					if (criterion.isNoValue()) {
						sb.append(criterion.getCondition());
					} else if (criterion.isSingleValue()) {
						if (criterion.getTypeHandler() == null) {
							sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
						} else {
							sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,
									criterion.getTypeHandler()));
						}
					} else if (criterion.isBetweenValue()) {
						if (criterion.getTypeHandler() == null) {
							sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
						} else {
							sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j,
									criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
						}
					} else if (criterion.isListValue()) {
						sb.append(criterion.getCondition());
						sb.append(" (");
						List<?> listItems = (List<?>) criterion.getValue();
						boolean comma = false;
						for (int k = 0; k < listItems.size(); k++) {
							if (comma) {
								sb.append(", ");
							} else {
								comma = true;
							}
							if (criterion.getTypeHandler() == null) {
								sb.append(String.format(parmPhrase3, i, j, k));
							} else {
								sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
							}
						}
						sb.append(')');
					}
				}
				sb.append(')');
			}
		}
		if (sb.length() > 0) {
			sql.WHERE(sb.toString());
		}
	}
	
}