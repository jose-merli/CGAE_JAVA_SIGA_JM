package org.itcgae.siga.db.entities;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class FcsAplicaMovimientosvariosExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USCGAE.FCS_APLICA_MOVIMIENTOSVARIOS
     *
     * @mbg.generated Mon Aug 09 12:07:54 CEST 2021
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USCGAE.FCS_APLICA_MOVIMIENTOSVARIOS
     *
     * @mbg.generated Mon Aug 09 12:07:54 CEST 2021
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USCGAE.FCS_APLICA_MOVIMIENTOSVARIOS
     *
     * @mbg.generated Mon Aug 09 12:07:54 CEST 2021
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_APLICA_MOVIMIENTOSVARIOS
     *
     * @mbg.generated Mon Aug 09 12:07:54 CEST 2021
     */
    public FcsAplicaMovimientosvariosExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_APLICA_MOVIMIENTOSVARIOS
     *
     * @mbg.generated Mon Aug 09 12:07:54 CEST 2021
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_APLICA_MOVIMIENTOSVARIOS
     *
     * @mbg.generated Mon Aug 09 12:07:54 CEST 2021
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_APLICA_MOVIMIENTOSVARIOS
     *
     * @mbg.generated Mon Aug 09 12:07:54 CEST 2021
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_APLICA_MOVIMIENTOSVARIOS
     *
     * @mbg.generated Mon Aug 09 12:07:54 CEST 2021
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_APLICA_MOVIMIENTOSVARIOS
     *
     * @mbg.generated Mon Aug 09 12:07:54 CEST 2021
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_APLICA_MOVIMIENTOSVARIOS
     *
     * @mbg.generated Mon Aug 09 12:07:54 CEST 2021
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_APLICA_MOVIMIENTOSVARIOS
     *
     * @mbg.generated Mon Aug 09 12:07:54 CEST 2021
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_APLICA_MOVIMIENTOSVARIOS
     *
     * @mbg.generated Mon Aug 09 12:07:54 CEST 2021
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_APLICA_MOVIMIENTOSVARIOS
     *
     * @mbg.generated Mon Aug 09 12:07:54 CEST 2021
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_APLICA_MOVIMIENTOSVARIOS
     *
     * @mbg.generated Mon Aug 09 12:07:54 CEST 2021
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE.FCS_APLICA_MOVIMIENTOSVARIOS
     *
     * @mbg.generated Mon Aug 09 12:07:54 CEST 2021
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdinstitucionIsNull() {
            addCriterion("IDINSTITUCION is null");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionIsNotNull() {
            addCriterion("IDINSTITUCION is not null");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionEqualTo(Short value) {
            addCriterion("IDINSTITUCION =", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionNotEqualTo(Short value) {
            addCriterion("IDINSTITUCION <>", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionGreaterThan(Short value) {
            addCriterion("IDINSTITUCION >", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionGreaterThanOrEqualTo(Short value) {
            addCriterion("IDINSTITUCION >=", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionLessThan(Short value) {
            addCriterion("IDINSTITUCION <", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionLessThanOrEqualTo(Short value) {
            addCriterion("IDINSTITUCION <=", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionIn(List<Short> values) {
            addCriterion("IDINSTITUCION in", values, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionNotIn(List<Short> values) {
            addCriterion("IDINSTITUCION not in", values, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionBetween(Short value1, Short value2) {
            addCriterion("IDINSTITUCION between", value1, value2, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionNotBetween(Short value1, Short value2) {
            addCriterion("IDINSTITUCION not between", value1, value2, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdaplicacionIsNull() {
            addCriterion("IDAPLICACION is null");
            return (Criteria) this;
        }

        public Criteria andIdaplicacionIsNotNull() {
            addCriterion("IDAPLICACION is not null");
            return (Criteria) this;
        }

        public Criteria andIdaplicacionEqualTo(Long value) {
            addCriterion("IDAPLICACION =", value, "idaplicacion");
            return (Criteria) this;
        }

        public Criteria andIdaplicacionNotEqualTo(Long value) {
            addCriterion("IDAPLICACION <>", value, "idaplicacion");
            return (Criteria) this;
        }

        public Criteria andIdaplicacionGreaterThan(Long value) {
            addCriterion("IDAPLICACION >", value, "idaplicacion");
            return (Criteria) this;
        }

        public Criteria andIdaplicacionGreaterThanOrEqualTo(Long value) {
            addCriterion("IDAPLICACION >=", value, "idaplicacion");
            return (Criteria) this;
        }

        public Criteria andIdaplicacionLessThan(Long value) {
            addCriterion("IDAPLICACION <", value, "idaplicacion");
            return (Criteria) this;
        }

        public Criteria andIdaplicacionLessThanOrEqualTo(Long value) {
            addCriterion("IDAPLICACION <=", value, "idaplicacion");
            return (Criteria) this;
        }

        public Criteria andIdaplicacionIn(List<Long> values) {
            addCriterion("IDAPLICACION in", values, "idaplicacion");
            return (Criteria) this;
        }

        public Criteria andIdaplicacionNotIn(List<Long> values) {
            addCriterion("IDAPLICACION not in", values, "idaplicacion");
            return (Criteria) this;
        }

        public Criteria andIdaplicacionBetween(Long value1, Long value2) {
            addCriterion("IDAPLICACION between", value1, value2, "idaplicacion");
            return (Criteria) this;
        }

        public Criteria andIdaplicacionNotBetween(Long value1, Long value2) {
            addCriterion("IDAPLICACION not between", value1, value2, "idaplicacion");
            return (Criteria) this;
        }

        public Criteria andIdpersonaIsNull() {
            addCriterion("IDPERSONA is null");
            return (Criteria) this;
        }

        public Criteria andIdpersonaIsNotNull() {
            addCriterion("IDPERSONA is not null");
            return (Criteria) this;
        }

        public Criteria andIdpersonaEqualTo(Long value) {
            addCriterion("IDPERSONA =", value, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaNotEqualTo(Long value) {
            addCriterion("IDPERSONA <>", value, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaGreaterThan(Long value) {
            addCriterion("IDPERSONA >", value, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaGreaterThanOrEqualTo(Long value) {
            addCriterion("IDPERSONA >=", value, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaLessThan(Long value) {
            addCriterion("IDPERSONA <", value, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaLessThanOrEqualTo(Long value) {
            addCriterion("IDPERSONA <=", value, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaIn(List<Long> values) {
            addCriterion("IDPERSONA in", values, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaNotIn(List<Long> values) {
            addCriterion("IDPERSONA not in", values, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaBetween(Long value1, Long value2) {
            addCriterion("IDPERSONA between", value1, value2, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaNotBetween(Long value1, Long value2) {
            addCriterion("IDPERSONA not between", value1, value2, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdmovimientoIsNull() {
            addCriterion("IDMOVIMIENTO is null");
            return (Criteria) this;
        }

        public Criteria andIdmovimientoIsNotNull() {
            addCriterion("IDMOVIMIENTO is not null");
            return (Criteria) this;
        }

        public Criteria andIdmovimientoEqualTo(Long value) {
            addCriterion("IDMOVIMIENTO =", value, "idmovimiento");
            return (Criteria) this;
        }

        public Criteria andIdmovimientoNotEqualTo(Long value) {
            addCriterion("IDMOVIMIENTO <>", value, "idmovimiento");
            return (Criteria) this;
        }

        public Criteria andIdmovimientoGreaterThan(Long value) {
            addCriterion("IDMOVIMIENTO >", value, "idmovimiento");
            return (Criteria) this;
        }

        public Criteria andIdmovimientoGreaterThanOrEqualTo(Long value) {
            addCriterion("IDMOVIMIENTO >=", value, "idmovimiento");
            return (Criteria) this;
        }

        public Criteria andIdmovimientoLessThan(Long value) {
            addCriterion("IDMOVIMIENTO <", value, "idmovimiento");
            return (Criteria) this;
        }

        public Criteria andIdmovimientoLessThanOrEqualTo(Long value) {
            addCriterion("IDMOVIMIENTO <=", value, "idmovimiento");
            return (Criteria) this;
        }

        public Criteria andIdmovimientoIn(List<Long> values) {
            addCriterion("IDMOVIMIENTO in", values, "idmovimiento");
            return (Criteria) this;
        }

        public Criteria andIdmovimientoNotIn(List<Long> values) {
            addCriterion("IDMOVIMIENTO not in", values, "idmovimiento");
            return (Criteria) this;
        }

        public Criteria andIdmovimientoBetween(Long value1, Long value2) {
            addCriterion("IDMOVIMIENTO between", value1, value2, "idmovimiento");
            return (Criteria) this;
        }

        public Criteria andIdmovimientoNotBetween(Long value1, Long value2) {
            addCriterion("IDMOVIMIENTO not between", value1, value2, "idmovimiento");
            return (Criteria) this;
        }

        public Criteria andIdpagosjgIsNull() {
            addCriterion("IDPAGOSJG is null");
            return (Criteria) this;
        }

        public Criteria andIdpagosjgIsNotNull() {
            addCriterion("IDPAGOSJG is not null");
            return (Criteria) this;
        }

        public Criteria andIdpagosjgEqualTo(Integer value) {
            addCriterion("IDPAGOSJG =", value, "idpagosjg");
            return (Criteria) this;
        }

        public Criteria andIdpagosjgNotEqualTo(Integer value) {
            addCriterion("IDPAGOSJG <>", value, "idpagosjg");
            return (Criteria) this;
        }

        public Criteria andIdpagosjgGreaterThan(Integer value) {
            addCriterion("IDPAGOSJG >", value, "idpagosjg");
            return (Criteria) this;
        }

        public Criteria andIdpagosjgGreaterThanOrEqualTo(Integer value) {
            addCriterion("IDPAGOSJG >=", value, "idpagosjg");
            return (Criteria) this;
        }

        public Criteria andIdpagosjgLessThan(Integer value) {
            addCriterion("IDPAGOSJG <", value, "idpagosjg");
            return (Criteria) this;
        }

        public Criteria andIdpagosjgLessThanOrEqualTo(Integer value) {
            addCriterion("IDPAGOSJG <=", value, "idpagosjg");
            return (Criteria) this;
        }

        public Criteria andIdpagosjgIn(List<Integer> values) {
            addCriterion("IDPAGOSJG in", values, "idpagosjg");
            return (Criteria) this;
        }

        public Criteria andIdpagosjgNotIn(List<Integer> values) {
            addCriterion("IDPAGOSJG not in", values, "idpagosjg");
            return (Criteria) this;
        }

        public Criteria andIdpagosjgBetween(Integer value1, Integer value2) {
            addCriterion("IDPAGOSJG between", value1, value2, "idpagosjg");
            return (Criteria) this;
        }

        public Criteria andIdpagosjgNotBetween(Integer value1, Integer value2) {
            addCriterion("IDPAGOSJG not between", value1, value2, "idpagosjg");
            return (Criteria) this;
        }

        public Criteria andImporteaplicadoIsNull() {
            addCriterion("IMPORTEAPLICADO is null");
            return (Criteria) this;
        }

        public Criteria andImporteaplicadoIsNotNull() {
            addCriterion("IMPORTEAPLICADO is not null");
            return (Criteria) this;
        }

        public Criteria andImporteaplicadoEqualTo(BigDecimal value) {
            addCriterion("IMPORTEAPLICADO =", value, "importeaplicado");
            return (Criteria) this;
        }

        public Criteria andImporteaplicadoNotEqualTo(BigDecimal value) {
            addCriterion("IMPORTEAPLICADO <>", value, "importeaplicado");
            return (Criteria) this;
        }

        public Criteria andImporteaplicadoGreaterThan(BigDecimal value) {
            addCriterion("IMPORTEAPLICADO >", value, "importeaplicado");
            return (Criteria) this;
        }

        public Criteria andImporteaplicadoGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("IMPORTEAPLICADO >=", value, "importeaplicado");
            return (Criteria) this;
        }

        public Criteria andImporteaplicadoLessThan(BigDecimal value) {
            addCriterion("IMPORTEAPLICADO <", value, "importeaplicado");
            return (Criteria) this;
        }

        public Criteria andImporteaplicadoLessThanOrEqualTo(BigDecimal value) {
            addCriterion("IMPORTEAPLICADO <=", value, "importeaplicado");
            return (Criteria) this;
        }

        public Criteria andImporteaplicadoIn(List<BigDecimal> values) {
            addCriterion("IMPORTEAPLICADO in", values, "importeaplicado");
            return (Criteria) this;
        }

        public Criteria andImporteaplicadoNotIn(List<BigDecimal> values) {
            addCriterion("IMPORTEAPLICADO not in", values, "importeaplicado");
            return (Criteria) this;
        }

        public Criteria andImporteaplicadoBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("IMPORTEAPLICADO between", value1, value2, "importeaplicado");
            return (Criteria) this;
        }

        public Criteria andImporteaplicadoNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("IMPORTEAPLICADO not between", value1, value2, "importeaplicado");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionIsNull() {
            addCriterion("FECHAMODIFICACION is null");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionIsNotNull() {
            addCriterion("FECHAMODIFICACION is not null");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION =", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionNotEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION <>", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionGreaterThan(Date value) {
            addCriterion("FECHAMODIFICACION >", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionGreaterThanOrEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION >=", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionLessThan(Date value) {
            addCriterion("FECHAMODIFICACION <", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionLessThanOrEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION <=", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionIn(List<Date> values) {
            addCriterion("FECHAMODIFICACION in", values, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionNotIn(List<Date> values) {
            addCriterion("FECHAMODIFICACION not in", values, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionBetween(Date value1, Date value2) {
            addCriterion("FECHAMODIFICACION between", value1, value2, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionNotBetween(Date value1, Date value2) {
            addCriterion("FECHAMODIFICACION not between", value1, value2, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionIsNull() {
            addCriterion("USUMODIFICACION is null");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionIsNotNull() {
            addCriterion("USUMODIFICACION is not null");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionEqualTo(Long value) {
            addCriterion("USUMODIFICACION =", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionNotEqualTo(Long value) {
            addCriterion("USUMODIFICACION <>", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionGreaterThan(Long value) {
            addCriterion("USUMODIFICACION >", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionGreaterThanOrEqualTo(Long value) {
            addCriterion("USUMODIFICACION >=", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionLessThan(Long value) {
            addCriterion("USUMODIFICACION <", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionLessThanOrEqualTo(Long value) {
            addCriterion("USUMODIFICACION <=", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionIn(List<Long> values) {
            addCriterion("USUMODIFICACION in", values, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionNotIn(List<Long> values) {
            addCriterion("USUMODIFICACION not in", values, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionBetween(Long value1, Long value2) {
            addCriterion("USUMODIFICACION between", value1, value2, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionNotBetween(Long value1, Long value2) {
            addCriterion("USUMODIFICACION not between", value1, value2, "usumodificacion");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE.FCS_APLICA_MOVIMIENTOSVARIOS
     *
     * @mbg.generated do_not_delete_during_merge Mon Aug 09 12:07:54 CEST 2021
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE.FCS_APLICA_MOVIMIENTOSVARIOS
     *
     * @mbg.generated Mon Aug 09 12:07:54 CEST 2021
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}