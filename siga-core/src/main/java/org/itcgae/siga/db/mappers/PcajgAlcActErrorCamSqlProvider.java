package org.itcgae.siga.db.mappers;

import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;
import org.itcgae.siga.db.entities.PcajgAlcActErrorCam;
import org.itcgae.siga.db.entities.PcajgAlcActErrorCamExample.Criteria;
import org.itcgae.siga.db.entities.PcajgAlcActErrorCamExample.Criterion;
import org.itcgae.siga.db.entities.PcajgAlcActErrorCamExample;

public class PcajgAlcActErrorCamSqlProvider {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.PCAJG_ALC_ACT_ERROR_CAM
     *
     * @mbg.generated Mon May 16 12:21:15 CEST 2022
     */
    public String countByExample(PcajgAlcActErrorCamExample example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("PCAJG_ALC_ACT_ERROR_CAM");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.PCAJG_ALC_ACT_ERROR_CAM
     *
     * @mbg.generated Mon May 16 12:21:15 CEST 2022
     */
    public String deleteByExample(PcajgAlcActErrorCamExample example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("PCAJG_ALC_ACT_ERROR_CAM");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.PCAJG_ALC_ACT_ERROR_CAM
     *
     * @mbg.generated Mon May 16 12:21:15 CEST 2022
     */
    public String insertSelective(PcajgAlcActErrorCam record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("PCAJG_ALC_ACT_ERROR_CAM");
        
        if (record.getIdentificador() != null) {
            sql.VALUES("IDENTIFICADOR", "#{identificador,jdbcType=DECIMAL}");
        }
        
        if (record.getIdinstitucion() != null) {
            sql.VALUES("IDINSTITUCION", "#{idinstitucion,jdbcType=DECIMAL}");
        }
        
        if (record.getIdfacturacion() != null) {
            sql.VALUES("IDFACTURACION", "#{idfacturacion,jdbcType=DECIMAL}");
        }
        
        if (record.getRegistroErrorCam() != null) {
            sql.VALUES("REGISTRO_ERROR_CAM", "#{registroErrorCam,jdbcType=VARCHAR}");
        }
        
        if (record.getCodigoError() != null) {
            sql.VALUES("CODIGO_ERROR", "#{codigoError,jdbcType=VARCHAR}");
        }
        
        if (record.getCodigoCampoError() != null) {
            sql.VALUES("CODIGO_CAMPO_ERROR", "#{codigoCampoError,jdbcType=VARCHAR}");
        }
        
        if (record.getObservacionesError() != null) {
            sql.VALUES("OBSERVACIONES_ERROR", "#{observacionesError,jdbcType=VARCHAR}");
        }
        
        if (record.getEjgAnio() != null) {
            sql.VALUES("EJG_ANIO", "#{ejgAnio,jdbcType=VARCHAR}");
        }
        
        if (record.getEjgNumejg() != null) {
            sql.VALUES("EJG_NUMEJG", "#{ejgNumejg,jdbcType=VARCHAR}");
        }
        
        if (record.getBorrado() != null) {
            sql.VALUES("BORRADO", "#{borrado,jdbcType=DECIMAL}");
        }
        
        if (record.getUsumodificacion() != null) {
            sql.VALUES("USUMODIFICACION", "#{usumodificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getFechamodificacion() != null) {
            sql.VALUES("FECHAMODIFICACION", "#{fechamodificacion,jdbcType=TIMESTAMP}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.PCAJG_ALC_ACT_ERROR_CAM
     *
     * @mbg.generated Mon May 16 12:21:15 CEST 2022
     */
    public String selectByExample(PcajgAlcActErrorCamExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("IDENTIFICADOR");
        } else {
            sql.SELECT("IDENTIFICADOR");
        }
        sql.SELECT("IDINSTITUCION");
        sql.SELECT("IDFACTURACION");
        sql.SELECT("REGISTRO_ERROR_CAM");
        sql.SELECT("CODIGO_ERROR");
        sql.SELECT("CODIGO_CAMPO_ERROR");
        sql.SELECT("OBSERVACIONES_ERROR");
        sql.SELECT("EJG_ANIO");
        sql.SELECT("EJG_NUMEJG");
        sql.SELECT("BORRADO");
        sql.SELECT("USUMODIFICACION");
        sql.SELECT("FECHAMODIFICACION");
        sql.FROM("PCAJG_ALC_ACT_ERROR_CAM");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.PCAJG_ALC_ACT_ERROR_CAM
     *
     * @mbg.generated Mon May 16 12:21:15 CEST 2022
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        PcajgAlcActErrorCam record = (PcajgAlcActErrorCam) parameter.get("record");
        PcajgAlcActErrorCamExample example = (PcajgAlcActErrorCamExample) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("PCAJG_ALC_ACT_ERROR_CAM");
        
        if (record.getIdentificador() != null) {
            sql.SET("IDENTIFICADOR = #{record.identificador,jdbcType=DECIMAL}");
        }
        
        if (record.getIdinstitucion() != null) {
            sql.SET("IDINSTITUCION = #{record.idinstitucion,jdbcType=DECIMAL}");
        }
        
        if (record.getIdfacturacion() != null) {
            sql.SET("IDFACTURACION = #{record.idfacturacion,jdbcType=DECIMAL}");
        }
        
        if (record.getRegistroErrorCam() != null) {
            sql.SET("REGISTRO_ERROR_CAM = #{record.registroErrorCam,jdbcType=VARCHAR}");
        }
        
        if (record.getCodigoError() != null) {
            sql.SET("CODIGO_ERROR = #{record.codigoError,jdbcType=VARCHAR}");
        }
        
        if (record.getCodigoCampoError() != null) {
            sql.SET("CODIGO_CAMPO_ERROR = #{record.codigoCampoError,jdbcType=VARCHAR}");
        }
        
        if (record.getObservacionesError() != null) {
            sql.SET("OBSERVACIONES_ERROR = #{record.observacionesError,jdbcType=VARCHAR}");
        }
        
        if (record.getEjgAnio() != null) {
            sql.SET("EJG_ANIO = #{record.ejgAnio,jdbcType=VARCHAR}");
        }
        
        if (record.getEjgNumejg() != null) {
            sql.SET("EJG_NUMEJG = #{record.ejgNumejg,jdbcType=VARCHAR}");
        }
        
        if (record.getBorrado() != null) {
            sql.SET("BORRADO = #{record.borrado,jdbcType=DECIMAL}");
        }
        
        if (record.getUsumodificacion() != null) {
            sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getFechamodificacion() != null) {
            sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=TIMESTAMP}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.PCAJG_ALC_ACT_ERROR_CAM
     *
     * @mbg.generated Mon May 16 12:21:15 CEST 2022
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("PCAJG_ALC_ACT_ERROR_CAM");
        
        sql.SET("IDENTIFICADOR = #{record.identificador,jdbcType=DECIMAL}");
        sql.SET("IDINSTITUCION = #{record.idinstitucion,jdbcType=DECIMAL}");
        sql.SET("IDFACTURACION = #{record.idfacturacion,jdbcType=DECIMAL}");
        sql.SET("REGISTRO_ERROR_CAM = #{record.registroErrorCam,jdbcType=VARCHAR}");
        sql.SET("CODIGO_ERROR = #{record.codigoError,jdbcType=VARCHAR}");
        sql.SET("CODIGO_CAMPO_ERROR = #{record.codigoCampoError,jdbcType=VARCHAR}");
        sql.SET("OBSERVACIONES_ERROR = #{record.observacionesError,jdbcType=VARCHAR}");
        sql.SET("EJG_ANIO = #{record.ejgAnio,jdbcType=VARCHAR}");
        sql.SET("EJG_NUMEJG = #{record.ejgNumejg,jdbcType=VARCHAR}");
        sql.SET("BORRADO = #{record.borrado,jdbcType=DECIMAL}");
        sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
        sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=TIMESTAMP}");
        
        PcajgAlcActErrorCamExample example = (PcajgAlcActErrorCamExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.PCAJG_ALC_ACT_ERROR_CAM
     *
     * @mbg.generated Mon May 16 12:21:15 CEST 2022
     */
    public String updateByPrimaryKeySelective(PcajgAlcActErrorCam record) {
        SQL sql = new SQL();
        sql.UPDATE("PCAJG_ALC_ACT_ERROR_CAM");
        
        if (record.getIdinstitucion() != null) {
            sql.SET("IDINSTITUCION = #{idinstitucion,jdbcType=DECIMAL}");
        }
        
        if (record.getIdfacturacion() != null) {
            sql.SET("IDFACTURACION = #{idfacturacion,jdbcType=DECIMAL}");
        }
        
        if (record.getRegistroErrorCam() != null) {
            sql.SET("REGISTRO_ERROR_CAM = #{registroErrorCam,jdbcType=VARCHAR}");
        }
        
        if (record.getCodigoError() != null) {
            sql.SET("CODIGO_ERROR = #{codigoError,jdbcType=VARCHAR}");
        }
        
        if (record.getCodigoCampoError() != null) {
            sql.SET("CODIGO_CAMPO_ERROR = #{codigoCampoError,jdbcType=VARCHAR}");
        }
        
        if (record.getObservacionesError() != null) {
            sql.SET("OBSERVACIONES_ERROR = #{observacionesError,jdbcType=VARCHAR}");
        }
        
        if (record.getEjgAnio() != null) {
            sql.SET("EJG_ANIO = #{ejgAnio,jdbcType=VARCHAR}");
        }
        
        if (record.getEjgNumejg() != null) {
            sql.SET("EJG_NUMEJG = #{ejgNumejg,jdbcType=VARCHAR}");
        }
        
        if (record.getBorrado() != null) {
            sql.SET("BORRADO = #{borrado,jdbcType=DECIMAL}");
        }
        
        if (record.getUsumodificacion() != null) {
            sql.SET("USUMODIFICACION = #{usumodificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getFechamodificacion() != null) {
            sql.SET("FECHAMODIFICACION = #{fechamodificacion,jdbcType=TIMESTAMP}");
        }
        
        sql.WHERE("IDENTIFICADOR = #{identificador,jdbcType=DECIMAL}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.PCAJG_ALC_ACT_ERROR_CAM
     *
     * @mbg.generated Mon May 16 12:21:15 CEST 2022
     */
    protected void applyWhere(SQL sql, PcajgAlcActErrorCamExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}