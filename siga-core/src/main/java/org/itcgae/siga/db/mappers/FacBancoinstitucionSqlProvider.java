package org.itcgae.siga.db.mappers;

import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;
import org.itcgae.siga.db.entities.FacBancoinstitucion;
import org.itcgae.siga.db.entities.FacBancoinstitucionExample.Criteria;
import org.itcgae.siga.db.entities.FacBancoinstitucionExample.Criterion;
import org.itcgae.siga.db.entities.FacBancoinstitucionExample;

public class FacBancoinstitucionSqlProvider {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_BANCOINSTITUCION
     *
     * @mbg.generated Mon Jul 26 12:05:22 CEST 2021
     */
    public String countByExample(FacBancoinstitucionExample example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("FAC_BANCOINSTITUCION");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_BANCOINSTITUCION
     *
     * @mbg.generated Mon Jul 26 12:05:22 CEST 2021
     */
    public String deleteByExample(FacBancoinstitucionExample example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("FAC_BANCOINSTITUCION");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_BANCOINSTITUCION
     *
     * @mbg.generated Mon Jul 26 12:05:22 CEST 2021
     */
    public String insertSelective(FacBancoinstitucion record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("FAC_BANCOINSTITUCION");
        
        if (record.getIdinstitucion() != null) {
            sql.VALUES("IDINSTITUCION", "#{idinstitucion,jdbcType=DECIMAL}");
        }
        
        if (record.getBancosCodigo() != null) {
            sql.VALUES("BANCOS_CODIGO", "#{bancosCodigo,jdbcType=VARCHAR}");
        }
        
        if (record.getCodSucursal() != null) {
            sql.VALUES("COD_SUCURSAL", "#{codSucursal,jdbcType=VARCHAR}");
        }
        
        if (record.getNumerocuenta() != null) {
            sql.VALUES("NUMEROCUENTA", "#{numerocuenta,jdbcType=VARCHAR}");
        }
        
        if (record.getFechamodificacion() != null) {
            sql.VALUES("FECHAMODIFICACION", "#{fechamodificacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUsumodificacion() != null) {
            sql.VALUES("USUMODIFICACION", "#{usumodificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getFechabaja() != null) {
            sql.VALUES("FECHABAJA", "#{fechabaja,jdbcType=TIMESTAMP}");
        }
        
        if (record.getAsientocontable() != null) {
            sql.VALUES("ASIENTOCONTABLE", "#{asientocontable,jdbcType=VARCHAR}");
        }
        
        if (record.getCuentacontabletarjeta() != null) {
            sql.VALUES("CUENTACONTABLETARJETA", "#{cuentacontabletarjeta,jdbcType=VARCHAR}");
        }
        
        if (record.getCodBanco() != null) {
            sql.VALUES("COD_BANCO", "#{codBanco,jdbcType=VARCHAR}");
        }
        
        if (record.getDigitocontrol() != null) {
            sql.VALUES("DIGITOCONTROL", "#{digitocontrol,jdbcType=VARCHAR}");
        }
        
        if (record.getSjcs() != null) {
            sql.VALUES("SJCS", "#{sjcs,jdbcType=VARCHAR}");
        }
        
        if (record.getIban() != null) {
            sql.VALUES("IBAN", "#{iban,jdbcType=VARCHAR}");
        }
        
        if (record.getIdsufijosjcs() != null) {
            sql.VALUES("IDSUFIJOSJCS", "#{idsufijosjcs,jdbcType=DECIMAL}");
        }
        
        if (record.getComisionimporte() != null) {
            sql.VALUES("COMISIONIMPORTE", "#{comisionimporte,jdbcType=DECIMAL}");
        }
        
        if (record.getComisiondescripcion() != null) {
            sql.VALUES("COMISIONDESCRIPCION", "#{comisiondescripcion,jdbcType=VARCHAR}");
        }
        
        if (record.getComisioncuentacontable() != null) {
            sql.VALUES("COMISIONCUENTACONTABLE", "#{comisioncuentacontable,jdbcType=VARCHAR}");
        }
        
        if (record.getIdtipoiva() != null) {
            sql.VALUES("IDTIPOIVA", "#{idtipoiva,jdbcType=DECIMAL}");
        }
        
        if (record.getConfigficherosesquema() != null) {
            sql.VALUES("CONFIGFICHEROSESQUEMA", "#{configficherosesquema,jdbcType=DECIMAL}");
        }
        
        if (record.getConfigficherossecuencia() != null) {
            sql.VALUES("CONFIGFICHEROSSECUENCIA", "#{configficherossecuencia,jdbcType=DECIMAL}");
        }
        
        if (record.getConfiglugaresquemasecuencia() != null) {
            sql.VALUES("CONFIGLUGARESQUEMASECUENCIA", "#{configlugaresquemasecuencia,jdbcType=DECIMAL}");
        }
        
        if (record.getConfigconceptoampliado() != null) {
            sql.VALUES("CONFIGCONCEPTOAMPLIADO", "#{configconceptoampliado,jdbcType=DECIMAL}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_BANCOINSTITUCION
     *
     * @mbg.generated Mon Jul 26 12:05:22 CEST 2021
     */
    public String selectByExample(FacBancoinstitucionExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("IDINSTITUCION");
        } else {
            sql.SELECT("IDINSTITUCION");
        }
        sql.SELECT("BANCOS_CODIGO");
        sql.SELECT("COD_SUCURSAL");
        sql.SELECT("NUMEROCUENTA");
        sql.SELECT("FECHAMODIFICACION");
        sql.SELECT("USUMODIFICACION");
        sql.SELECT("FECHABAJA");
        sql.SELECT("ASIENTOCONTABLE");
        sql.SELECT("CUENTACONTABLETARJETA");
        sql.SELECT("COD_BANCO");
        sql.SELECT("DIGITOCONTROL");
        sql.SELECT("SJCS");
        sql.SELECT("IBAN");
        sql.SELECT("IDSUFIJOSJCS");
        sql.SELECT("COMISIONIMPORTE");
        sql.SELECT("COMISIONDESCRIPCION");
        sql.SELECT("COMISIONCUENTACONTABLE");
        sql.SELECT("IDTIPOIVA");
        sql.SELECT("CONFIGFICHEROSESQUEMA");
        sql.SELECT("CONFIGFICHEROSSECUENCIA");
        sql.SELECT("CONFIGLUGARESQUEMASECUENCIA");
        sql.SELECT("CONFIGCONCEPTOAMPLIADO");
        sql.FROM("FAC_BANCOINSTITUCION");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_BANCOINSTITUCION
     *
     * @mbg.generated Mon Jul 26 12:05:22 CEST 2021
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        FacBancoinstitucion record = (FacBancoinstitucion) parameter.get("record");
        FacBancoinstitucionExample example = (FacBancoinstitucionExample) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("FAC_BANCOINSTITUCION");
        
        if (record.getIdinstitucion() != null) {
            sql.SET("IDINSTITUCION = #{record.idinstitucion,jdbcType=DECIMAL}");
        }
        
        if (record.getBancosCodigo() != null) {
            sql.SET("BANCOS_CODIGO = #{record.bancosCodigo,jdbcType=VARCHAR}");
        }
        
        if (record.getCodSucursal() != null) {
            sql.SET("COD_SUCURSAL = #{record.codSucursal,jdbcType=VARCHAR}");
        }
        
        if (record.getNumerocuenta() != null) {
            sql.SET("NUMEROCUENTA = #{record.numerocuenta,jdbcType=VARCHAR}");
        }
        
        if (record.getFechamodificacion() != null) {
            sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUsumodificacion() != null) {
            sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getFechabaja() != null) {
            sql.SET("FECHABAJA = #{record.fechabaja,jdbcType=TIMESTAMP}");
        }
        
        if (record.getAsientocontable() != null) {
            sql.SET("ASIENTOCONTABLE = #{record.asientocontable,jdbcType=VARCHAR}");
        }
        
        if (record.getCuentacontabletarjeta() != null) {
            sql.SET("CUENTACONTABLETARJETA = #{record.cuentacontabletarjeta,jdbcType=VARCHAR}");
        }
        
        if (record.getCodBanco() != null) {
            sql.SET("COD_BANCO = #{record.codBanco,jdbcType=VARCHAR}");
        }
        
        if (record.getDigitocontrol() != null) {
            sql.SET("DIGITOCONTROL = #{record.digitocontrol,jdbcType=VARCHAR}");
        }
        
        if (record.getSjcs() != null) {
            sql.SET("SJCS = #{record.sjcs,jdbcType=VARCHAR}");
        }
        
        if (record.getIban() != null) {
            sql.SET("IBAN = #{record.iban,jdbcType=VARCHAR}");
        }
        
        if (record.getIdsufijosjcs() != null) {
            sql.SET("IDSUFIJOSJCS = #{record.idsufijosjcs,jdbcType=DECIMAL}");
        }
        
        if (record.getComisionimporte() != null) {
            sql.SET("COMISIONIMPORTE = #{record.comisionimporte,jdbcType=DECIMAL}");
        }
        
        if (record.getComisiondescripcion() != null) {
            sql.SET("COMISIONDESCRIPCION = #{record.comisiondescripcion,jdbcType=VARCHAR}");
        }
        
        if (record.getComisioncuentacontable() != null) {
            sql.SET("COMISIONCUENTACONTABLE = #{record.comisioncuentacontable,jdbcType=VARCHAR}");
        }
        
        if (record.getIdtipoiva() != null) {
            sql.SET("IDTIPOIVA = #{record.idtipoiva,jdbcType=DECIMAL}");
        }
        
        if (record.getConfigficherosesquema() != null) {
            sql.SET("CONFIGFICHEROSESQUEMA = #{record.configficherosesquema,jdbcType=DECIMAL}");
        }
        
        if (record.getConfigficherossecuencia() != null) {
            sql.SET("CONFIGFICHEROSSECUENCIA = #{record.configficherossecuencia,jdbcType=DECIMAL}");
        }
        
        if (record.getConfiglugaresquemasecuencia() != null) {
            sql.SET("CONFIGLUGARESQUEMASECUENCIA = #{record.configlugaresquemasecuencia,jdbcType=DECIMAL}");
        }
        
        if (record.getConfigconceptoampliado() != null) {
            sql.SET("CONFIGCONCEPTOAMPLIADO = #{record.configconceptoampliado,jdbcType=DECIMAL}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_BANCOINSTITUCION
     *
     * @mbg.generated Mon Jul 26 12:05:22 CEST 2021
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("FAC_BANCOINSTITUCION");
        
        sql.SET("IDINSTITUCION = #{record.idinstitucion,jdbcType=DECIMAL}");
        sql.SET("BANCOS_CODIGO = #{record.bancosCodigo,jdbcType=VARCHAR}");
        sql.SET("COD_SUCURSAL = #{record.codSucursal,jdbcType=VARCHAR}");
        sql.SET("NUMEROCUENTA = #{record.numerocuenta,jdbcType=VARCHAR}");
        sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=TIMESTAMP}");
        sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
        sql.SET("FECHABAJA = #{record.fechabaja,jdbcType=TIMESTAMP}");
        sql.SET("ASIENTOCONTABLE = #{record.asientocontable,jdbcType=VARCHAR}");
        sql.SET("CUENTACONTABLETARJETA = #{record.cuentacontabletarjeta,jdbcType=VARCHAR}");
        sql.SET("COD_BANCO = #{record.codBanco,jdbcType=VARCHAR}");
        sql.SET("DIGITOCONTROL = #{record.digitocontrol,jdbcType=VARCHAR}");
        sql.SET("SJCS = #{record.sjcs,jdbcType=VARCHAR}");
        sql.SET("IBAN = #{record.iban,jdbcType=VARCHAR}");
        sql.SET("IDSUFIJOSJCS = #{record.idsufijosjcs,jdbcType=DECIMAL}");
        sql.SET("COMISIONIMPORTE = #{record.comisionimporte,jdbcType=DECIMAL}");
        sql.SET("COMISIONDESCRIPCION = #{record.comisiondescripcion,jdbcType=VARCHAR}");
        sql.SET("COMISIONCUENTACONTABLE = #{record.comisioncuentacontable,jdbcType=VARCHAR}");
        sql.SET("IDTIPOIVA = #{record.idtipoiva,jdbcType=DECIMAL}");
        sql.SET("CONFIGFICHEROSESQUEMA = #{record.configficherosesquema,jdbcType=DECIMAL}");
        sql.SET("CONFIGFICHEROSSECUENCIA = #{record.configficherossecuencia,jdbcType=DECIMAL}");
        sql.SET("CONFIGLUGARESQUEMASECUENCIA = #{record.configlugaresquemasecuencia,jdbcType=DECIMAL}");
        sql.SET("CONFIGCONCEPTOAMPLIADO = #{record.configconceptoampliado,jdbcType=DECIMAL}");
        
        FacBancoinstitucionExample example = (FacBancoinstitucionExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_BANCOINSTITUCION
     *
     * @mbg.generated Mon Jul 26 12:05:22 CEST 2021
     */
    public String updateByPrimaryKeySelective(FacBancoinstitucion record) {
        SQL sql = new SQL();
        sql.UPDATE("FAC_BANCOINSTITUCION");
        
        if (record.getCodSucursal() != null) {
            sql.SET("COD_SUCURSAL = #{codSucursal,jdbcType=VARCHAR}");
        }
        
        if (record.getNumerocuenta() != null) {
            sql.SET("NUMEROCUENTA = #{numerocuenta,jdbcType=VARCHAR}");
        }
        
        if (record.getFechamodificacion() != null) {
            sql.SET("FECHAMODIFICACION = #{fechamodificacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUsumodificacion() != null) {
            sql.SET("USUMODIFICACION = #{usumodificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getFechabaja() != null) {
            sql.SET("FECHABAJA = #{fechabaja,jdbcType=TIMESTAMP}");
        }
        
        if (record.getAsientocontable() != null) {
            sql.SET("ASIENTOCONTABLE = #{asientocontable,jdbcType=VARCHAR}");
        }
        
        if (record.getCuentacontabletarjeta() != null) {
            sql.SET("CUENTACONTABLETARJETA = #{cuentacontabletarjeta,jdbcType=VARCHAR}");
        }
        
        if (record.getCodBanco() != null) {
            sql.SET("COD_BANCO = #{codBanco,jdbcType=VARCHAR}");
        }
        
        if (record.getDigitocontrol() != null) {
            sql.SET("DIGITOCONTROL = #{digitocontrol,jdbcType=VARCHAR}");
        }
        
        if (record.getSjcs() != null) {
            sql.SET("SJCS = #{sjcs,jdbcType=VARCHAR}");
        }
        
        if (record.getIban() != null) {
            sql.SET("IBAN = #{iban,jdbcType=VARCHAR}");
        }
        
        if (record.getIdsufijosjcs() != null) {
            sql.SET("IDSUFIJOSJCS = #{idsufijosjcs,jdbcType=DECIMAL}");
        }
        
        if (record.getComisionimporte() != null) {
            sql.SET("COMISIONIMPORTE = #{comisionimporte,jdbcType=DECIMAL}");
        }
        
        if (record.getComisiondescripcion() != null) {
            sql.SET("COMISIONDESCRIPCION = #{comisiondescripcion,jdbcType=VARCHAR}");
        }
        
        if (record.getComisioncuentacontable() != null) {
            sql.SET("COMISIONCUENTACONTABLE = #{comisioncuentacontable,jdbcType=VARCHAR}");
        }
        
        if (record.getIdtipoiva() != null) {
            sql.SET("IDTIPOIVA = #{idtipoiva,jdbcType=DECIMAL}");
        }
        
        if (record.getConfigficherosesquema() != null) {
            sql.SET("CONFIGFICHEROSESQUEMA = #{configficherosesquema,jdbcType=DECIMAL}");
        }
        
        if (record.getConfigficherossecuencia() != null) {
            sql.SET("CONFIGFICHEROSSECUENCIA = #{configficherossecuencia,jdbcType=DECIMAL}");
        }
        
        if (record.getConfiglugaresquemasecuencia() != null) {
            sql.SET("CONFIGLUGARESQUEMASECUENCIA = #{configlugaresquemasecuencia,jdbcType=DECIMAL}");
        }
        
        if (record.getConfigconceptoampliado() != null) {
            sql.SET("CONFIGCONCEPTOAMPLIADO = #{configconceptoampliado,jdbcType=DECIMAL}");
        }
        
        sql.WHERE("IDINSTITUCION = #{idinstitucion,jdbcType=DECIMAL}");
        sql.WHERE("BANCOS_CODIGO = #{bancosCodigo,jdbcType=VARCHAR}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_BANCOINSTITUCION
     *
     * @mbg.generated Mon Jul 26 12:05:22 CEST 2021
     */
    protected void applyWhere(SQL sql, FacBancoinstitucionExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}