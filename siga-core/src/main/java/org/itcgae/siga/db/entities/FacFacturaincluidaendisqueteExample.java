package org.itcgae.siga.db.entities;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class FacFacturaincluidaendisqueteExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USCGAE.FAC_FACTURAINCLUIDAENDISQUETE
     *
     * @mbg.generated Mon Nov 08 16:37:53 CET 2021
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USCGAE.FAC_FACTURAINCLUIDAENDISQUETE
     *
     * @mbg.generated Mon Nov 08 16:37:53 CET 2021
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USCGAE.FAC_FACTURAINCLUIDAENDISQUETE
     *
     * @mbg.generated Mon Nov 08 16:37:53 CET 2021
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_FACTURAINCLUIDAENDISQUETE
     *
     * @mbg.generated Mon Nov 08 16:37:53 CET 2021
     */
    public FacFacturaincluidaendisqueteExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_FACTURAINCLUIDAENDISQUETE
     *
     * @mbg.generated Mon Nov 08 16:37:53 CET 2021
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_FACTURAINCLUIDAENDISQUETE
     *
     * @mbg.generated Mon Nov 08 16:37:53 CET 2021
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_FACTURAINCLUIDAENDISQUETE
     *
     * @mbg.generated Mon Nov 08 16:37:53 CET 2021
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_FACTURAINCLUIDAENDISQUETE
     *
     * @mbg.generated Mon Nov 08 16:37:53 CET 2021
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_FACTURAINCLUIDAENDISQUETE
     *
     * @mbg.generated Mon Nov 08 16:37:53 CET 2021
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_FACTURAINCLUIDAENDISQUETE
     *
     * @mbg.generated Mon Nov 08 16:37:53 CET 2021
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_FACTURAINCLUIDAENDISQUETE
     *
     * @mbg.generated Mon Nov 08 16:37:53 CET 2021
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_FACTURAINCLUIDAENDISQUETE
     *
     * @mbg.generated Mon Nov 08 16:37:53 CET 2021
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_FACTURAINCLUIDAENDISQUETE
     *
     * @mbg.generated Mon Nov 08 16:37:53 CET 2021
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_FACTURAINCLUIDAENDISQUETE
     *
     * @mbg.generated Mon Nov 08 16:37:53 CET 2021
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE.FAC_FACTURAINCLUIDAENDISQUETE
     *
     * @mbg.generated Mon Nov 08 16:37:53 CET 2021
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdinstitucionIsNull() {
            addCriterion("IDINSTITUCION is null");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionIsNotNull() {
            addCriterion("IDINSTITUCION is not null");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionEqualTo(Short value) {
            addCriterion("IDINSTITUCION =", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionNotEqualTo(Short value) {
            addCriterion("IDINSTITUCION <>", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionGreaterThan(Short value) {
            addCriterion("IDINSTITUCION >", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionGreaterThanOrEqualTo(Short value) {
            addCriterion("IDINSTITUCION >=", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionLessThan(Short value) {
            addCriterion("IDINSTITUCION <", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionLessThanOrEqualTo(Short value) {
            addCriterion("IDINSTITUCION <=", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionIn(List<Short> values) {
            addCriterion("IDINSTITUCION in", values, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionNotIn(List<Short> values) {
            addCriterion("IDINSTITUCION not in", values, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionBetween(Short value1, Short value2) {
            addCriterion("IDINSTITUCION between", value1, value2, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionNotBetween(Short value1, Short value2) {
            addCriterion("IDINSTITUCION not between", value1, value2, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIddisquetecargosIsNull() {
            addCriterion("IDDISQUETECARGOS is null");
            return (Criteria) this;
        }

        public Criteria andIddisquetecargosIsNotNull() {
            addCriterion("IDDISQUETECARGOS is not null");
            return (Criteria) this;
        }

        public Criteria andIddisquetecargosEqualTo(Long value) {
            addCriterion("IDDISQUETECARGOS =", value, "iddisquetecargos");
            return (Criteria) this;
        }

        public Criteria andIddisquetecargosNotEqualTo(Long value) {
            addCriterion("IDDISQUETECARGOS <>", value, "iddisquetecargos");
            return (Criteria) this;
        }

        public Criteria andIddisquetecargosGreaterThan(Long value) {
            addCriterion("IDDISQUETECARGOS >", value, "iddisquetecargos");
            return (Criteria) this;
        }

        public Criteria andIddisquetecargosGreaterThanOrEqualTo(Long value) {
            addCriterion("IDDISQUETECARGOS >=", value, "iddisquetecargos");
            return (Criteria) this;
        }

        public Criteria andIddisquetecargosLessThan(Long value) {
            addCriterion("IDDISQUETECARGOS <", value, "iddisquetecargos");
            return (Criteria) this;
        }

        public Criteria andIddisquetecargosLessThanOrEqualTo(Long value) {
            addCriterion("IDDISQUETECARGOS <=", value, "iddisquetecargos");
            return (Criteria) this;
        }

        public Criteria andIddisquetecargosIn(List<Long> values) {
            addCriterion("IDDISQUETECARGOS in", values, "iddisquetecargos");
            return (Criteria) this;
        }

        public Criteria andIddisquetecargosNotIn(List<Long> values) {
            addCriterion("IDDISQUETECARGOS not in", values, "iddisquetecargos");
            return (Criteria) this;
        }

        public Criteria andIddisquetecargosBetween(Long value1, Long value2) {
            addCriterion("IDDISQUETECARGOS between", value1, value2, "iddisquetecargos");
            return (Criteria) this;
        }

        public Criteria andIddisquetecargosNotBetween(Long value1, Long value2) {
            addCriterion("IDDISQUETECARGOS not between", value1, value2, "iddisquetecargos");
            return (Criteria) this;
        }

        public Criteria andIdfacturaincluidaendisqueteIsNull() {
            addCriterion("IDFACTURAINCLUIDAENDISQUETE is null");
            return (Criteria) this;
        }

        public Criteria andIdfacturaincluidaendisqueteIsNotNull() {
            addCriterion("IDFACTURAINCLUIDAENDISQUETE is not null");
            return (Criteria) this;
        }

        public Criteria andIdfacturaincluidaendisqueteEqualTo(Integer value) {
            addCriterion("IDFACTURAINCLUIDAENDISQUETE =", value, "idfacturaincluidaendisquete");
            return (Criteria) this;
        }

        public Criteria andIdfacturaincluidaendisqueteNotEqualTo(Integer value) {
            addCriterion("IDFACTURAINCLUIDAENDISQUETE <>", value, "idfacturaincluidaendisquete");
            return (Criteria) this;
        }

        public Criteria andIdfacturaincluidaendisqueteGreaterThan(Integer value) {
            addCriterion("IDFACTURAINCLUIDAENDISQUETE >", value, "idfacturaincluidaendisquete");
            return (Criteria) this;
        }

        public Criteria andIdfacturaincluidaendisqueteGreaterThanOrEqualTo(Integer value) {
            addCriterion("IDFACTURAINCLUIDAENDISQUETE >=", value, "idfacturaincluidaendisquete");
            return (Criteria) this;
        }

        public Criteria andIdfacturaincluidaendisqueteLessThan(Integer value) {
            addCriterion("IDFACTURAINCLUIDAENDISQUETE <", value, "idfacturaincluidaendisquete");
            return (Criteria) this;
        }

        public Criteria andIdfacturaincluidaendisqueteLessThanOrEqualTo(Integer value) {
            addCriterion("IDFACTURAINCLUIDAENDISQUETE <=", value, "idfacturaincluidaendisquete");
            return (Criteria) this;
        }

        public Criteria andIdfacturaincluidaendisqueteIn(List<Integer> values) {
            addCriterion("IDFACTURAINCLUIDAENDISQUETE in", values, "idfacturaincluidaendisquete");
            return (Criteria) this;
        }

        public Criteria andIdfacturaincluidaendisqueteNotIn(List<Integer> values) {
            addCriterion("IDFACTURAINCLUIDAENDISQUETE not in", values, "idfacturaincluidaendisquete");
            return (Criteria) this;
        }

        public Criteria andIdfacturaincluidaendisqueteBetween(Integer value1, Integer value2) {
            addCriterion("IDFACTURAINCLUIDAENDISQUETE between", value1, value2, "idfacturaincluidaendisquete");
            return (Criteria) this;
        }

        public Criteria andIdfacturaincluidaendisqueteNotBetween(Integer value1, Integer value2) {
            addCriterion("IDFACTURAINCLUIDAENDISQUETE not between", value1, value2, "idfacturaincluidaendisquete");
            return (Criteria) this;
        }

        public Criteria andIdfacturaIsNull() {
            addCriterion("IDFACTURA is null");
            return (Criteria) this;
        }

        public Criteria andIdfacturaIsNotNull() {
            addCriterion("IDFACTURA is not null");
            return (Criteria) this;
        }

        public Criteria andIdfacturaEqualTo(String value) {
            addCriterion("IDFACTURA =", value, "idfactura");
            return (Criteria) this;
        }

        public Criteria andIdfacturaNotEqualTo(String value) {
            addCriterion("IDFACTURA <>", value, "idfactura");
            return (Criteria) this;
        }

        public Criteria andIdfacturaGreaterThan(String value) {
            addCriterion("IDFACTURA >", value, "idfactura");
            return (Criteria) this;
        }

        public Criteria andIdfacturaGreaterThanOrEqualTo(String value) {
            addCriterion("IDFACTURA >=", value, "idfactura");
            return (Criteria) this;
        }

        public Criteria andIdfacturaLessThan(String value) {
            addCriterion("IDFACTURA <", value, "idfactura");
            return (Criteria) this;
        }

        public Criteria andIdfacturaLessThanOrEqualTo(String value) {
            addCriterion("IDFACTURA <=", value, "idfactura");
            return (Criteria) this;
        }

        public Criteria andIdfacturaLike(String value) {
            addCriterion("IDFACTURA like", value, "idfactura");
            return (Criteria) this;
        }

        public Criteria andIdfacturaNotLike(String value) {
            addCriterion("IDFACTURA not like", value, "idfactura");
            return (Criteria) this;
        }

        public Criteria andIdfacturaIn(List<String> values) {
            addCriterion("IDFACTURA in", values, "idfactura");
            return (Criteria) this;
        }

        public Criteria andIdfacturaNotIn(List<String> values) {
            addCriterion("IDFACTURA not in", values, "idfactura");
            return (Criteria) this;
        }

        public Criteria andIdfacturaBetween(String value1, String value2) {
            addCriterion("IDFACTURA between", value1, value2, "idfactura");
            return (Criteria) this;
        }

        public Criteria andIdfacturaNotBetween(String value1, String value2) {
            addCriterion("IDFACTURA not between", value1, value2, "idfactura");
            return (Criteria) this;
        }

        public Criteria andDevueltaIsNull() {
            addCriterion("DEVUELTA is null");
            return (Criteria) this;
        }

        public Criteria andDevueltaIsNotNull() {
            addCriterion("DEVUELTA is not null");
            return (Criteria) this;
        }

        public Criteria andDevueltaEqualTo(String value) {
            addCriterion("DEVUELTA =", value, "devuelta");
            return (Criteria) this;
        }

        public Criteria andDevueltaNotEqualTo(String value) {
            addCriterion("DEVUELTA <>", value, "devuelta");
            return (Criteria) this;
        }

        public Criteria andDevueltaGreaterThan(String value) {
            addCriterion("DEVUELTA >", value, "devuelta");
            return (Criteria) this;
        }

        public Criteria andDevueltaGreaterThanOrEqualTo(String value) {
            addCriterion("DEVUELTA >=", value, "devuelta");
            return (Criteria) this;
        }

        public Criteria andDevueltaLessThan(String value) {
            addCriterion("DEVUELTA <", value, "devuelta");
            return (Criteria) this;
        }

        public Criteria andDevueltaLessThanOrEqualTo(String value) {
            addCriterion("DEVUELTA <=", value, "devuelta");
            return (Criteria) this;
        }

        public Criteria andDevueltaLike(String value) {
            addCriterion("DEVUELTA like", value, "devuelta");
            return (Criteria) this;
        }

        public Criteria andDevueltaNotLike(String value) {
            addCriterion("DEVUELTA not like", value, "devuelta");
            return (Criteria) this;
        }

        public Criteria andDevueltaIn(List<String> values) {
            addCriterion("DEVUELTA in", values, "devuelta");
            return (Criteria) this;
        }

        public Criteria andDevueltaNotIn(List<String> values) {
            addCriterion("DEVUELTA not in", values, "devuelta");
            return (Criteria) this;
        }

        public Criteria andDevueltaBetween(String value1, String value2) {
            addCriterion("DEVUELTA between", value1, value2, "devuelta");
            return (Criteria) this;
        }

        public Criteria andDevueltaNotBetween(String value1, String value2) {
            addCriterion("DEVUELTA not between", value1, value2, "devuelta");
            return (Criteria) this;
        }

        public Criteria andContabilizadaIsNull() {
            addCriterion("CONTABILIZADA is null");
            return (Criteria) this;
        }

        public Criteria andContabilizadaIsNotNull() {
            addCriterion("CONTABILIZADA is not null");
            return (Criteria) this;
        }

        public Criteria andContabilizadaEqualTo(String value) {
            addCriterion("CONTABILIZADA =", value, "contabilizada");
            return (Criteria) this;
        }

        public Criteria andContabilizadaNotEqualTo(String value) {
            addCriterion("CONTABILIZADA <>", value, "contabilizada");
            return (Criteria) this;
        }

        public Criteria andContabilizadaGreaterThan(String value) {
            addCriterion("CONTABILIZADA >", value, "contabilizada");
            return (Criteria) this;
        }

        public Criteria andContabilizadaGreaterThanOrEqualTo(String value) {
            addCriterion("CONTABILIZADA >=", value, "contabilizada");
            return (Criteria) this;
        }

        public Criteria andContabilizadaLessThan(String value) {
            addCriterion("CONTABILIZADA <", value, "contabilizada");
            return (Criteria) this;
        }

        public Criteria andContabilizadaLessThanOrEqualTo(String value) {
            addCriterion("CONTABILIZADA <=", value, "contabilizada");
            return (Criteria) this;
        }

        public Criteria andContabilizadaLike(String value) {
            addCriterion("CONTABILIZADA like", value, "contabilizada");
            return (Criteria) this;
        }

        public Criteria andContabilizadaNotLike(String value) {
            addCriterion("CONTABILIZADA not like", value, "contabilizada");
            return (Criteria) this;
        }

        public Criteria andContabilizadaIn(List<String> values) {
            addCriterion("CONTABILIZADA in", values, "contabilizada");
            return (Criteria) this;
        }

        public Criteria andContabilizadaNotIn(List<String> values) {
            addCriterion("CONTABILIZADA not in", values, "contabilizada");
            return (Criteria) this;
        }

        public Criteria andContabilizadaBetween(String value1, String value2) {
            addCriterion("CONTABILIZADA between", value1, value2, "contabilizada");
            return (Criteria) this;
        }

        public Criteria andContabilizadaNotBetween(String value1, String value2) {
            addCriterion("CONTABILIZADA not between", value1, value2, "contabilizada");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionIsNull() {
            addCriterion("FECHAMODIFICACION is null");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionIsNotNull() {
            addCriterion("FECHAMODIFICACION is not null");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION =", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionNotEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION <>", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionGreaterThan(Date value) {
            addCriterion("FECHAMODIFICACION >", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionGreaterThanOrEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION >=", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionLessThan(Date value) {
            addCriterion("FECHAMODIFICACION <", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionLessThanOrEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION <=", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionIn(List<Date> values) {
            addCriterion("FECHAMODIFICACION in", values, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionNotIn(List<Date> values) {
            addCriterion("FECHAMODIFICACION not in", values, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionBetween(Date value1, Date value2) {
            addCriterion("FECHAMODIFICACION between", value1, value2, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionNotBetween(Date value1, Date value2) {
            addCriterion("FECHAMODIFICACION not between", value1, value2, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionIsNull() {
            addCriterion("USUMODIFICACION is null");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionIsNotNull() {
            addCriterion("USUMODIFICACION is not null");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionEqualTo(Integer value) {
            addCriterion("USUMODIFICACION =", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionNotEqualTo(Integer value) {
            addCriterion("USUMODIFICACION <>", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionGreaterThan(Integer value) {
            addCriterion("USUMODIFICACION >", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionGreaterThanOrEqualTo(Integer value) {
            addCriterion("USUMODIFICACION >=", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionLessThan(Integer value) {
            addCriterion("USUMODIFICACION <", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionLessThanOrEqualTo(Integer value) {
            addCriterion("USUMODIFICACION <=", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionIn(List<Integer> values) {
            addCriterion("USUMODIFICACION in", values, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionNotIn(List<Integer> values) {
            addCriterion("USUMODIFICACION not in", values, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionBetween(Integer value1, Integer value2) {
            addCriterion("USUMODIFICACION between", value1, value2, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionNotBetween(Integer value1, Integer value2) {
            addCriterion("USUMODIFICACION not between", value1, value2, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andIdreciboIsNull() {
            addCriterion("IDRECIBO is null");
            return (Criteria) this;
        }

        public Criteria andIdreciboIsNotNull() {
            addCriterion("IDRECIBO is not null");
            return (Criteria) this;
        }

        public Criteria andIdreciboEqualTo(String value) {
            addCriterion("IDRECIBO =", value, "idrecibo");
            return (Criteria) this;
        }

        public Criteria andIdreciboNotEqualTo(String value) {
            addCriterion("IDRECIBO <>", value, "idrecibo");
            return (Criteria) this;
        }

        public Criteria andIdreciboGreaterThan(String value) {
            addCriterion("IDRECIBO >", value, "idrecibo");
            return (Criteria) this;
        }

        public Criteria andIdreciboGreaterThanOrEqualTo(String value) {
            addCriterion("IDRECIBO >=", value, "idrecibo");
            return (Criteria) this;
        }

        public Criteria andIdreciboLessThan(String value) {
            addCriterion("IDRECIBO <", value, "idrecibo");
            return (Criteria) this;
        }

        public Criteria andIdreciboLessThanOrEqualTo(String value) {
            addCriterion("IDRECIBO <=", value, "idrecibo");
            return (Criteria) this;
        }

        public Criteria andIdreciboLike(String value) {
            addCriterion("IDRECIBO like", value, "idrecibo");
            return (Criteria) this;
        }

        public Criteria andIdreciboNotLike(String value) {
            addCriterion("IDRECIBO not like", value, "idrecibo");
            return (Criteria) this;
        }

        public Criteria andIdreciboIn(List<String> values) {
            addCriterion("IDRECIBO in", values, "idrecibo");
            return (Criteria) this;
        }

        public Criteria andIdreciboNotIn(List<String> values) {
            addCriterion("IDRECIBO not in", values, "idrecibo");
            return (Criteria) this;
        }

        public Criteria andIdreciboBetween(String value1, String value2) {
            addCriterion("IDRECIBO between", value1, value2, "idrecibo");
            return (Criteria) this;
        }

        public Criteria andIdreciboNotBetween(String value1, String value2) {
            addCriterion("IDRECIBO not between", value1, value2, "idrecibo");
            return (Criteria) this;
        }

        public Criteria andIdpersonaIsNull() {
            addCriterion("IDPERSONA is null");
            return (Criteria) this;
        }

        public Criteria andIdpersonaIsNotNull() {
            addCriterion("IDPERSONA is not null");
            return (Criteria) this;
        }

        public Criteria andIdpersonaEqualTo(Long value) {
            addCriterion("IDPERSONA =", value, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaNotEqualTo(Long value) {
            addCriterion("IDPERSONA <>", value, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaGreaterThan(Long value) {
            addCriterion("IDPERSONA >", value, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaGreaterThanOrEqualTo(Long value) {
            addCriterion("IDPERSONA >=", value, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaLessThan(Long value) {
            addCriterion("IDPERSONA <", value, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaLessThanOrEqualTo(Long value) {
            addCriterion("IDPERSONA <=", value, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaIn(List<Long> values) {
            addCriterion("IDPERSONA in", values, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaNotIn(List<Long> values) {
            addCriterion("IDPERSONA not in", values, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaBetween(Long value1, Long value2) {
            addCriterion("IDPERSONA between", value1, value2, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaNotBetween(Long value1, Long value2) {
            addCriterion("IDPERSONA not between", value1, value2, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdcuentaIsNull() {
            addCriterion("IDCUENTA is null");
            return (Criteria) this;
        }

        public Criteria andIdcuentaIsNotNull() {
            addCriterion("IDCUENTA is not null");
            return (Criteria) this;
        }

        public Criteria andIdcuentaEqualTo(Short value) {
            addCriterion("IDCUENTA =", value, "idcuenta");
            return (Criteria) this;
        }

        public Criteria andIdcuentaNotEqualTo(Short value) {
            addCriterion("IDCUENTA <>", value, "idcuenta");
            return (Criteria) this;
        }

        public Criteria andIdcuentaGreaterThan(Short value) {
            addCriterion("IDCUENTA >", value, "idcuenta");
            return (Criteria) this;
        }

        public Criteria andIdcuentaGreaterThanOrEqualTo(Short value) {
            addCriterion("IDCUENTA >=", value, "idcuenta");
            return (Criteria) this;
        }

        public Criteria andIdcuentaLessThan(Short value) {
            addCriterion("IDCUENTA <", value, "idcuenta");
            return (Criteria) this;
        }

        public Criteria andIdcuentaLessThanOrEqualTo(Short value) {
            addCriterion("IDCUENTA <=", value, "idcuenta");
            return (Criteria) this;
        }

        public Criteria andIdcuentaIn(List<Short> values) {
            addCriterion("IDCUENTA in", values, "idcuenta");
            return (Criteria) this;
        }

        public Criteria andIdcuentaNotIn(List<Short> values) {
            addCriterion("IDCUENTA not in", values, "idcuenta");
            return (Criteria) this;
        }

        public Criteria andIdcuentaBetween(Short value1, Short value2) {
            addCriterion("IDCUENTA between", value1, value2, "idcuenta");
            return (Criteria) this;
        }

        public Criteria andIdcuentaNotBetween(Short value1, Short value2) {
            addCriterion("IDCUENTA not between", value1, value2, "idcuenta");
            return (Criteria) this;
        }

        public Criteria andImporteIsNull() {
            addCriterion("IMPORTE is null");
            return (Criteria) this;
        }

        public Criteria andImporteIsNotNull() {
            addCriterion("IMPORTE is not null");
            return (Criteria) this;
        }

        public Criteria andImporteEqualTo(BigDecimal value) {
            addCriterion("IMPORTE =", value, "importe");
            return (Criteria) this;
        }

        public Criteria andImporteNotEqualTo(BigDecimal value) {
            addCriterion("IMPORTE <>", value, "importe");
            return (Criteria) this;
        }

        public Criteria andImporteGreaterThan(BigDecimal value) {
            addCriterion("IMPORTE >", value, "importe");
            return (Criteria) this;
        }

        public Criteria andImporteGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("IMPORTE >=", value, "importe");
            return (Criteria) this;
        }

        public Criteria andImporteLessThan(BigDecimal value) {
            addCriterion("IMPORTE <", value, "importe");
            return (Criteria) this;
        }

        public Criteria andImporteLessThanOrEqualTo(BigDecimal value) {
            addCriterion("IMPORTE <=", value, "importe");
            return (Criteria) this;
        }

        public Criteria andImporteIn(List<BigDecimal> values) {
            addCriterion("IMPORTE in", values, "importe");
            return (Criteria) this;
        }

        public Criteria andImporteNotIn(List<BigDecimal> values) {
            addCriterion("IMPORTE not in", values, "importe");
            return (Criteria) this;
        }

        public Criteria andImporteBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("IMPORTE between", value1, value2, "importe");
            return (Criteria) this;
        }

        public Criteria andImporteNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("IMPORTE not between", value1, value2, "importe");
            return (Criteria) this;
        }

        public Criteria andIdrenegociacionIsNull() {
            addCriterion("IDRENEGOCIACION is null");
            return (Criteria) this;
        }

        public Criteria andIdrenegociacionIsNotNull() {
            addCriterion("IDRENEGOCIACION is not null");
            return (Criteria) this;
        }

        public Criteria andIdrenegociacionEqualTo(Short value) {
            addCriterion("IDRENEGOCIACION =", value, "idrenegociacion");
            return (Criteria) this;
        }

        public Criteria andIdrenegociacionNotEqualTo(Short value) {
            addCriterion("IDRENEGOCIACION <>", value, "idrenegociacion");
            return (Criteria) this;
        }

        public Criteria andIdrenegociacionGreaterThan(Short value) {
            addCriterion("IDRENEGOCIACION >", value, "idrenegociacion");
            return (Criteria) this;
        }

        public Criteria andIdrenegociacionGreaterThanOrEqualTo(Short value) {
            addCriterion("IDRENEGOCIACION >=", value, "idrenegociacion");
            return (Criteria) this;
        }

        public Criteria andIdrenegociacionLessThan(Short value) {
            addCriterion("IDRENEGOCIACION <", value, "idrenegociacion");
            return (Criteria) this;
        }

        public Criteria andIdrenegociacionLessThanOrEqualTo(Short value) {
            addCriterion("IDRENEGOCIACION <=", value, "idrenegociacion");
            return (Criteria) this;
        }

        public Criteria andIdrenegociacionIn(List<Short> values) {
            addCriterion("IDRENEGOCIACION in", values, "idrenegociacion");
            return (Criteria) this;
        }

        public Criteria andIdrenegociacionNotIn(List<Short> values) {
            addCriterion("IDRENEGOCIACION not in", values, "idrenegociacion");
            return (Criteria) this;
        }

        public Criteria andIdrenegociacionBetween(Short value1, Short value2) {
            addCriterion("IDRENEGOCIACION between", value1, value2, "idrenegociacion");
            return (Criteria) this;
        }

        public Criteria andIdrenegociacionNotBetween(Short value1, Short value2) {
            addCriterion("IDRENEGOCIACION not between", value1, value2, "idrenegociacion");
            return (Criteria) this;
        }

        public Criteria andFechadevolucionIsNull() {
            addCriterion("FECHADEVOLUCION is null");
            return (Criteria) this;
        }

        public Criteria andFechadevolucionIsNotNull() {
            addCriterion("FECHADEVOLUCION is not null");
            return (Criteria) this;
        }

        public Criteria andFechadevolucionEqualTo(Date value) {
            addCriterion("FECHADEVOLUCION =", value, "fechadevolucion");
            return (Criteria) this;
        }

        public Criteria andFechadevolucionNotEqualTo(Date value) {
            addCriterion("FECHADEVOLUCION <>", value, "fechadevolucion");
            return (Criteria) this;
        }

        public Criteria andFechadevolucionGreaterThan(Date value) {
            addCriterion("FECHADEVOLUCION >", value, "fechadevolucion");
            return (Criteria) this;
        }

        public Criteria andFechadevolucionGreaterThanOrEqualTo(Date value) {
            addCriterion("FECHADEVOLUCION >=", value, "fechadevolucion");
            return (Criteria) this;
        }

        public Criteria andFechadevolucionLessThan(Date value) {
            addCriterion("FECHADEVOLUCION <", value, "fechadevolucion");
            return (Criteria) this;
        }

        public Criteria andFechadevolucionLessThanOrEqualTo(Date value) {
            addCriterion("FECHADEVOLUCION <=", value, "fechadevolucion");
            return (Criteria) this;
        }

        public Criteria andFechadevolucionIn(List<Date> values) {
            addCriterion("FECHADEVOLUCION in", values, "fechadevolucion");
            return (Criteria) this;
        }

        public Criteria andFechadevolucionNotIn(List<Date> values) {
            addCriterion("FECHADEVOLUCION not in", values, "fechadevolucion");
            return (Criteria) this;
        }

        public Criteria andFechadevolucionBetween(Date value1, Date value2) {
            addCriterion("FECHADEVOLUCION between", value1, value2, "fechadevolucion");
            return (Criteria) this;
        }

        public Criteria andFechadevolucionNotBetween(Date value1, Date value2) {
            addCriterion("FECHADEVOLUCION not between", value1, value2, "fechadevolucion");
            return (Criteria) this;
        }

        public Criteria andEsquemaIsNull() {
            addCriterion("ESQUEMA is null");
            return (Criteria) this;
        }

        public Criteria andEsquemaIsNotNull() {
            addCriterion("ESQUEMA is not null");
            return (Criteria) this;
        }

        public Criteria andEsquemaEqualTo(Short value) {
            addCriterion("ESQUEMA =", value, "esquema");
            return (Criteria) this;
        }

        public Criteria andEsquemaNotEqualTo(Short value) {
            addCriterion("ESQUEMA <>", value, "esquema");
            return (Criteria) this;
        }

        public Criteria andEsquemaGreaterThan(Short value) {
            addCriterion("ESQUEMA >", value, "esquema");
            return (Criteria) this;
        }

        public Criteria andEsquemaGreaterThanOrEqualTo(Short value) {
            addCriterion("ESQUEMA >=", value, "esquema");
            return (Criteria) this;
        }

        public Criteria andEsquemaLessThan(Short value) {
            addCriterion("ESQUEMA <", value, "esquema");
            return (Criteria) this;
        }

        public Criteria andEsquemaLessThanOrEqualTo(Short value) {
            addCriterion("ESQUEMA <=", value, "esquema");
            return (Criteria) this;
        }

        public Criteria andEsquemaIn(List<Short> values) {
            addCriterion("ESQUEMA in", values, "esquema");
            return (Criteria) this;
        }

        public Criteria andEsquemaNotIn(List<Short> values) {
            addCriterion("ESQUEMA not in", values, "esquema");
            return (Criteria) this;
        }

        public Criteria andEsquemaBetween(Short value1, Short value2) {
            addCriterion("ESQUEMA between", value1, value2, "esquema");
            return (Criteria) this;
        }

        public Criteria andEsquemaNotBetween(Short value1, Short value2) {
            addCriterion("ESQUEMA not between", value1, value2, "esquema");
            return (Criteria) this;
        }

        public Criteria andSecuenciaIsNull() {
            addCriterion("SECUENCIA is null");
            return (Criteria) this;
        }

        public Criteria andSecuenciaIsNotNull() {
            addCriterion("SECUENCIA is not null");
            return (Criteria) this;
        }

        public Criteria andSecuenciaEqualTo(Short value) {
            addCriterion("SECUENCIA =", value, "secuencia");
            return (Criteria) this;
        }

        public Criteria andSecuenciaNotEqualTo(Short value) {
            addCriterion("SECUENCIA <>", value, "secuencia");
            return (Criteria) this;
        }

        public Criteria andSecuenciaGreaterThan(Short value) {
            addCriterion("SECUENCIA >", value, "secuencia");
            return (Criteria) this;
        }

        public Criteria andSecuenciaGreaterThanOrEqualTo(Short value) {
            addCriterion("SECUENCIA >=", value, "secuencia");
            return (Criteria) this;
        }

        public Criteria andSecuenciaLessThan(Short value) {
            addCriterion("SECUENCIA <", value, "secuencia");
            return (Criteria) this;
        }

        public Criteria andSecuenciaLessThanOrEqualTo(Short value) {
            addCriterion("SECUENCIA <=", value, "secuencia");
            return (Criteria) this;
        }

        public Criteria andSecuenciaIn(List<Short> values) {
            addCriterion("SECUENCIA in", values, "secuencia");
            return (Criteria) this;
        }

        public Criteria andSecuenciaNotIn(List<Short> values) {
            addCriterion("SECUENCIA not in", values, "secuencia");
            return (Criteria) this;
        }

        public Criteria andSecuenciaBetween(Short value1, Short value2) {
            addCriterion("SECUENCIA between", value1, value2, "secuencia");
            return (Criteria) this;
        }

        public Criteria andSecuenciaNotBetween(Short value1, Short value2) {
            addCriterion("SECUENCIA not between", value1, value2, "secuencia");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE.FAC_FACTURAINCLUIDAENDISQUETE
     *
     * @mbg.generated do_not_delete_during_merge Mon Nov 08 16:37:53 CET 2021
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE.FAC_FACTURAINCLUIDAENDISQUETE
     *
     * @mbg.generated Mon Nov 08 16:37:53 CET 2021
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}