package org.itcgae.siga.db.mappers;

import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;
import org.itcgae.siga.db.entities.CenNocolegiado;
import org.itcgae.siga.db.entities.CenNocolegiadoExample.Criteria;
import org.itcgae.siga.db.entities.CenNocolegiadoExample.Criterion;
import org.itcgae.siga.db.entities.CenNocolegiadoExample;

public class CenNocolegiadoSqlProvider {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.CEN_NOCOLEGIADO
	 * @mbg.generated  Wed Jan 02 10:31:20 CET 2019
	 */
	public String countByExample(CenNocolegiadoExample example) {
		SQL sql = new SQL();
		sql.SELECT("count(*)").FROM("CEN_NOCOLEGIADO");
		applyWhere(sql, example, false);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.CEN_NOCOLEGIADO
	 * @mbg.generated  Wed Jan 02 10:31:20 CET 2019
	 */
	public String deleteByExample(CenNocolegiadoExample example) {
		SQL sql = new SQL();
		sql.DELETE_FROM("CEN_NOCOLEGIADO");
		applyWhere(sql, example, false);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.CEN_NOCOLEGIADO
	 * @mbg.generated  Wed Jan 02 10:31:20 CET 2019
	 */
	public String insertSelective(CenNocolegiado record) {
		SQL sql = new SQL();
		sql.INSERT_INTO("CEN_NOCOLEGIADO");
		if (record.getIdinstitucion() != null) {
			sql.VALUES("IDINSTITUCION", "#{idinstitucion,jdbcType=DECIMAL}");
		}
		if (record.getIdpersona() != null) {
			sql.VALUES("IDPERSONA", "#{idpersona,jdbcType=DECIMAL}");
		}
		if (record.getFechamodificacion() != null) {
			sql.VALUES("FECHAMODIFICACION", "#{fechamodificacion,jdbcType=TIMESTAMP}");
		}
		if (record.getUsumodificacion() != null) {
			sql.VALUES("USUMODIFICACION", "#{usumodificacion,jdbcType=DECIMAL}");
		}
		if (record.getSerie() != null) {
			sql.VALUES("SERIE", "#{serie,jdbcType=VARCHAR}");
		}
		if (record.getNumeroref() != null) {
			sql.VALUES("NUMEROREF", "#{numeroref,jdbcType=VARCHAR}");
		}
		if (record.getSociedadsj() != null) {
			sql.VALUES("SOCIEDADSJ", "#{sociedadsj,jdbcType=VARCHAR}");
		}
		if (record.getTipo() != null) {
			sql.VALUES("TIPO", "#{tipo,jdbcType=VARCHAR}");
		}
		if (record.getAnotaciones() != null) {
			sql.VALUES("ANOTACIONES", "#{anotaciones,jdbcType=VARCHAR}");
		}
		if (record.getPrefijoNumreg() != null) {
			sql.VALUES("PREFIJO_NUMREG", "#{prefijoNumreg,jdbcType=VARCHAR}");
		}
		if (record.getContadorNumreg() != null) {
			sql.VALUES("CONTADOR_NUMREG", "#{contadorNumreg,jdbcType=DECIMAL}");
		}
		if (record.getSufijoNumreg() != null) {
			sql.VALUES("SUFIJO_NUMREG", "#{sufijoNumreg,jdbcType=VARCHAR}");
		}
		if (record.getFechafin() != null) {
			sql.VALUES("FECHAFIN", "#{fechafin,jdbcType=TIMESTAMP}");
		}
		if (record.getIdpersonanotario() != null) {
			sql.VALUES("IDPERSONANOTARIO", "#{idpersonanotario,jdbcType=DECIMAL}");
		}
		if (record.getResena() != null) {
			sql.VALUES("RESENA", "#{resena,jdbcType=VARCHAR}");
		}
		if (record.getObjetosocial() != null) {
			sql.VALUES("OBJETOSOCIAL", "#{objetosocial,jdbcType=VARCHAR}");
		}
		if (record.getSociedadprofesional() != null) {
			sql.VALUES("SOCIEDADPROFESIONAL", "#{sociedadprofesional,jdbcType=VARCHAR}");
		}
		if (record.getPrefijoNumsspp() != null) {
			sql.VALUES("PREFIJO_NUMSSPP", "#{prefijoNumsspp,jdbcType=VARCHAR}");
		}
		if (record.getContadorNumsspp() != null) {
			sql.VALUES("CONTADOR_NUMSSPP", "#{contadorNumsspp,jdbcType=DECIMAL}");
		}
		if (record.getSufijoNumsspp() != null) {
			sql.VALUES("SUFIJO_NUMSSPP", "#{sufijoNumsspp,jdbcType=VARCHAR}");
		}
		if (record.getNopoliza() != null) {
			sql.VALUES("NOPOLIZA", "#{nopoliza,jdbcType=VARCHAR}");
		}
		if (record.getCompaniaseg() != null) {
			sql.VALUES("COMPANIASEG", "#{companiaseg,jdbcType=VARCHAR}");
		}
		if (record.getIdentificadords() != null) {
			sql.VALUES("IDENTIFICADORDS", "#{identificadords,jdbcType=VARCHAR}");
		}
		if (record.getFechaBaja() != null) {
			sql.VALUES("FECHA_BAJA", "#{fechaBaja,jdbcType=TIMESTAMP}");
		}
		if (record.getIdDatosReg() != null) {
			sql.VALUES("ID_DATOS_REG", "#{idDatosReg,jdbcType=DECIMAL}");
		}
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.CEN_NOCOLEGIADO
	 * @mbg.generated  Wed Jan 02 10:31:20 CET 2019
	 */
	public String selectByExample(CenNocolegiadoExample example) {
		SQL sql = new SQL();
		if (example != null && example.isDistinct()) {
			sql.SELECT_DISTINCT("IDINSTITUCION");
		} else {
			sql.SELECT("IDINSTITUCION");
		}
		sql.SELECT("IDPERSONA");
		sql.SELECT("FECHAMODIFICACION");
		sql.SELECT("USUMODIFICACION");
		sql.SELECT("SERIE");
		sql.SELECT("NUMEROREF");
		sql.SELECT("SOCIEDADSJ");
		sql.SELECT("TIPO");
		sql.SELECT("ANOTACIONES");
		sql.SELECT("PREFIJO_NUMREG");
		sql.SELECT("CONTADOR_NUMREG");
		sql.SELECT("SUFIJO_NUMREG");
		sql.SELECT("FECHAFIN");
		sql.SELECT("IDPERSONANOTARIO");
		sql.SELECT("RESENA");
		sql.SELECT("OBJETOSOCIAL");
		sql.SELECT("SOCIEDADPROFESIONAL");
		sql.SELECT("PREFIJO_NUMSSPP");
		sql.SELECT("CONTADOR_NUMSSPP");
		sql.SELECT("SUFIJO_NUMSSPP");
		sql.SELECT("NOPOLIZA");
		sql.SELECT("COMPANIASEG");
		sql.SELECT("IDENTIFICADORDS");
		sql.SELECT("FECHA_BAJA");
		sql.SELECT("ID_DATOS_REG");
		sql.FROM("CEN_NOCOLEGIADO");
		applyWhere(sql, example, false);
		if (example != null && example.getOrderByClause() != null) {
			sql.ORDER_BY(example.getOrderByClause());
		}
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.CEN_NOCOLEGIADO
	 * @mbg.generated  Wed Jan 02 10:31:20 CET 2019
	 */
	public String updateByExampleSelective(Map<String, Object> parameter) {
		CenNocolegiado record = (CenNocolegiado) parameter.get("record");
		CenNocolegiadoExample example = (CenNocolegiadoExample) parameter.get("example");
		SQL sql = new SQL();
		sql.UPDATE("CEN_NOCOLEGIADO");
		if (record.getIdinstitucion() != null) {
			sql.SET("IDINSTITUCION = #{record.idinstitucion,jdbcType=DECIMAL}");
		}
		if (record.getIdpersona() != null) {
			sql.SET("IDPERSONA = #{record.idpersona,jdbcType=DECIMAL}");
		}
		if (record.getFechamodificacion() != null) {
			sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=TIMESTAMP}");
		}
		if (record.getUsumodificacion() != null) {
			sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
		}
		if (record.getSerie() != null) {
			sql.SET("SERIE = #{record.serie,jdbcType=VARCHAR}");
		}
		if (record.getNumeroref() != null) {
			sql.SET("NUMEROREF = #{record.numeroref,jdbcType=VARCHAR}");
		}
		if (record.getSociedadsj() != null) {
			sql.SET("SOCIEDADSJ = #{record.sociedadsj,jdbcType=VARCHAR}");
		}
		if (record.getTipo() != null) {
			sql.SET("TIPO = #{record.tipo,jdbcType=VARCHAR}");
		}
		if (record.getAnotaciones() != null) {
			sql.SET("ANOTACIONES = #{record.anotaciones,jdbcType=VARCHAR}");
		}
		if (record.getPrefijoNumreg() != null) {
			sql.SET("PREFIJO_NUMREG = #{record.prefijoNumreg,jdbcType=VARCHAR}");
		}
		if (record.getContadorNumreg() != null) {
			sql.SET("CONTADOR_NUMREG = #{record.contadorNumreg,jdbcType=DECIMAL}");
		}
		if (record.getSufijoNumreg() != null) {
			sql.SET("SUFIJO_NUMREG = #{record.sufijoNumreg,jdbcType=VARCHAR}");
		}
		if (record.getFechafin() != null) {
			sql.SET("FECHAFIN = #{record.fechafin,jdbcType=TIMESTAMP}");
		}
		if (record.getIdpersonanotario() != null) {
			sql.SET("IDPERSONANOTARIO = #{record.idpersonanotario,jdbcType=DECIMAL}");
		}
		if (record.getResena() != null) {
			sql.SET("RESENA = #{record.resena,jdbcType=VARCHAR}");
		}
		if (record.getObjetosocial() != null) {
			sql.SET("OBJETOSOCIAL = #{record.objetosocial,jdbcType=VARCHAR}");
		}
		if (record.getSociedadprofesional() != null) {
			sql.SET("SOCIEDADPROFESIONAL = #{record.sociedadprofesional,jdbcType=VARCHAR}");
		}
		if (record.getPrefijoNumsspp() != null) {
			sql.SET("PREFIJO_NUMSSPP = #{record.prefijoNumsspp,jdbcType=VARCHAR}");
		}
		if (record.getContadorNumsspp() != null) {
			sql.SET("CONTADOR_NUMSSPP = #{record.contadorNumsspp,jdbcType=DECIMAL}");
		}
		if (record.getSufijoNumsspp() != null) {
			sql.SET("SUFIJO_NUMSSPP = #{record.sufijoNumsspp,jdbcType=VARCHAR}");
		}
		if (record.getNopoliza() != null) {
			sql.SET("NOPOLIZA = #{record.nopoliza,jdbcType=VARCHAR}");
		}
		if (record.getCompaniaseg() != null) {
			sql.SET("COMPANIASEG = #{record.companiaseg,jdbcType=VARCHAR}");
		}
		if (record.getIdentificadords() != null) {
			sql.SET("IDENTIFICADORDS = #{record.identificadords,jdbcType=VARCHAR}");
		}
		if (record.getFechaBaja() != null) {
			sql.SET("FECHA_BAJA = #{record.fechaBaja,jdbcType=TIMESTAMP}");
		}
		if (record.getIdDatosReg() != null) {
			sql.SET("ID_DATOS_REG = #{record.idDatosReg,jdbcType=DECIMAL}");
		}
		applyWhere(sql, example, true);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.CEN_NOCOLEGIADO
	 * @mbg.generated  Wed Jan 02 10:31:20 CET 2019
	 */
	public String updateByExample(Map<String, Object> parameter) {
		SQL sql = new SQL();
		sql.UPDATE("CEN_NOCOLEGIADO");
		sql.SET("IDINSTITUCION = #{record.idinstitucion,jdbcType=DECIMAL}");
		sql.SET("IDPERSONA = #{record.idpersona,jdbcType=DECIMAL}");
		sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=TIMESTAMP}");
		sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
		sql.SET("SERIE = #{record.serie,jdbcType=VARCHAR}");
		sql.SET("NUMEROREF = #{record.numeroref,jdbcType=VARCHAR}");
		sql.SET("SOCIEDADSJ = #{record.sociedadsj,jdbcType=VARCHAR}");
		sql.SET("TIPO = #{record.tipo,jdbcType=VARCHAR}");
		sql.SET("ANOTACIONES = #{record.anotaciones,jdbcType=VARCHAR}");
		sql.SET("PREFIJO_NUMREG = #{record.prefijoNumreg,jdbcType=VARCHAR}");
		sql.SET("CONTADOR_NUMREG = #{record.contadorNumreg,jdbcType=DECIMAL}");
		sql.SET("SUFIJO_NUMREG = #{record.sufijoNumreg,jdbcType=VARCHAR}");
		sql.SET("FECHAFIN = #{record.fechafin,jdbcType=TIMESTAMP}");
		sql.SET("IDPERSONANOTARIO = #{record.idpersonanotario,jdbcType=DECIMAL}");
		sql.SET("RESENA = #{record.resena,jdbcType=VARCHAR}");
		sql.SET("OBJETOSOCIAL = #{record.objetosocial,jdbcType=VARCHAR}");
		sql.SET("SOCIEDADPROFESIONAL = #{record.sociedadprofesional,jdbcType=VARCHAR}");
		sql.SET("PREFIJO_NUMSSPP = #{record.prefijoNumsspp,jdbcType=VARCHAR}");
		sql.SET("CONTADOR_NUMSSPP = #{record.contadorNumsspp,jdbcType=DECIMAL}");
		sql.SET("SUFIJO_NUMSSPP = #{record.sufijoNumsspp,jdbcType=VARCHAR}");
		sql.SET("NOPOLIZA = #{record.nopoliza,jdbcType=VARCHAR}");
		sql.SET("COMPANIASEG = #{record.companiaseg,jdbcType=VARCHAR}");
		sql.SET("IDENTIFICADORDS = #{record.identificadords,jdbcType=VARCHAR}");
		sql.SET("FECHA_BAJA = #{record.fechaBaja,jdbcType=TIMESTAMP}");
		sql.SET("ID_DATOS_REG = #{record.idDatosReg,jdbcType=DECIMAL}");
		CenNocolegiadoExample example = (CenNocolegiadoExample) parameter.get("example");
		applyWhere(sql, example, true);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.CEN_NOCOLEGIADO
	 * @mbg.generated  Wed Jan 02 10:31:20 CET 2019
	 */
	public String updateByPrimaryKeySelective(CenNocolegiado record) {
		SQL sql = new SQL();
		sql.UPDATE("CEN_NOCOLEGIADO");
		if (record.getFechamodificacion() != null) {
			sql.SET("FECHAMODIFICACION = #{fechamodificacion,jdbcType=TIMESTAMP}");
		}
		if (record.getUsumodificacion() != null) {
			sql.SET("USUMODIFICACION = #{usumodificacion,jdbcType=DECIMAL}");
		}
		if (record.getSerie() != null) {
			sql.SET("SERIE = #{serie,jdbcType=VARCHAR}");
		}
		if (record.getNumeroref() != null) {
			sql.SET("NUMEROREF = #{numeroref,jdbcType=VARCHAR}");
		}
		if (record.getSociedadsj() != null) {
			sql.SET("SOCIEDADSJ = #{sociedadsj,jdbcType=VARCHAR}");
		}
		if (record.getTipo() != null) {
			sql.SET("TIPO = #{tipo,jdbcType=VARCHAR}");
		}
		if (record.getAnotaciones() != null) {
			sql.SET("ANOTACIONES = #{anotaciones,jdbcType=VARCHAR}");
		}
		if (record.getPrefijoNumreg() != null) {
			sql.SET("PREFIJO_NUMREG = #{prefijoNumreg,jdbcType=VARCHAR}");
		}
		if (record.getContadorNumreg() != null) {
			sql.SET("CONTADOR_NUMREG = #{contadorNumreg,jdbcType=DECIMAL}");
		}
		if (record.getSufijoNumreg() != null) {
			sql.SET("SUFIJO_NUMREG = #{sufijoNumreg,jdbcType=VARCHAR}");
		}
		if (record.getFechafin() != null) {
			sql.SET("FECHAFIN = #{fechafin,jdbcType=TIMESTAMP}");
		}
		if (record.getIdpersonanotario() != null) {
			sql.SET("IDPERSONANOTARIO = #{idpersonanotario,jdbcType=DECIMAL}");
		}
		if (record.getResena() != null) {
			sql.SET("RESENA = #{resena,jdbcType=VARCHAR}");
		}
		if (record.getObjetosocial() != null) {
			sql.SET("OBJETOSOCIAL = #{objetosocial,jdbcType=VARCHAR}");
		}
		if (record.getSociedadprofesional() != null) {
			sql.SET("SOCIEDADPROFESIONAL = #{sociedadprofesional,jdbcType=VARCHAR}");
		}
		if (record.getPrefijoNumsspp() != null) {
			sql.SET("PREFIJO_NUMSSPP = #{prefijoNumsspp,jdbcType=VARCHAR}");
		}
		if (record.getContadorNumsspp() != null) {
			sql.SET("CONTADOR_NUMSSPP = #{contadorNumsspp,jdbcType=DECIMAL}");
		}
		if (record.getSufijoNumsspp() != null) {
			sql.SET("SUFIJO_NUMSSPP = #{sufijoNumsspp,jdbcType=VARCHAR}");
		}
		if (record.getNopoliza() != null) {
			sql.SET("NOPOLIZA = #{nopoliza,jdbcType=VARCHAR}");
		}
		if (record.getCompaniaseg() != null) {
			sql.SET("COMPANIASEG = #{companiaseg,jdbcType=VARCHAR}");
		}
		if (record.getIdentificadords() != null) {
			sql.SET("IDENTIFICADORDS = #{identificadords,jdbcType=VARCHAR}");
		}
		if (record.getFechaBaja() != null) {
			sql.SET("FECHA_BAJA = #{fechaBaja,jdbcType=TIMESTAMP}");
		}
		if (record.getIdDatosReg() != null) {
			sql.SET("ID_DATOS_REG = #{idDatosReg,jdbcType=DECIMAL}");
		}
		sql.WHERE("IDINSTITUCION = #{idinstitucion,jdbcType=DECIMAL}");
		sql.WHERE("IDPERSONA = #{idpersona,jdbcType=DECIMAL}");
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.CEN_NOCOLEGIADO
	 * @mbg.generated  Wed Jan 02 10:31:20 CET 2019
	 */
	protected void applyWhere(SQL sql, CenNocolegiadoExample example, boolean includeExamplePhrase) {
		if (example == null) {
			return;
		}
		String parmPhrase1;
		String parmPhrase1_th;
		String parmPhrase2;
		String parmPhrase2_th;
		String parmPhrase3;
		String parmPhrase3_th;
		if (includeExamplePhrase) {
			parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
			parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
			parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
			parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
			parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
			parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
		} else {
			parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
			parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
			parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
			parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
			parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
			parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
		}
		StringBuilder sb = new StringBuilder();
		List<Criteria> oredCriteria = example.getOredCriteria();
		boolean firstCriteria = true;
		for (int i = 0; i < oredCriteria.size(); i++) {
			Criteria criteria = oredCriteria.get(i);
			if (criteria.isValid()) {
				if (firstCriteria) {
					firstCriteria = false;
				} else {
					sb.append(" or ");
				}
				sb.append('(');
				List<Criterion> criterions = criteria.getAllCriteria();
				boolean firstCriterion = true;
				for (int j = 0; j < criterions.size(); j++) {
					Criterion criterion = criterions.get(j);
					if (firstCriterion) {
						firstCriterion = false;
					} else {
						sb.append(" and ");
					}
					if (criterion.isNoValue()) {
						sb.append(criterion.getCondition());
					} else if (criterion.isSingleValue()) {
						if (criterion.getTypeHandler() == null) {
							sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
						} else {
							sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,
									criterion.getTypeHandler()));
						}
					} else if (criterion.isBetweenValue()) {
						if (criterion.getTypeHandler() == null) {
							sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
						} else {
							sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j,
									criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
						}
					} else if (criterion.isListValue()) {
						sb.append(criterion.getCondition());
						sb.append(" (");
						List<?> listItems = (List<?>) criterion.getValue();
						boolean comma = false;
						for (int k = 0; k < listItems.size(); k++) {
							if (comma) {
								sb.append(", ");
							} else {
								comma = true;
							}
							if (criterion.getTypeHandler() == null) {
								sb.append(String.format(parmPhrase3, i, j, k));
							} else {
								sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
							}
						}
						sb.append(')');
					}
				}
				sb.append(')');
			}
		}
		if (sb.length() > 0) {
			sql.WHERE(sb.toString());
		}
	}
}