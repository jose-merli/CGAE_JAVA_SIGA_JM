package org.itcgae.siga.db.mappers;

import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;
import org.itcgae.siga.db.entities.ScsPermutaguardias;
import org.itcgae.siga.db.entities.ScsPermutaguardiasExample.Criteria;
import org.itcgae.siga.db.entities.ScsPermutaguardiasExample.Criterion;
import org.itcgae.siga.db.entities.ScsPermutaguardiasExample;

public class ScsPermutaguardiasSqlProvider {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.SCS_PERMUTAGUARDIAS
     *
     * @mbg.generated Fri Sep 24 12:37:51 CEST 2021
     */
    public String countByExample(ScsPermutaguardiasExample example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("SCS_PERMUTAGUARDIAS");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.SCS_PERMUTAGUARDIAS
     *
     * @mbg.generated Fri Sep 24 12:37:51 CEST 2021
     */
    public String deleteByExample(ScsPermutaguardiasExample example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("SCS_PERMUTAGUARDIAS");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.SCS_PERMUTAGUARDIAS
     *
     * @mbg.generated Fri Sep 24 12:37:51 CEST 2021
     */
    public String insertSelective(ScsPermutaguardias record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("SCS_PERMUTAGUARDIAS");
        
        if (record.getIdinstitucion() != null) {
            sql.VALUES("IDINSTITUCION", "#{idinstitucion,jdbcType=DECIMAL}");
        }
        
        if (record.getNumero() != null) {
            sql.VALUES("NUMERO", "#{numero,jdbcType=DECIMAL}");
        }
        
        if (record.getFechasolicitud() != null) {
            sql.VALUES("FECHASOLICITUD", "#{fechasolicitud,jdbcType=TIMESTAMP}");
        }
        
        if (record.getAnulada() != null) {
            sql.VALUES("ANULADA", "#{anulada,jdbcType=DECIMAL}");
        }
        
        if (record.getFechamodificacion() != null) {
            sql.VALUES("FECHAMODIFICACION", "#{fechamodificacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUsumodificacion() != null) {
            sql.VALUES("USUMODIFICACION", "#{usumodificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getIdpersonaSolicitante() != null) {
            sql.VALUES("IDPERSONA_SOLICITANTE", "#{idpersonaSolicitante,jdbcType=DECIMAL}");
        }
        
        if (record.getIdturnoSolicitante() != null) {
            sql.VALUES("IDTURNO_SOLICITANTE", "#{idturnoSolicitante,jdbcType=DECIMAL}");
        }
        
        if (record.getIdcalendarioguardiasSolicitan() != null) {
            sql.VALUES("IDCALENDARIOGUARDIAS_SOLICITAN", "#{idcalendarioguardiasSolicitan,jdbcType=DECIMAL}");
        }
        
        if (record.getIdguardiaSolicitante() != null) {
            sql.VALUES("IDGUARDIA_SOLICITANTE", "#{idguardiaSolicitante,jdbcType=DECIMAL}");
        }
        
        if (record.getIdpersonaConfirmador() != null) {
            sql.VALUES("IDPERSONA_CONFIRMADOR", "#{idpersonaConfirmador,jdbcType=DECIMAL}");
        }
        
        if (record.getIdturnoConfirmador() != null) {
            sql.VALUES("IDTURNO_CONFIRMADOR", "#{idturnoConfirmador,jdbcType=DECIMAL}");
        }
        
        if (record.getIdcalendarioguardiasConfirmad() != null) {
            sql.VALUES("IDCALENDARIOGUARDIAS_CONFIRMAD", "#{idcalendarioguardiasConfirmad,jdbcType=DECIMAL}");
        }
        
        if (record.getIdguardiaConfirmador() != null) {
            sql.VALUES("IDGUARDIA_CONFIRMADOR", "#{idguardiaConfirmador,jdbcType=DECIMAL}");
        }
        
        if (record.getFechainicioSolicitante() != null) {
            sql.VALUES("FECHAINICIO_SOLICITANTE", "#{fechainicioSolicitante,jdbcType=TIMESTAMP}");
        }
        
        if (record.getFechainicioConfirmador() != null) {
            sql.VALUES("FECHAINICIO_CONFIRMADOR", "#{fechainicioConfirmador,jdbcType=TIMESTAMP}");
        }
        
        if (record.getMotivossolicitante() != null) {
            sql.VALUES("MOTIVOSSOLICITANTE", "#{motivossolicitante,jdbcType=VARCHAR}");
        }
        
        if (record.getMotivosconfirmador() != null) {
            sql.VALUES("MOTIVOSCONFIRMADOR", "#{motivosconfirmador,jdbcType=VARCHAR}");
        }
        
        if (record.getFechaconfirmacion() != null) {
            sql.VALUES("FECHACONFIRMACION", "#{fechaconfirmacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIdPerCabSolicitante() != null) {
            sql.VALUES("ID_PER_CAB_SOLICITANTE", "#{idPerCabSolicitante,jdbcType=DECIMAL}");
        }
        
        if (record.getIdPerCabConfirmador() != null) {
            sql.VALUES("ID_PER_CAB_CONFIRMADOR", "#{idPerCabConfirmador,jdbcType=DECIMAL}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.SCS_PERMUTAGUARDIAS
     *
     * @mbg.generated Fri Sep 24 12:37:51 CEST 2021
     */
    public String selectByExample(ScsPermutaguardiasExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("IDINSTITUCION");
        } else {
            sql.SELECT("IDINSTITUCION");
        }
        sql.SELECT("NUMERO");
        sql.SELECT("FECHASOLICITUD");
        sql.SELECT("ANULADA");
        sql.SELECT("FECHAMODIFICACION");
        sql.SELECT("USUMODIFICACION");
        sql.SELECT("IDPERSONA_SOLICITANTE");
        sql.SELECT("IDTURNO_SOLICITANTE");
        sql.SELECT("IDCALENDARIOGUARDIAS_SOLICITAN");
        sql.SELECT("IDGUARDIA_SOLICITANTE");
        sql.SELECT("IDPERSONA_CONFIRMADOR");
        sql.SELECT("IDTURNO_CONFIRMADOR");
        sql.SELECT("IDCALENDARIOGUARDIAS_CONFIRMAD");
        sql.SELECT("IDGUARDIA_CONFIRMADOR");
        sql.SELECT("FECHAINICIO_SOLICITANTE");
        sql.SELECT("FECHAINICIO_CONFIRMADOR");
        sql.SELECT("MOTIVOSSOLICITANTE");
        sql.SELECT("MOTIVOSCONFIRMADOR");
        sql.SELECT("FECHACONFIRMACION");
        sql.SELECT("ID_PER_CAB_SOLICITANTE");
        sql.SELECT("ID_PER_CAB_CONFIRMADOR");
        sql.FROM("SCS_PERMUTAGUARDIAS");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.SCS_PERMUTAGUARDIAS
     *
     * @mbg.generated Fri Sep 24 12:37:51 CEST 2021
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        ScsPermutaguardias record = (ScsPermutaguardias) parameter.get("record");
        ScsPermutaguardiasExample example = (ScsPermutaguardiasExample) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("SCS_PERMUTAGUARDIAS");
        
        if (record.getIdinstitucion() != null) {
            sql.SET("IDINSTITUCION = #{record.idinstitucion,jdbcType=DECIMAL}");
        }
        
        if (record.getNumero() != null) {
            sql.SET("NUMERO = #{record.numero,jdbcType=DECIMAL}");
        }
        
        if (record.getFechasolicitud() != null) {
            sql.SET("FECHASOLICITUD = #{record.fechasolicitud,jdbcType=TIMESTAMP}");
        }
        
        if (record.getAnulada() != null) {
            sql.SET("ANULADA = #{record.anulada,jdbcType=DECIMAL}");
        }
        
        if (record.getFechamodificacion() != null) {
            sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUsumodificacion() != null) {
            sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getIdpersonaSolicitante() != null) {
            sql.SET("IDPERSONA_SOLICITANTE = #{record.idpersonaSolicitante,jdbcType=DECIMAL}");
        }
        
        if (record.getIdturnoSolicitante() != null) {
            sql.SET("IDTURNO_SOLICITANTE = #{record.idturnoSolicitante,jdbcType=DECIMAL}");
        }
        
        if (record.getIdcalendarioguardiasSolicitan() != null) {
            sql.SET("IDCALENDARIOGUARDIAS_SOLICITAN = #{record.idcalendarioguardiasSolicitan,jdbcType=DECIMAL}");
        }
        
        if (record.getIdguardiaSolicitante() != null) {
            sql.SET("IDGUARDIA_SOLICITANTE = #{record.idguardiaSolicitante,jdbcType=DECIMAL}");
        }
        
        if (record.getIdpersonaConfirmador() != null) {
            sql.SET("IDPERSONA_CONFIRMADOR = #{record.idpersonaConfirmador,jdbcType=DECIMAL}");
        }
        
        if (record.getIdturnoConfirmador() != null) {
            sql.SET("IDTURNO_CONFIRMADOR = #{record.idturnoConfirmador,jdbcType=DECIMAL}");
        }
        
        if (record.getIdcalendarioguardiasConfirmad() != null) {
            sql.SET("IDCALENDARIOGUARDIAS_CONFIRMAD = #{record.idcalendarioguardiasConfirmad,jdbcType=DECIMAL}");
        }
        
        if (record.getIdguardiaConfirmador() != null) {
            sql.SET("IDGUARDIA_CONFIRMADOR = #{record.idguardiaConfirmador,jdbcType=DECIMAL}");
        }
        
        if (record.getFechainicioSolicitante() != null) {
            sql.SET("FECHAINICIO_SOLICITANTE = #{record.fechainicioSolicitante,jdbcType=TIMESTAMP}");
        }
        
        if (record.getFechainicioConfirmador() != null) {
            sql.SET("FECHAINICIO_CONFIRMADOR = #{record.fechainicioConfirmador,jdbcType=TIMESTAMP}");
        }
        
        if (record.getMotivossolicitante() != null) {
            sql.SET("MOTIVOSSOLICITANTE = #{record.motivossolicitante,jdbcType=VARCHAR}");
        }
        
        if (record.getMotivosconfirmador() != null) {
            sql.SET("MOTIVOSCONFIRMADOR = #{record.motivosconfirmador,jdbcType=VARCHAR}");
        }
        
        if (record.getFechaconfirmacion() != null) {
            sql.SET("FECHACONFIRMACION = #{record.fechaconfirmacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIdPerCabSolicitante() != null) {
            sql.SET("ID_PER_CAB_SOLICITANTE = #{record.idPerCabSolicitante,jdbcType=DECIMAL}");
        }
        
        if (record.getIdPerCabConfirmador() != null) {
            sql.SET("ID_PER_CAB_CONFIRMADOR = #{record.idPerCabConfirmador,jdbcType=DECIMAL}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.SCS_PERMUTAGUARDIAS
     *
     * @mbg.generated Fri Sep 24 12:37:51 CEST 2021
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("SCS_PERMUTAGUARDIAS");
        
        sql.SET("IDINSTITUCION = #{record.idinstitucion,jdbcType=DECIMAL}");
        sql.SET("NUMERO = #{record.numero,jdbcType=DECIMAL}");
        sql.SET("FECHASOLICITUD = #{record.fechasolicitud,jdbcType=TIMESTAMP}");
        sql.SET("ANULADA = #{record.anulada,jdbcType=DECIMAL}");
        sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=TIMESTAMP}");
        sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
        sql.SET("IDPERSONA_SOLICITANTE = #{record.idpersonaSolicitante,jdbcType=DECIMAL}");
        sql.SET("IDTURNO_SOLICITANTE = #{record.idturnoSolicitante,jdbcType=DECIMAL}");
        sql.SET("IDCALENDARIOGUARDIAS_SOLICITAN = #{record.idcalendarioguardiasSolicitan,jdbcType=DECIMAL}");
        sql.SET("IDGUARDIA_SOLICITANTE = #{record.idguardiaSolicitante,jdbcType=DECIMAL}");
        sql.SET("IDPERSONA_CONFIRMADOR = #{record.idpersonaConfirmador,jdbcType=DECIMAL}");
        sql.SET("IDTURNO_CONFIRMADOR = #{record.idturnoConfirmador,jdbcType=DECIMAL}");
        sql.SET("IDCALENDARIOGUARDIAS_CONFIRMAD = #{record.idcalendarioguardiasConfirmad,jdbcType=DECIMAL}");
        sql.SET("IDGUARDIA_CONFIRMADOR = #{record.idguardiaConfirmador,jdbcType=DECIMAL}");
        sql.SET("FECHAINICIO_SOLICITANTE = #{record.fechainicioSolicitante,jdbcType=TIMESTAMP}");
        sql.SET("FECHAINICIO_CONFIRMADOR = #{record.fechainicioConfirmador,jdbcType=TIMESTAMP}");
        sql.SET("MOTIVOSSOLICITANTE = #{record.motivossolicitante,jdbcType=VARCHAR}");
        sql.SET("MOTIVOSCONFIRMADOR = #{record.motivosconfirmador,jdbcType=VARCHAR}");
        sql.SET("FECHACONFIRMACION = #{record.fechaconfirmacion,jdbcType=TIMESTAMP}");
        sql.SET("ID_PER_CAB_SOLICITANTE = #{record.idPerCabSolicitante,jdbcType=DECIMAL}");
        sql.SET("ID_PER_CAB_CONFIRMADOR = #{record.idPerCabConfirmador,jdbcType=DECIMAL}");
        
        ScsPermutaguardiasExample example = (ScsPermutaguardiasExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.SCS_PERMUTAGUARDIAS
     *
     * @mbg.generated Fri Sep 24 12:37:51 CEST 2021
     */
    public String updateByPrimaryKeySelective(ScsPermutaguardias record) {
        SQL sql = new SQL();
        sql.UPDATE("SCS_PERMUTAGUARDIAS");
        
        if (record.getFechasolicitud() != null) {
            sql.SET("FECHASOLICITUD = #{fechasolicitud,jdbcType=TIMESTAMP}");
        }
        
        if (record.getAnulada() != null) {
            sql.SET("ANULADA = #{anulada,jdbcType=DECIMAL}");
        }
        
        if (record.getFechamodificacion() != null) {
            sql.SET("FECHAMODIFICACION = #{fechamodificacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUsumodificacion() != null) {
            sql.SET("USUMODIFICACION = #{usumodificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getIdpersonaSolicitante() != null) {
            sql.SET("IDPERSONA_SOLICITANTE = #{idpersonaSolicitante,jdbcType=DECIMAL}");
        }
        
        if (record.getIdturnoSolicitante() != null) {
            sql.SET("IDTURNO_SOLICITANTE = #{idturnoSolicitante,jdbcType=DECIMAL}");
        }
        
        if (record.getIdcalendarioguardiasSolicitan() != null) {
            sql.SET("IDCALENDARIOGUARDIAS_SOLICITAN = #{idcalendarioguardiasSolicitan,jdbcType=DECIMAL}");
        }
        
        if (record.getIdguardiaSolicitante() != null) {
            sql.SET("IDGUARDIA_SOLICITANTE = #{idguardiaSolicitante,jdbcType=DECIMAL}");
        }
        
        if (record.getIdpersonaConfirmador() != null) {
            sql.SET("IDPERSONA_CONFIRMADOR = #{idpersonaConfirmador,jdbcType=DECIMAL}");
        }
        
        if (record.getIdturnoConfirmador() != null) {
            sql.SET("IDTURNO_CONFIRMADOR = #{idturnoConfirmador,jdbcType=DECIMAL}");
        }
        
        if (record.getIdcalendarioguardiasConfirmad() != null) {
            sql.SET("IDCALENDARIOGUARDIAS_CONFIRMAD = #{idcalendarioguardiasConfirmad,jdbcType=DECIMAL}");
        }
        
        if (record.getIdguardiaConfirmador() != null) {
            sql.SET("IDGUARDIA_CONFIRMADOR = #{idguardiaConfirmador,jdbcType=DECIMAL}");
        }
        
        if (record.getFechainicioSolicitante() != null) {
            sql.SET("FECHAINICIO_SOLICITANTE = #{fechainicioSolicitante,jdbcType=TIMESTAMP}");
        }
        
        if (record.getFechainicioConfirmador() != null) {
            sql.SET("FECHAINICIO_CONFIRMADOR = #{fechainicioConfirmador,jdbcType=TIMESTAMP}");
        }
        
        if (record.getMotivossolicitante() != null) {
            sql.SET("MOTIVOSSOLICITANTE = #{motivossolicitante,jdbcType=VARCHAR}");
        }
        
        if (record.getMotivosconfirmador() != null) {
            sql.SET("MOTIVOSCONFIRMADOR = #{motivosconfirmador,jdbcType=VARCHAR}");
        }
        
        if (record.getFechaconfirmacion() != null) {
            sql.SET("FECHACONFIRMACION = #{fechaconfirmacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIdPerCabSolicitante() != null) {
            sql.SET("ID_PER_CAB_SOLICITANTE = #{idPerCabSolicitante,jdbcType=DECIMAL}");
        }
        
        if (record.getIdPerCabConfirmador() != null) {
            sql.SET("ID_PER_CAB_CONFIRMADOR = #{idPerCabConfirmador,jdbcType=DECIMAL}");
        }
        
        sql.WHERE("IDINSTITUCION = #{idinstitucion,jdbcType=DECIMAL}");
        sql.WHERE("NUMERO = #{numero,jdbcType=DECIMAL}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.SCS_PERMUTAGUARDIAS
     *
     * @mbg.generated Fri Sep 24 12:37:51 CEST 2021
     */
    protected void applyWhere(SQL sql, ScsPermutaguardiasExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}