package org.itcgae.siga.db.entities;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class AgeFestivosExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USCGAE.AGE_FESTIVOS
     *
     * @mbg.generated Fri Nov 23 11:15:40 CET 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USCGAE.AGE_FESTIVOS
     *
     * @mbg.generated Fri Nov 23 11:15:40 CET 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USCGAE.AGE_FESTIVOS
     *
     * @mbg.generated Fri Nov 23 11:15:40 CET 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.AGE_FESTIVOS
     *
     * @mbg.generated Fri Nov 23 11:15:40 CET 2018
     */
    public AgeFestivosExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.AGE_FESTIVOS
     *
     * @mbg.generated Fri Nov 23 11:15:40 CET 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.AGE_FESTIVOS
     *
     * @mbg.generated Fri Nov 23 11:15:40 CET 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.AGE_FESTIVOS
     *
     * @mbg.generated Fri Nov 23 11:15:40 CET 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.AGE_FESTIVOS
     *
     * @mbg.generated Fri Nov 23 11:15:40 CET 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.AGE_FESTIVOS
     *
     * @mbg.generated Fri Nov 23 11:15:40 CET 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.AGE_FESTIVOS
     *
     * @mbg.generated Fri Nov 23 11:15:40 CET 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.AGE_FESTIVOS
     *
     * @mbg.generated Fri Nov 23 11:15:40 CET 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.AGE_FESTIVOS
     *
     * @mbg.generated Fri Nov 23 11:15:40 CET 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.AGE_FESTIVOS
     *
     * @mbg.generated Fri Nov 23 11:15:40 CET 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.AGE_FESTIVOS
     *
     * @mbg.generated Fri Nov 23 11:15:40 CET 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE.AGE_FESTIVOS
     *
     * @mbg.generated Fri Nov 23 11:15:40 CET 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdfestivoIsNull() {
            addCriterion("IDFESTIVO is null");
            return (Criteria) this;
        }

        public Criteria andIdfestivoIsNotNull() {
            addCriterion("IDFESTIVO is not null");
            return (Criteria) this;
        }

        public Criteria andIdfestivoEqualTo(Long value) {
            addCriterion("IDFESTIVO =", value, "idfestivo");
            return (Criteria) this;
        }

        public Criteria andIdfestivoNotEqualTo(Long value) {
            addCriterion("IDFESTIVO <>", value, "idfestivo");
            return (Criteria) this;
        }

        public Criteria andIdfestivoGreaterThan(Long value) {
            addCriterion("IDFESTIVO >", value, "idfestivo");
            return (Criteria) this;
        }

        public Criteria andIdfestivoGreaterThanOrEqualTo(Long value) {
            addCriterion("IDFESTIVO >=", value, "idfestivo");
            return (Criteria) this;
        }

        public Criteria andIdfestivoLessThan(Long value) {
            addCriterion("IDFESTIVO <", value, "idfestivo");
            return (Criteria) this;
        }

        public Criteria andIdfestivoLessThanOrEqualTo(Long value) {
            addCriterion("IDFESTIVO <=", value, "idfestivo");
            return (Criteria) this;
        }

        public Criteria andIdfestivoIn(List<Long> values) {
            addCriterion("IDFESTIVO in", values, "idfestivo");
            return (Criteria) this;
        }

        public Criteria andIdfestivoNotIn(List<Long> values) {
            addCriterion("IDFESTIVO not in", values, "idfestivo");
            return (Criteria) this;
        }

        public Criteria andIdfestivoBetween(Long value1, Long value2) {
            addCriterion("IDFESTIVO between", value1, value2, "idfestivo");
            return (Criteria) this;
        }

        public Criteria andIdfestivoNotBetween(Long value1, Long value2) {
            addCriterion("IDFESTIVO not between", value1, value2, "idfestivo");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionIsNull() {
            addCriterion("IDINSTITUCION is null");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionIsNotNull() {
            addCriterion("IDINSTITUCION is not null");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionEqualTo(Short value) {
            addCriterion("IDINSTITUCION =", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionNotEqualTo(Short value) {
            addCriterion("IDINSTITUCION <>", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionGreaterThan(Short value) {
            addCriterion("IDINSTITUCION >", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionGreaterThanOrEqualTo(Short value) {
            addCriterion("IDINSTITUCION >=", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionLessThan(Short value) {
            addCriterion("IDINSTITUCION <", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionLessThanOrEqualTo(Short value) {
            addCriterion("IDINSTITUCION <=", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionIn(List<Short> values) {
            addCriterion("IDINSTITUCION in", values, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionNotIn(List<Short> values) {
            addCriterion("IDINSTITUCION not in", values, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionBetween(Short value1, Short value2) {
            addCriterion("IDINSTITUCION between", value1, value2, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionNotBetween(Short value1, Short value2) {
            addCriterion("IDINSTITUCION not between", value1, value2, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andFechabajaIsNull() {
            addCriterion("FECHABAJA is null");
            return (Criteria) this;
        }

        public Criteria andFechabajaIsNotNull() {
            addCriterion("FECHABAJA is not null");
            return (Criteria) this;
        }

        public Criteria andFechabajaEqualTo(Date value) {
            addCriterion("FECHABAJA =", value, "fechabaja");
            return (Criteria) this;
        }

        public Criteria andFechabajaNotEqualTo(Date value) {
            addCriterion("FECHABAJA <>", value, "fechabaja");
            return (Criteria) this;
        }

        public Criteria andFechabajaGreaterThan(Date value) {
            addCriterion("FECHABAJA >", value, "fechabaja");
            return (Criteria) this;
        }

        public Criteria andFechabajaGreaterThanOrEqualTo(Date value) {
            addCriterion("FECHABAJA >=", value, "fechabaja");
            return (Criteria) this;
        }

        public Criteria andFechabajaLessThan(Date value) {
            addCriterion("FECHABAJA <", value, "fechabaja");
            return (Criteria) this;
        }

        public Criteria andFechabajaLessThanOrEqualTo(Date value) {
            addCriterion("FECHABAJA <=", value, "fechabaja");
            return (Criteria) this;
        }

        public Criteria andFechabajaIn(List<Date> values) {
            addCriterion("FECHABAJA in", values, "fechabaja");
            return (Criteria) this;
        }

        public Criteria andFechabajaNotIn(List<Date> values) {
            addCriterion("FECHABAJA not in", values, "fechabaja");
            return (Criteria) this;
        }

        public Criteria andFechabajaBetween(Date value1, Date value2) {
            addCriterion("FECHABAJA between", value1, value2, "fechabaja");
            return (Criteria) this;
        }

        public Criteria andFechabajaNotBetween(Date value1, Date value2) {
            addCriterion("FECHABAJA not between", value1, value2, "fechabaja");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionIsNull() {
            addCriterion("FECHAMODIFICACION is null");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionIsNotNull() {
            addCriterion("FECHAMODIFICACION is not null");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION =", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionNotEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION <>", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionGreaterThan(Date value) {
            addCriterion("FECHAMODIFICACION >", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionGreaterThanOrEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION >=", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionLessThan(Date value) {
            addCriterion("FECHAMODIFICACION <", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionLessThanOrEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION <=", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionIn(List<Date> values) {
            addCriterion("FECHAMODIFICACION in", values, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionNotIn(List<Date> values) {
            addCriterion("FECHAMODIFICACION not in", values, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionBetween(Date value1, Date value2) {
            addCriterion("FECHAMODIFICACION between", value1, value2, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionNotBetween(Date value1, Date value2) {
            addCriterion("FECHAMODIFICACION not between", value1, value2, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andUsuariomodificacionIsNull() {
            addCriterion("USUARIOMODIFICACION is null");
            return (Criteria) this;
        }

        public Criteria andUsuariomodificacionIsNotNull() {
            addCriterion("USUARIOMODIFICACION is not null");
            return (Criteria) this;
        }

        public Criteria andUsuariomodificacionEqualTo(Long value) {
            addCriterion("USUARIOMODIFICACION =", value, "usuariomodificacion");
            return (Criteria) this;
        }

        public Criteria andUsuariomodificacionNotEqualTo(Long value) {
            addCriterion("USUARIOMODIFICACION <>", value, "usuariomodificacion");
            return (Criteria) this;
        }

        public Criteria andUsuariomodificacionGreaterThan(Long value) {
            addCriterion("USUARIOMODIFICACION >", value, "usuariomodificacion");
            return (Criteria) this;
        }

        public Criteria andUsuariomodificacionGreaterThanOrEqualTo(Long value) {
            addCriterion("USUARIOMODIFICACION >=", value, "usuariomodificacion");
            return (Criteria) this;
        }

        public Criteria andUsuariomodificacionLessThan(Long value) {
            addCriterion("USUARIOMODIFICACION <", value, "usuariomodificacion");
            return (Criteria) this;
        }

        public Criteria andUsuariomodificacionLessThanOrEqualTo(Long value) {
            addCriterion("USUARIOMODIFICACION <=", value, "usuariomodificacion");
            return (Criteria) this;
        }

        public Criteria andUsuariomodificacionIn(List<Long> values) {
            addCriterion("USUARIOMODIFICACION in", values, "usuariomodificacion");
            return (Criteria) this;
        }

        public Criteria andUsuariomodificacionNotIn(List<Long> values) {
            addCriterion("USUARIOMODIFICACION not in", values, "usuariomodificacion");
            return (Criteria) this;
        }

        public Criteria andUsuariomodificacionBetween(Long value1, Long value2) {
            addCriterion("USUARIOMODIFICACION between", value1, value2, "usuariomodificacion");
            return (Criteria) this;
        }

        public Criteria andUsuariomodificacionNotBetween(Long value1, Long value2) {
            addCriterion("USUARIOMODIFICACION not between", value1, value2, "usuariomodificacion");
            return (Criteria) this;
        }

        public Criteria andFechaIsNull() {
            addCriterion("FECHA is null");
            return (Criteria) this;
        }

        public Criteria andFechaIsNotNull() {
            addCriterion("FECHA is not null");
            return (Criteria) this;
        }

        public Criteria andFechaEqualTo(Date value) {
            addCriterion("FECHA =", value, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaNotEqualTo(Date value) {
            addCriterion("FECHA <>", value, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaGreaterThan(Date value) {
            addCriterion("FECHA >", value, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaGreaterThanOrEqualTo(Date value) {
            addCriterion("FECHA >=", value, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaLessThan(Date value) {
            addCriterion("FECHA <", value, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaLessThanOrEqualTo(Date value) {
            addCriterion("FECHA <=", value, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaIn(List<Date> values) {
            addCriterion("FECHA in", values, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaNotIn(List<Date> values) {
            addCriterion("FECHA not in", values, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaBetween(Date value1, Date value2) {
            addCriterion("FECHA between", value1, value2, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaNotBetween(Date value1, Date value2) {
            addCriterion("FECHA not between", value1, value2, "fecha");
            return (Criteria) this;
        }

        public Criteria andDenominacionIsNull() {
            addCriterion("DENOMINACION is null");
            return (Criteria) this;
        }

        public Criteria andDenominacionIsNotNull() {
            addCriterion("DENOMINACION is not null");
            return (Criteria) this;
        }

        public Criteria andDenominacionEqualTo(String value) {
            addCriterion("DENOMINACION =", value, "denominacion");
            return (Criteria) this;
        }

        public Criteria andDenominacionNotEqualTo(String value) {
            addCriterion("DENOMINACION <>", value, "denominacion");
            return (Criteria) this;
        }

        public Criteria andDenominacionGreaterThan(String value) {
            addCriterion("DENOMINACION >", value, "denominacion");
            return (Criteria) this;
        }

        public Criteria andDenominacionGreaterThanOrEqualTo(String value) {
            addCriterion("DENOMINACION >=", value, "denominacion");
            return (Criteria) this;
        }

        public Criteria andDenominacionLessThan(String value) {
            addCriterion("DENOMINACION <", value, "denominacion");
            return (Criteria) this;
        }

        public Criteria andDenominacionLessThanOrEqualTo(String value) {
            addCriterion("DENOMINACION <=", value, "denominacion");
            return (Criteria) this;
        }

        public Criteria andDenominacionLike(String value) {
            addCriterion("DENOMINACION like", value, "denominacion");
            return (Criteria) this;
        }

        public Criteria andDenominacionNotLike(String value) {
            addCriterion("DENOMINACION not like", value, "denominacion");
            return (Criteria) this;
        }

        public Criteria andDenominacionIn(List<String> values) {
            addCriterion("DENOMINACION in", values, "denominacion");
            return (Criteria) this;
        }

        public Criteria andDenominacionNotIn(List<String> values) {
            addCriterion("DENOMINACION not in", values, "denominacion");
            return (Criteria) this;
        }

        public Criteria andDenominacionBetween(String value1, String value2) {
            addCriterion("DENOMINACION between", value1, value2, "denominacion");
            return (Criteria) this;
        }

        public Criteria andDenominacionNotBetween(String value1, String value2) {
            addCriterion("DENOMINACION not between", value1, value2, "denominacion");
            return (Criteria) this;
        }

        public Criteria andTipofestivoIsNull() {
            addCriterion("TIPOFESTIVO is null");
            return (Criteria) this;
        }

        public Criteria andTipofestivoIsNotNull() {
            addCriterion("TIPOFESTIVO is not null");
            return (Criteria) this;
        }

        public Criteria andTipofestivoEqualTo(String value) {
            addCriterion("TIPOFESTIVO =", value, "tipofestivo");
            return (Criteria) this;
        }

        public Criteria andTipofestivoNotEqualTo(String value) {
            addCriterion("TIPOFESTIVO <>", value, "tipofestivo");
            return (Criteria) this;
        }

        public Criteria andTipofestivoGreaterThan(String value) {
            addCriterion("TIPOFESTIVO >", value, "tipofestivo");
            return (Criteria) this;
        }

        public Criteria andTipofestivoGreaterThanOrEqualTo(String value) {
            addCriterion("TIPOFESTIVO >=", value, "tipofestivo");
            return (Criteria) this;
        }

        public Criteria andTipofestivoLessThan(String value) {
            addCriterion("TIPOFESTIVO <", value, "tipofestivo");
            return (Criteria) this;
        }

        public Criteria andTipofestivoLessThanOrEqualTo(String value) {
            addCriterion("TIPOFESTIVO <=", value, "tipofestivo");
            return (Criteria) this;
        }

        public Criteria andTipofestivoLike(String value) {
            addCriterion("TIPOFESTIVO like", value, "tipofestivo");
            return (Criteria) this;
        }

        public Criteria andTipofestivoNotLike(String value) {
            addCriterion("TIPOFESTIVO not like", value, "tipofestivo");
            return (Criteria) this;
        }

        public Criteria andTipofestivoIn(List<String> values) {
            addCriterion("TIPOFESTIVO in", values, "tipofestivo");
            return (Criteria) this;
        }

        public Criteria andTipofestivoNotIn(List<String> values) {
            addCriterion("TIPOFESTIVO not in", values, "tipofestivo");
            return (Criteria) this;
        }

        public Criteria andTipofestivoBetween(String value1, String value2) {
            addCriterion("TIPOFESTIVO between", value1, value2, "tipofestivo");
            return (Criteria) this;
        }

        public Criteria andTipofestivoNotBetween(String value1, String value2) {
            addCriterion("TIPOFESTIVO not between", value1, value2, "tipofestivo");
            return (Criteria) this;
        }

        public Criteria andIdpartidoIsNull() {
            addCriterion("IDPARTIDO is null");
            return (Criteria) this;
        }

        public Criteria andIdpartidoIsNotNull() {
            addCriterion("IDPARTIDO is not null");
            return (Criteria) this;
        }

        public Criteria andIdpartidoEqualTo(Long value) {
            addCriterion("IDPARTIDO =", value, "idpartido");
            return (Criteria) this;
        }

        public Criteria andIdpartidoNotEqualTo(Long value) {
            addCriterion("IDPARTIDO <>", value, "idpartido");
            return (Criteria) this;
        }

        public Criteria andIdpartidoGreaterThan(Long value) {
            addCriterion("IDPARTIDO >", value, "idpartido");
            return (Criteria) this;
        }

        public Criteria andIdpartidoGreaterThanOrEqualTo(Long value) {
            addCriterion("IDPARTIDO >=", value, "idpartido");
            return (Criteria) this;
        }

        public Criteria andIdpartidoLessThan(Long value) {
            addCriterion("IDPARTIDO <", value, "idpartido");
            return (Criteria) this;
        }

        public Criteria andIdpartidoLessThanOrEqualTo(Long value) {
            addCriterion("IDPARTIDO <=", value, "idpartido");
            return (Criteria) this;
        }

        public Criteria andIdpartidoIn(List<Long> values) {
            addCriterion("IDPARTIDO in", values, "idpartido");
            return (Criteria) this;
        }

        public Criteria andIdpartidoNotIn(List<Long> values) {
            addCriterion("IDPARTIDO not in", values, "idpartido");
            return (Criteria) this;
        }

        public Criteria andIdpartidoBetween(Long value1, Long value2) {
            addCriterion("IDPARTIDO between", value1, value2, "idpartido");
            return (Criteria) this;
        }

        public Criteria andIdpartidoNotBetween(Long value1, Long value2) {
            addCriterion("IDPARTIDO not between", value1, value2, "idpartido");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE.AGE_FESTIVOS
     *
     * @mbg.generated do_not_delete_during_merge Fri Nov 23 11:15:40 CET 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE.AGE_FESTIVOS
     *
     * @mbg.generated Fri Nov 23 11:15:40 CET 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}