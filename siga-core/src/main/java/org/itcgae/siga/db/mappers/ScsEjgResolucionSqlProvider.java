package org.itcgae.siga.db.mappers;

import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;
import org.itcgae.siga.db.entities.ScsEjgResolucionExample.Criteria;
import org.itcgae.siga.db.entities.ScsEjgResolucionExample.Criterion;
import org.itcgae.siga.db.entities.ScsEjgResolucionExample;
import org.itcgae.siga.db.entities.ScsEjgResolucionWithBLOBs;

public class ScsEjgResolucionSqlProvider {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.SCS_EJG_RESOLUCION
     *
     * @mbg.generated Thu Jul 15 11:00:50 CEST 2021
     */
    public String countByExample(ScsEjgResolucionExample example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("SCS_EJG_RESOLUCION");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.SCS_EJG_RESOLUCION
     *
     * @mbg.generated Thu Jul 15 11:00:50 CEST 2021
     */
    public String deleteByExample(ScsEjgResolucionExample example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("SCS_EJG_RESOLUCION");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.SCS_EJG_RESOLUCION
     *
     * @mbg.generated Thu Jul 15 11:00:50 CEST 2021
     */
    public String insertSelective(ScsEjgResolucionWithBLOBs record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("SCS_EJG_RESOLUCION");
        
        if (record.getAnio() != null) {
            sql.VALUES("ANIO", "#{anio,jdbcType=DECIMAL}");
        }
        
        if (record.getNumero() != null) {
            sql.VALUES("NUMERO", "#{numero,jdbcType=DECIMAL}");
        }
        
        if (record.getIdinstitucion() != null) {
            sql.VALUES("IDINSTITUCION", "#{idinstitucion,jdbcType=DECIMAL}");
        }
        
        if (record.getIdtipoejg() != null) {
            sql.VALUES("IDTIPOEJG", "#{idtipoejg,jdbcType=DECIMAL}");
        }
        
        if (record.getFechamodificacion() != null) {
            sql.VALUES("FECHAMODIFICACION", "#{fechamodificacion,jdbcType=DATE}");
        }
        
        if (record.getUsumodificacion() != null) {
            sql.VALUES("USUMODIFICACION", "#{usumodificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getAniocajg() != null) {
            sql.VALUES("ANIOCAJG", "#{aniocajg,jdbcType=DECIMAL}");
        }
        
        if (record.getNumeroCajg() != null) {
            sql.VALUES("NUMERO_CAJG", "#{numeroCajg,jdbcType=VARCHAR}");
        }
        
        if (record.getIdorigencajg() != null) {
            sql.VALUES("IDORIGENCAJG", "#{idorigencajg,jdbcType=DECIMAL}");
        }
        
        if (record.getIdacta() != null) {
            sql.VALUES("IDACTA", "#{idacta,jdbcType=DECIMAL}");
        }
        
        if (record.getIdinstitucionacta() != null) {
            sql.VALUES("IDINSTITUCIONACTA", "#{idinstitucionacta,jdbcType=DECIMAL}");
        }
        
        if (record.getAnioacta() != null) {
            sql.VALUES("ANIOACTA", "#{anioacta,jdbcType=DECIMAL}");
        }
        
        if (record.getIdponente() != null) {
            sql.VALUES("IDPONENTE", "#{idponente,jdbcType=DECIMAL}");
        }
        
        if (record.getFechapresentacionponente() != null) {
            sql.VALUES("FECHAPRESENTACIONPONENTE", "#{fechapresentacionponente,jdbcType=DATE}");
        }
        
        if (record.getIdinstitucionponente() != null) {
            sql.VALUES("IDINSTITUCIONPONENTE", "#{idinstitucionponente,jdbcType=DECIMAL}");
        }
        
        if (record.getFecharesolucioncajg() != null) {
            sql.VALUES("FECHARESOLUCIONCAJG", "#{fecharesolucioncajg,jdbcType=DATE}");
        }
        
        if (record.getIdtiporatificacionejg() != null) {
            sql.VALUES("IDTIPORATIFICACIONEJG", "#{idtiporatificacionejg,jdbcType=DECIMAL}");
        }
        
        if (record.getIdfundamentojuridico() != null) {
            sql.VALUES("IDFUNDAMENTOJURIDICO", "#{idfundamentojuridico,jdbcType=DECIMAL}");
        }
        
        if (record.getFechanotificacion() != null) {
            sql.VALUES("FECHANOTIFICACION", "#{fechanotificacion,jdbcType=DATE}");
        }
        
        if (record.getRefauto() != null) {
            sql.VALUES("REFAUTO", "#{refauto,jdbcType=VARCHAR}");
        }
        
        if (record.getFecharatificacion() != null) {
            sql.VALUES("FECHARATIFICACION", "#{fecharatificacion,jdbcType=DATE}");
        }
        
        if (record.getRequierenotificarproc() != null) {
            sql.VALUES("REQUIERENOTIFICARPROC", "#{requierenotificarproc,jdbcType=VARCHAR}");
        }
        
        if (record.getTurnadoratificacion() != null) {
            sql.VALUES("TURNADORATIFICACION", "#{turnadoratificacion,jdbcType=VARCHAR}");
        }
        
        if (record.getDocresolucion() != null) {
            sql.VALUES("DOCRESOLUCION", "#{docresolucion,jdbcType=VARCHAR}");
        }
        
        if (record.getRatificaciondictamen() != null) {
            sql.VALUES("RATIFICACIONDICTAMEN", "#{ratificaciondictamen,jdbcType=CLOB}");
        }
        
        if (record.getNotascajg() != null) {
            sql.VALUES("NOTASCAJG", "#{notascajg,jdbcType=CLOB}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.SCS_EJG_RESOLUCION
     *
     * @mbg.generated Thu Jul 15 11:00:50 CEST 2021
     */
    public String selectByExampleWithBLOBs(ScsEjgResolucionExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("ANIO");
        } else {
            sql.SELECT("ANIO");
        }
        sql.SELECT("NUMERO");
        sql.SELECT("IDINSTITUCION");
        sql.SELECT("IDTIPOEJG");
        sql.SELECT("FECHAMODIFICACION");
        sql.SELECT("USUMODIFICACION");
        sql.SELECT("ANIOCAJG");
        sql.SELECT("NUMERO_CAJG");
        sql.SELECT("IDORIGENCAJG");
        sql.SELECT("IDACTA");
        sql.SELECT("IDINSTITUCIONACTA");
        sql.SELECT("ANIOACTA");
        sql.SELECT("IDPONENTE");
        sql.SELECT("FECHAPRESENTACIONPONENTE");
        sql.SELECT("IDINSTITUCIONPONENTE");
        sql.SELECT("FECHARESOLUCIONCAJG");
        sql.SELECT("IDTIPORATIFICACIONEJG");
        sql.SELECT("IDFUNDAMENTOJURIDICO");
        sql.SELECT("FECHANOTIFICACION");
        sql.SELECT("REFAUTO");
        sql.SELECT("FECHARATIFICACION");
        sql.SELECT("REQUIERENOTIFICARPROC");
        sql.SELECT("TURNADORATIFICACION");
        sql.SELECT("DOCRESOLUCION");
        sql.SELECT("RATIFICACIONDICTAMEN");
        sql.SELECT("NOTASCAJG");
        sql.FROM("SCS_EJG_RESOLUCION");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.SCS_EJG_RESOLUCION
     *
     * @mbg.generated Thu Jul 15 11:00:50 CEST 2021
     */
    public String selectByExample(ScsEjgResolucionExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("ANIO");
        } else {
            sql.SELECT("ANIO");
        }
        sql.SELECT("NUMERO");
        sql.SELECT("IDINSTITUCION");
        sql.SELECT("IDTIPOEJG");
        sql.SELECT("FECHAMODIFICACION");
        sql.SELECT("USUMODIFICACION");
        sql.SELECT("ANIOCAJG");
        sql.SELECT("NUMERO_CAJG");
        sql.SELECT("IDORIGENCAJG");
        sql.SELECT("IDACTA");
        sql.SELECT("IDINSTITUCIONACTA");
        sql.SELECT("ANIOACTA");
        sql.SELECT("IDPONENTE");
        sql.SELECT("FECHAPRESENTACIONPONENTE");
        sql.SELECT("IDINSTITUCIONPONENTE");
        sql.SELECT("FECHARESOLUCIONCAJG");
        sql.SELECT("IDTIPORATIFICACIONEJG");
        sql.SELECT("IDFUNDAMENTOJURIDICO");
        sql.SELECT("FECHANOTIFICACION");
        sql.SELECT("REFAUTO");
        sql.SELECT("FECHARATIFICACION");
        sql.SELECT("REQUIERENOTIFICARPROC");
        sql.SELECT("TURNADORATIFICACION");
        sql.SELECT("DOCRESOLUCION");
        sql.FROM("SCS_EJG_RESOLUCION");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.SCS_EJG_RESOLUCION
     *
     * @mbg.generated Thu Jul 15 11:00:50 CEST 2021
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        ScsEjgResolucionWithBLOBs record = (ScsEjgResolucionWithBLOBs) parameter.get("record");
        ScsEjgResolucionExample example = (ScsEjgResolucionExample) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("SCS_EJG_RESOLUCION");
        
        if (record.getAnio() != null) {
            sql.SET("ANIO = #{record.anio,jdbcType=DECIMAL}");
        }
        
        if (record.getNumero() != null) {
            sql.SET("NUMERO = #{record.numero,jdbcType=DECIMAL}");
        }
        
        if (record.getIdinstitucion() != null) {
            sql.SET("IDINSTITUCION = #{record.idinstitucion,jdbcType=DECIMAL}");
        }
        
        if (record.getIdtipoejg() != null) {
            sql.SET("IDTIPOEJG = #{record.idtipoejg,jdbcType=DECIMAL}");
        }
        
        if (record.getFechamodificacion() != null) {
            sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=DATE}");
        }
        
        if (record.getUsumodificacion() != null) {
            sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getAniocajg() != null) {
            sql.SET("ANIOCAJG = #{record.aniocajg,jdbcType=DECIMAL}");
        }
        
        if (record.getNumeroCajg() != null) {
            sql.SET("NUMERO_CAJG = #{record.numeroCajg,jdbcType=VARCHAR}");
        }
        
        if (record.getIdorigencajg() != null) {
            sql.SET("IDORIGENCAJG = #{record.idorigencajg,jdbcType=DECIMAL}");
        }
        
        if (record.getIdacta() != null) {
            sql.SET("IDACTA = #{record.idacta,jdbcType=DECIMAL}");
        }
        
        if (record.getIdinstitucionacta() != null) {
            sql.SET("IDINSTITUCIONACTA = #{record.idinstitucionacta,jdbcType=DECIMAL}");
        }
        
        if (record.getAnioacta() != null) {
            sql.SET("ANIOACTA = #{record.anioacta,jdbcType=DECIMAL}");
        }
        
        if (record.getIdponente() != null) {
            sql.SET("IDPONENTE = #{record.idponente,jdbcType=DECIMAL}");
        }
        
        if (record.getFechapresentacionponente() != null) {
            sql.SET("FECHAPRESENTACIONPONENTE = #{record.fechapresentacionponente,jdbcType=DATE}");
        }
        
        if (record.getIdinstitucionponente() != null) {
            sql.SET("IDINSTITUCIONPONENTE = #{record.idinstitucionponente,jdbcType=DECIMAL}");
        }
        
        if (record.getFecharesolucioncajg() != null) {
            sql.SET("FECHARESOLUCIONCAJG = #{record.fecharesolucioncajg,jdbcType=DATE}");
        }
        
        if (record.getIdtiporatificacionejg() != null) {
            sql.SET("IDTIPORATIFICACIONEJG = #{record.idtiporatificacionejg,jdbcType=DECIMAL}");
        }
        
        if (record.getIdfundamentojuridico() != null) {
            sql.SET("IDFUNDAMENTOJURIDICO = #{record.idfundamentojuridico,jdbcType=DECIMAL}");
        }
        
        if (record.getFechanotificacion() != null) {
            sql.SET("FECHANOTIFICACION = #{record.fechanotificacion,jdbcType=DATE}");
        }
        
        if (record.getRefauto() != null) {
            sql.SET("REFAUTO = #{record.refauto,jdbcType=VARCHAR}");
        }
        
        if (record.getFecharatificacion() != null) {
            sql.SET("FECHARATIFICACION = #{record.fecharatificacion,jdbcType=DATE}");
        }
        
        if (record.getRequierenotificarproc() != null) {
            sql.SET("REQUIERENOTIFICARPROC = #{record.requierenotificarproc,jdbcType=VARCHAR}");
        }
        
        if (record.getTurnadoratificacion() != null) {
            sql.SET("TURNADORATIFICACION = #{record.turnadoratificacion,jdbcType=VARCHAR}");
        }
        
        if (record.getDocresolucion() != null) {
            sql.SET("DOCRESOLUCION = #{record.docresolucion,jdbcType=VARCHAR}");
        }
        
        if (record.getRatificaciondictamen() != null) {
            sql.SET("RATIFICACIONDICTAMEN = #{record.ratificaciondictamen,jdbcType=CLOB}");
        }
        
        if (record.getNotascajg() != null) {
            sql.SET("NOTASCAJG = #{record.notascajg,jdbcType=CLOB}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.SCS_EJG_RESOLUCION
     *
     * @mbg.generated Thu Jul 15 11:00:50 CEST 2021
     */
    public String updateByExampleWithBLOBs(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("SCS_EJG_RESOLUCION");
        
        sql.SET("ANIO = #{record.anio,jdbcType=DECIMAL}");
        sql.SET("NUMERO = #{record.numero,jdbcType=DECIMAL}");
        sql.SET("IDINSTITUCION = #{record.idinstitucion,jdbcType=DECIMAL}");
        sql.SET("IDTIPOEJG = #{record.idtipoejg,jdbcType=DECIMAL}");
        sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=DATE}");
        sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
        sql.SET("ANIOCAJG = #{record.aniocajg,jdbcType=DECIMAL}");
        sql.SET("NUMERO_CAJG = #{record.numeroCajg,jdbcType=VARCHAR}");
        sql.SET("IDORIGENCAJG = #{record.idorigencajg,jdbcType=DECIMAL}");
        sql.SET("IDACTA = #{record.idacta,jdbcType=DECIMAL}");
        sql.SET("IDINSTITUCIONACTA = #{record.idinstitucionacta,jdbcType=DECIMAL}");
        sql.SET("ANIOACTA = #{record.anioacta,jdbcType=DECIMAL}");
        sql.SET("IDPONENTE = #{record.idponente,jdbcType=DECIMAL}");
        sql.SET("FECHAPRESENTACIONPONENTE = #{record.fechapresentacionponente,jdbcType=DATE}");
        sql.SET("IDINSTITUCIONPONENTE = #{record.idinstitucionponente,jdbcType=DECIMAL}");
        sql.SET("FECHARESOLUCIONCAJG = #{record.fecharesolucioncajg,jdbcType=DATE}");
        sql.SET("IDTIPORATIFICACIONEJG = #{record.idtiporatificacionejg,jdbcType=DECIMAL}");
        sql.SET("IDFUNDAMENTOJURIDICO = #{record.idfundamentojuridico,jdbcType=DECIMAL}");
        sql.SET("FECHANOTIFICACION = #{record.fechanotificacion,jdbcType=DATE}");
        sql.SET("REFAUTO = #{record.refauto,jdbcType=VARCHAR}");
        sql.SET("FECHARATIFICACION = #{record.fecharatificacion,jdbcType=DATE}");
        sql.SET("REQUIERENOTIFICARPROC = #{record.requierenotificarproc,jdbcType=VARCHAR}");
        sql.SET("TURNADORATIFICACION = #{record.turnadoratificacion,jdbcType=VARCHAR}");
        sql.SET("DOCRESOLUCION = #{record.docresolucion,jdbcType=VARCHAR}");
        sql.SET("RATIFICACIONDICTAMEN = #{record.ratificaciondictamen,jdbcType=CLOB}");
        sql.SET("NOTASCAJG = #{record.notascajg,jdbcType=CLOB}");
        
        ScsEjgResolucionExample example = (ScsEjgResolucionExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.SCS_EJG_RESOLUCION
     *
     * @mbg.generated Thu Jul 15 11:00:50 CEST 2021
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("SCS_EJG_RESOLUCION");
        
        sql.SET("ANIO = #{record.anio,jdbcType=DECIMAL}");
        sql.SET("NUMERO = #{record.numero,jdbcType=DECIMAL}");
        sql.SET("IDINSTITUCION = #{record.idinstitucion,jdbcType=DECIMAL}");
        sql.SET("IDTIPOEJG = #{record.idtipoejg,jdbcType=DECIMAL}");
        sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=DATE}");
        sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
        sql.SET("ANIOCAJG = #{record.aniocajg,jdbcType=DECIMAL}");
        sql.SET("NUMERO_CAJG = #{record.numeroCajg,jdbcType=VARCHAR}");
        sql.SET("IDORIGENCAJG = #{record.idorigencajg,jdbcType=DECIMAL}");
        sql.SET("IDACTA = #{record.idacta,jdbcType=DECIMAL}");
        sql.SET("IDINSTITUCIONACTA = #{record.idinstitucionacta,jdbcType=DECIMAL}");
        sql.SET("ANIOACTA = #{record.anioacta,jdbcType=DECIMAL}");
        sql.SET("IDPONENTE = #{record.idponente,jdbcType=DECIMAL}");
        sql.SET("FECHAPRESENTACIONPONENTE = #{record.fechapresentacionponente,jdbcType=DATE}");
        sql.SET("IDINSTITUCIONPONENTE = #{record.idinstitucionponente,jdbcType=DECIMAL}");
        sql.SET("FECHARESOLUCIONCAJG = #{record.fecharesolucioncajg,jdbcType=DATE}");
        sql.SET("IDTIPORATIFICACIONEJG = #{record.idtiporatificacionejg,jdbcType=DECIMAL}");
        sql.SET("IDFUNDAMENTOJURIDICO = #{record.idfundamentojuridico,jdbcType=DECIMAL}");
        sql.SET("FECHANOTIFICACION = #{record.fechanotificacion,jdbcType=DATE}");
        sql.SET("REFAUTO = #{record.refauto,jdbcType=VARCHAR}");
        sql.SET("FECHARATIFICACION = #{record.fecharatificacion,jdbcType=DATE}");
        sql.SET("REQUIERENOTIFICARPROC = #{record.requierenotificarproc,jdbcType=VARCHAR}");
        sql.SET("TURNADORATIFICACION = #{record.turnadoratificacion,jdbcType=VARCHAR}");
        sql.SET("DOCRESOLUCION = #{record.docresolucion,jdbcType=VARCHAR}");
        
        ScsEjgResolucionExample example = (ScsEjgResolucionExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.SCS_EJG_RESOLUCION
     *
     * @mbg.generated Thu Jul 15 11:00:50 CEST 2021
     */
    public String updateByPrimaryKeySelective(ScsEjgResolucionWithBLOBs record) {
        SQL sql = new SQL();
        sql.UPDATE("SCS_EJG_RESOLUCION");
        
        if (record.getFechamodificacion() != null) {
            sql.SET("FECHAMODIFICACION = #{fechamodificacion,jdbcType=DATE}");
        }
        
        if (record.getUsumodificacion() != null) {
            sql.SET("USUMODIFICACION = #{usumodificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getAniocajg() != null) {
            sql.SET("ANIOCAJG = #{aniocajg,jdbcType=DECIMAL}");
        }
        
        if (record.getNumeroCajg() != null) {
            sql.SET("NUMERO_CAJG = #{numeroCajg,jdbcType=VARCHAR}");
        }
        
        if (record.getIdorigencajg() != null) {
            sql.SET("IDORIGENCAJG = #{idorigencajg,jdbcType=DECIMAL}");
        }
        
        if (record.getIdacta() != null) {
            sql.SET("IDACTA = #{idacta,jdbcType=DECIMAL}");
        }
        
        if (record.getIdinstitucionacta() != null) {
            sql.SET("IDINSTITUCIONACTA = #{idinstitucionacta,jdbcType=DECIMAL}");
        }
        
        if (record.getAnioacta() != null) {
            sql.SET("ANIOACTA = #{anioacta,jdbcType=DECIMAL}");
        }
        
        if (record.getIdponente() != null) {
            sql.SET("IDPONENTE = #{idponente,jdbcType=DECIMAL}");
        }
        
        if (record.getFechapresentacionponente() != null) {
            sql.SET("FECHAPRESENTACIONPONENTE = #{fechapresentacionponente,jdbcType=DATE}");
        }
        
        if (record.getIdinstitucionponente() != null) {
            sql.SET("IDINSTITUCIONPONENTE = #{idinstitucionponente,jdbcType=DECIMAL}");
        }
        
        if (record.getFecharesolucioncajg() != null) {
            sql.SET("FECHARESOLUCIONCAJG = #{fecharesolucioncajg,jdbcType=DATE}");
        }
        
        if (record.getIdtiporatificacionejg() != null) {
            sql.SET("IDTIPORATIFICACIONEJG = #{idtiporatificacionejg,jdbcType=DECIMAL}");
        }
        
        if (record.getIdfundamentojuridico() != null) {
            sql.SET("IDFUNDAMENTOJURIDICO = #{idfundamentojuridico,jdbcType=DECIMAL}");
        }
        
        if (record.getFechanotificacion() != null) {
            sql.SET("FECHANOTIFICACION = #{fechanotificacion,jdbcType=DATE}");
        }
        
        if (record.getRefauto() != null) {
            sql.SET("REFAUTO = #{refauto,jdbcType=VARCHAR}");
        }
        
        if (record.getFecharatificacion() != null) {
            sql.SET("FECHARATIFICACION = #{fecharatificacion,jdbcType=DATE}");
        }
        
        if (record.getRequierenotificarproc() != null) {
            sql.SET("REQUIERENOTIFICARPROC = #{requierenotificarproc,jdbcType=VARCHAR}");
        }
        
        if (record.getTurnadoratificacion() != null) {
            sql.SET("TURNADORATIFICACION = #{turnadoratificacion,jdbcType=VARCHAR}");
        }
        
        if (record.getDocresolucion() != null) {
            sql.SET("DOCRESOLUCION = #{docresolucion,jdbcType=VARCHAR}");
        }
        
        if (record.getRatificaciondictamen() != null) {
            sql.SET("RATIFICACIONDICTAMEN = #{ratificaciondictamen,jdbcType=CLOB}");
        }
        
        if (record.getNotascajg() != null) {
            sql.SET("NOTASCAJG = #{notascajg,jdbcType=CLOB}");
        }
        
        sql.WHERE("ANIO = #{anio,jdbcType=DECIMAL}");
        sql.WHERE("NUMERO = #{numero,jdbcType=DECIMAL}");
        sql.WHERE("IDINSTITUCION = #{idinstitucion,jdbcType=DECIMAL}");
        sql.WHERE("IDTIPOEJG = #{idtipoejg,jdbcType=DECIMAL}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.SCS_EJG_RESOLUCION
     *
     * @mbg.generated Thu Jul 15 11:00:50 CEST 2021
     */
    protected void applyWhere(SQL sql, ScsEjgResolucionExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}