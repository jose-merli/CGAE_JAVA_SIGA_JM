package org.itcgae.siga.db.entities;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class FcsCertificacionesExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USCGAE_INT.FCS_CERTIFICACIONES
     *
     * @mbg.generated Mon Dec 13 17:55:56 CET 2021
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USCGAE_INT.FCS_CERTIFICACIONES
     *
     * @mbg.generated Mon Dec 13 17:55:56 CET 2021
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USCGAE_INT.FCS_CERTIFICACIONES
     *
     * @mbg.generated Mon Dec 13 17:55:56 CET 2021
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.FCS_CERTIFICACIONES
     *
     * @mbg.generated Mon Dec 13 17:55:56 CET 2021
     */
    public FcsCertificacionesExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.FCS_CERTIFICACIONES
     *
     * @mbg.generated Mon Dec 13 17:55:56 CET 2021
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.FCS_CERTIFICACIONES
     *
     * @mbg.generated Mon Dec 13 17:55:56 CET 2021
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.FCS_CERTIFICACIONES
     *
     * @mbg.generated Mon Dec 13 17:55:56 CET 2021
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.FCS_CERTIFICACIONES
     *
     * @mbg.generated Mon Dec 13 17:55:56 CET 2021
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.FCS_CERTIFICACIONES
     *
     * @mbg.generated Mon Dec 13 17:55:56 CET 2021
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.FCS_CERTIFICACIONES
     *
     * @mbg.generated Mon Dec 13 17:55:56 CET 2021
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.FCS_CERTIFICACIONES
     *
     * @mbg.generated Mon Dec 13 17:55:56 CET 2021
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.FCS_CERTIFICACIONES
     *
     * @mbg.generated Mon Dec 13 17:55:56 CET 2021
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.FCS_CERTIFICACIONES
     *
     * @mbg.generated Mon Dec 13 17:55:56 CET 2021
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.FCS_CERTIFICACIONES
     *
     * @mbg.generated Mon Dec 13 17:55:56 CET 2021
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE_INT.FCS_CERTIFICACIONES
     *
     * @mbg.generated Mon Dec 13 17:55:56 CET 2021
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdcertificacionIsNull() {
            addCriterion("IDCERTIFICACION is null");
            return (Criteria) this;
        }

        public Criteria andIdcertificacionIsNotNull() {
            addCriterion("IDCERTIFICACION is not null");
            return (Criteria) this;
        }

        public Criteria andIdcertificacionEqualTo(Short value) {
            addCriterion("IDCERTIFICACION =", value, "idcertificacion");
            return (Criteria) this;
        }

        public Criteria andIdcertificacionNotEqualTo(Short value) {
            addCriterion("IDCERTIFICACION <>", value, "idcertificacion");
            return (Criteria) this;
        }

        public Criteria andIdcertificacionGreaterThan(Short value) {
            addCriterion("IDCERTIFICACION >", value, "idcertificacion");
            return (Criteria) this;
        }

        public Criteria andIdcertificacionGreaterThanOrEqualTo(Short value) {
            addCriterion("IDCERTIFICACION >=", value, "idcertificacion");
            return (Criteria) this;
        }

        public Criteria andIdcertificacionLessThan(Short value) {
            addCriterion("IDCERTIFICACION <", value, "idcertificacion");
            return (Criteria) this;
        }

        public Criteria andIdcertificacionLessThanOrEqualTo(Short value) {
            addCriterion("IDCERTIFICACION <=", value, "idcertificacion");
            return (Criteria) this;
        }

        public Criteria andIdcertificacionIn(List<Short> values) {
            addCriterion("IDCERTIFICACION in", values, "idcertificacion");
            return (Criteria) this;
        }

        public Criteria andIdcertificacionNotIn(List<Short> values) {
            addCriterion("IDCERTIFICACION not in", values, "idcertificacion");
            return (Criteria) this;
        }

        public Criteria andIdcertificacionBetween(Short value1, Short value2) {
            addCriterion("IDCERTIFICACION between", value1, value2, "idcertificacion");
            return (Criteria) this;
        }

        public Criteria andIdcertificacionNotBetween(Short value1, Short value2) {
            addCriterion("IDCERTIFICACION not between", value1, value2, "idcertificacion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionIsNull() {
            addCriterion("IDINSTITUCION is null");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionIsNotNull() {
            addCriterion("IDINSTITUCION is not null");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionEqualTo(Short value) {
            addCriterion("IDINSTITUCION =", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionNotEqualTo(Short value) {
            addCriterion("IDINSTITUCION <>", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionGreaterThan(Short value) {
            addCriterion("IDINSTITUCION >", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionGreaterThanOrEqualTo(Short value) {
            addCriterion("IDINSTITUCION >=", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionLessThan(Short value) {
            addCriterion("IDINSTITUCION <", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionLessThanOrEqualTo(Short value) {
            addCriterion("IDINSTITUCION <=", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionIn(List<Short> values) {
            addCriterion("IDINSTITUCION in", values, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionNotIn(List<Short> values) {
            addCriterion("IDINSTITUCION not in", values, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionBetween(Short value1, Short value2) {
            addCriterion("IDINSTITUCION between", value1, value2, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionNotBetween(Short value1, Short value2) {
            addCriterion("IDINSTITUCION not between", value1, value2, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdestadocertificacionIsNull() {
            addCriterion("IDESTADOCERTIFICACION is null");
            return (Criteria) this;
        }

        public Criteria andIdestadocertificacionIsNotNull() {
            addCriterion("IDESTADOCERTIFICACION is not null");
            return (Criteria) this;
        }

        public Criteria andIdestadocertificacionEqualTo(Short value) {
            addCriterion("IDESTADOCERTIFICACION =", value, "idestadocertificacion");
            return (Criteria) this;
        }

        public Criteria andIdestadocertificacionNotEqualTo(Short value) {
            addCriterion("IDESTADOCERTIFICACION <>", value, "idestadocertificacion");
            return (Criteria) this;
        }

        public Criteria andIdestadocertificacionGreaterThan(Short value) {
            addCriterion("IDESTADOCERTIFICACION >", value, "idestadocertificacion");
            return (Criteria) this;
        }

        public Criteria andIdestadocertificacionGreaterThanOrEqualTo(Short value) {
            addCriterion("IDESTADOCERTIFICACION >=", value, "idestadocertificacion");
            return (Criteria) this;
        }

        public Criteria andIdestadocertificacionLessThan(Short value) {
            addCriterion("IDESTADOCERTIFICACION <", value, "idestadocertificacion");
            return (Criteria) this;
        }

        public Criteria andIdestadocertificacionLessThanOrEqualTo(Short value) {
            addCriterion("IDESTADOCERTIFICACION <=", value, "idestadocertificacion");
            return (Criteria) this;
        }

        public Criteria andIdestadocertificacionIn(List<Short> values) {
            addCriterion("IDESTADOCERTIFICACION in", values, "idestadocertificacion");
            return (Criteria) this;
        }

        public Criteria andIdestadocertificacionNotIn(List<Short> values) {
            addCriterion("IDESTADOCERTIFICACION not in", values, "idestadocertificacion");
            return (Criteria) this;
        }

        public Criteria andIdestadocertificacionBetween(Short value1, Short value2) {
            addCriterion("IDESTADOCERTIFICACION between", value1, value2, "idestadocertificacion");
            return (Criteria) this;
        }

        public Criteria andIdestadocertificacionNotBetween(Short value1, Short value2) {
            addCriterion("IDESTADOCERTIFICACION not between", value1, value2, "idestadocertificacion");
            return (Criteria) this;
        }

        public Criteria andFechadesdeIsNull() {
            addCriterion("FECHADESDE is null");
            return (Criteria) this;
        }

        public Criteria andFechadesdeIsNotNull() {
            addCriterion("FECHADESDE is not null");
            return (Criteria) this;
        }

        public Criteria andFechadesdeEqualTo(Date value) {
            addCriterion("FECHADESDE =", value, "fechadesde");
            return (Criteria) this;
        }

        public Criteria andFechadesdeNotEqualTo(Date value) {
            addCriterion("FECHADESDE <>", value, "fechadesde");
            return (Criteria) this;
        }

        public Criteria andFechadesdeGreaterThan(Date value) {
            addCriterion("FECHADESDE >", value, "fechadesde");
            return (Criteria) this;
        }

        public Criteria andFechadesdeGreaterThanOrEqualTo(Date value) {
            addCriterion("FECHADESDE >=", value, "fechadesde");
            return (Criteria) this;
        }

        public Criteria andFechadesdeLessThan(Date value) {
            addCriterion("FECHADESDE <", value, "fechadesde");
            return (Criteria) this;
        }

        public Criteria andFechadesdeLessThanOrEqualTo(Date value) {
            addCriterion("FECHADESDE <=", value, "fechadesde");
            return (Criteria) this;
        }

        public Criteria andFechadesdeIn(List<Date> values) {
            addCriterion("FECHADESDE in", values, "fechadesde");
            return (Criteria) this;
        }

        public Criteria andFechadesdeNotIn(List<Date> values) {
            addCriterion("FECHADESDE not in", values, "fechadesde");
            return (Criteria) this;
        }

        public Criteria andFechadesdeBetween(Date value1, Date value2) {
            addCriterion("FECHADESDE between", value1, value2, "fechadesde");
            return (Criteria) this;
        }

        public Criteria andFechadesdeNotBetween(Date value1, Date value2) {
            addCriterion("FECHADESDE not between", value1, value2, "fechadesde");
            return (Criteria) this;
        }

        public Criteria andFechahastaIsNull() {
            addCriterion("FECHAHASTA is null");
            return (Criteria) this;
        }

        public Criteria andFechahastaIsNotNull() {
            addCriterion("FECHAHASTA is not null");
            return (Criteria) this;
        }

        public Criteria andFechahastaEqualTo(Date value) {
            addCriterion("FECHAHASTA =", value, "fechahasta");
            return (Criteria) this;
        }

        public Criteria andFechahastaNotEqualTo(Date value) {
            addCriterion("FECHAHASTA <>", value, "fechahasta");
            return (Criteria) this;
        }

        public Criteria andFechahastaGreaterThan(Date value) {
            addCriterion("FECHAHASTA >", value, "fechahasta");
            return (Criteria) this;
        }

        public Criteria andFechahastaGreaterThanOrEqualTo(Date value) {
            addCriterion("FECHAHASTA >=", value, "fechahasta");
            return (Criteria) this;
        }

        public Criteria andFechahastaLessThan(Date value) {
            addCriterion("FECHAHASTA <", value, "fechahasta");
            return (Criteria) this;
        }

        public Criteria andFechahastaLessThanOrEqualTo(Date value) {
            addCriterion("FECHAHASTA <=", value, "fechahasta");
            return (Criteria) this;
        }

        public Criteria andFechahastaIn(List<Date> values) {
            addCriterion("FECHAHASTA in", values, "fechahasta");
            return (Criteria) this;
        }

        public Criteria andFechahastaNotIn(List<Date> values) {
            addCriterion("FECHAHASTA not in", values, "fechahasta");
            return (Criteria) this;
        }

        public Criteria andFechahastaBetween(Date value1, Date value2) {
            addCriterion("FECHAHASTA between", value1, value2, "fechahasta");
            return (Criteria) this;
        }

        public Criteria andFechahastaNotBetween(Date value1, Date value2) {
            addCriterion("FECHAHASTA not between", value1, value2, "fechahasta");
            return (Criteria) this;
        }

        public Criteria andIdhitogeneralIsNull() {
            addCriterion("IDHITOGENERAL is null");
            return (Criteria) this;
        }

        public Criteria andIdhitogeneralIsNotNull() {
            addCriterion("IDHITOGENERAL is not null");
            return (Criteria) this;
        }

        public Criteria andIdhitogeneralEqualTo(Short value) {
            addCriterion("IDHITOGENERAL =", value, "idhitogeneral");
            return (Criteria) this;
        }

        public Criteria andIdhitogeneralNotEqualTo(Short value) {
            addCriterion("IDHITOGENERAL <>", value, "idhitogeneral");
            return (Criteria) this;
        }

        public Criteria andIdhitogeneralGreaterThan(Short value) {
            addCriterion("IDHITOGENERAL >", value, "idhitogeneral");
            return (Criteria) this;
        }

        public Criteria andIdhitogeneralGreaterThanOrEqualTo(Short value) {
            addCriterion("IDHITOGENERAL >=", value, "idhitogeneral");
            return (Criteria) this;
        }

        public Criteria andIdhitogeneralLessThan(Short value) {
            addCriterion("IDHITOGENERAL <", value, "idhitogeneral");
            return (Criteria) this;
        }

        public Criteria andIdhitogeneralLessThanOrEqualTo(Short value) {
            addCriterion("IDHITOGENERAL <=", value, "idhitogeneral");
            return (Criteria) this;
        }

        public Criteria andIdhitogeneralIn(List<Short> values) {
            addCriterion("IDHITOGENERAL in", values, "idhitogeneral");
            return (Criteria) this;
        }

        public Criteria andIdhitogeneralNotIn(List<Short> values) {
            addCriterion("IDHITOGENERAL not in", values, "idhitogeneral");
            return (Criteria) this;
        }

        public Criteria andIdhitogeneralBetween(Short value1, Short value2) {
            addCriterion("IDHITOGENERAL between", value1, value2, "idhitogeneral");
            return (Criteria) this;
        }

        public Criteria andIdhitogeneralNotBetween(Short value1, Short value2) {
            addCriterion("IDHITOGENERAL not between", value1, value2, "idhitogeneral");
            return (Criteria) this;
        }

        public Criteria andNombreIsNull() {
            addCriterion("NOMBRE is null");
            return (Criteria) this;
        }

        public Criteria andNombreIsNotNull() {
            addCriterion("NOMBRE is not null");
            return (Criteria) this;
        }

        public Criteria andNombreEqualTo(String value) {
            addCriterion("NOMBRE =", value, "nombre");
            return (Criteria) this;
        }

        public Criteria andNombreNotEqualTo(String value) {
            addCriterion("NOMBRE <>", value, "nombre");
            return (Criteria) this;
        }

        public Criteria andNombreGreaterThan(String value) {
            addCriterion("NOMBRE >", value, "nombre");
            return (Criteria) this;
        }

        public Criteria andNombreGreaterThanOrEqualTo(String value) {
            addCriterion("NOMBRE >=", value, "nombre");
            return (Criteria) this;
        }

        public Criteria andNombreLessThan(String value) {
            addCriterion("NOMBRE <", value, "nombre");
            return (Criteria) this;
        }

        public Criteria andNombreLessThanOrEqualTo(String value) {
            addCriterion("NOMBRE <=", value, "nombre");
            return (Criteria) this;
        }

        public Criteria andNombreLike(String value) {
            addCriterion("NOMBRE like", value, "nombre");
            return (Criteria) this;
        }

        public Criteria andNombreNotLike(String value) {
            addCriterion("NOMBRE not like", value, "nombre");
            return (Criteria) this;
        }

        public Criteria andNombreIn(List<String> values) {
            addCriterion("NOMBRE in", values, "nombre");
            return (Criteria) this;
        }

        public Criteria andNombreNotIn(List<String> values) {
            addCriterion("NOMBRE not in", values, "nombre");
            return (Criteria) this;
        }

        public Criteria andNombreBetween(String value1, String value2) {
            addCriterion("NOMBRE between", value1, value2, "nombre");
            return (Criteria) this;
        }

        public Criteria andNombreNotBetween(String value1, String value2) {
            addCriterion("NOMBRE not between", value1, value2, "nombre");
            return (Criteria) this;
        }

        public Criteria andIdgrupofacturacionIsNull() {
            addCriterion("IDGRUPOFACTURACION is null");
            return (Criteria) this;
        }

        public Criteria andIdgrupofacturacionIsNotNull() {
            addCriterion("IDGRUPOFACTURACION is not null");
            return (Criteria) this;
        }

        public Criteria andIdgrupofacturacionEqualTo(Short value) {
            addCriterion("IDGRUPOFACTURACION =", value, "idgrupofacturacion");
            return (Criteria) this;
        }

        public Criteria andIdgrupofacturacionNotEqualTo(Short value) {
            addCriterion("IDGRUPOFACTURACION <>", value, "idgrupofacturacion");
            return (Criteria) this;
        }

        public Criteria andIdgrupofacturacionGreaterThan(Short value) {
            addCriterion("IDGRUPOFACTURACION >", value, "idgrupofacturacion");
            return (Criteria) this;
        }

        public Criteria andIdgrupofacturacionGreaterThanOrEqualTo(Short value) {
            addCriterion("IDGRUPOFACTURACION >=", value, "idgrupofacturacion");
            return (Criteria) this;
        }

        public Criteria andIdgrupofacturacionLessThan(Short value) {
            addCriterion("IDGRUPOFACTURACION <", value, "idgrupofacturacion");
            return (Criteria) this;
        }

        public Criteria andIdgrupofacturacionLessThanOrEqualTo(Short value) {
            addCriterion("IDGRUPOFACTURACION <=", value, "idgrupofacturacion");
            return (Criteria) this;
        }

        public Criteria andIdgrupofacturacionIn(List<Short> values) {
            addCriterion("IDGRUPOFACTURACION in", values, "idgrupofacturacion");
            return (Criteria) this;
        }

        public Criteria andIdgrupofacturacionNotIn(List<Short> values) {
            addCriterion("IDGRUPOFACTURACION not in", values, "idgrupofacturacion");
            return (Criteria) this;
        }

        public Criteria andIdgrupofacturacionBetween(Short value1, Short value2) {
            addCriterion("IDGRUPOFACTURACION between", value1, value2, "idgrupofacturacion");
            return (Criteria) this;
        }

        public Criteria andIdgrupofacturacionNotBetween(Short value1, Short value2) {
            addCriterion("IDGRUPOFACTURACION not between", value1, value2, "idgrupofacturacion");
            return (Criteria) this;
        }

        public Criteria andIdpartidapresupuestariaIsNull() {
            addCriterion("IDPARTIDAPRESUPUESTARIA is null");
            return (Criteria) this;
        }

        public Criteria andIdpartidapresupuestariaIsNotNull() {
            addCriterion("IDPARTIDAPRESUPUESTARIA is not null");
            return (Criteria) this;
        }

        public Criteria andIdpartidapresupuestariaEqualTo(Integer value) {
            addCriterion("IDPARTIDAPRESUPUESTARIA =", value, "idpartidapresupuestaria");
            return (Criteria) this;
        }

        public Criteria andIdpartidapresupuestariaNotEqualTo(Integer value) {
            addCriterion("IDPARTIDAPRESUPUESTARIA <>", value, "idpartidapresupuestaria");
            return (Criteria) this;
        }

        public Criteria andIdpartidapresupuestariaGreaterThan(Integer value) {
            addCriterion("IDPARTIDAPRESUPUESTARIA >", value, "idpartidapresupuestaria");
            return (Criteria) this;
        }

        public Criteria andIdpartidapresupuestariaGreaterThanOrEqualTo(Integer value) {
            addCriterion("IDPARTIDAPRESUPUESTARIA >=", value, "idpartidapresupuestaria");
            return (Criteria) this;
        }

        public Criteria andIdpartidapresupuestariaLessThan(Integer value) {
            addCriterion("IDPARTIDAPRESUPUESTARIA <", value, "idpartidapresupuestaria");
            return (Criteria) this;
        }

        public Criteria andIdpartidapresupuestariaLessThanOrEqualTo(Integer value) {
            addCriterion("IDPARTIDAPRESUPUESTARIA <=", value, "idpartidapresupuestaria");
            return (Criteria) this;
        }

        public Criteria andIdpartidapresupuestariaIn(List<Integer> values) {
            addCriterion("IDPARTIDAPRESUPUESTARIA in", values, "idpartidapresupuestaria");
            return (Criteria) this;
        }

        public Criteria andIdpartidapresupuestariaNotIn(List<Integer> values) {
            addCriterion("IDPARTIDAPRESUPUESTARIA not in", values, "idpartidapresupuestaria");
            return (Criteria) this;
        }

        public Criteria andIdpartidapresupuestariaBetween(Integer value1, Integer value2) {
            addCriterion("IDPARTIDAPRESUPUESTARIA between", value1, value2, "idpartidapresupuestaria");
            return (Criteria) this;
        }

        public Criteria andIdpartidapresupuestariaNotBetween(Integer value1, Integer value2) {
            addCriterion("IDPARTIDAPRESUPUESTARIA not between", value1, value2, "idpartidapresupuestaria");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionIsNull() {
            addCriterion("FECHAMODIFICACION is null");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionIsNotNull() {
            addCriterion("FECHAMODIFICACION is not null");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION =", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionNotEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION <>", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionGreaterThan(Date value) {
            addCriterion("FECHAMODIFICACION >", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionGreaterThanOrEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION >=", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionLessThan(Date value) {
            addCriterion("FECHAMODIFICACION <", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionLessThanOrEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION <=", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionIn(List<Date> values) {
            addCriterion("FECHAMODIFICACION in", values, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionNotIn(List<Date> values) {
            addCriterion("FECHAMODIFICACION not in", values, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionBetween(Date value1, Date value2) {
            addCriterion("FECHAMODIFICACION between", value1, value2, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionNotBetween(Date value1, Date value2) {
            addCriterion("FECHAMODIFICACION not between", value1, value2, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionIsNull() {
            addCriterion("USUMODIFICACION is null");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionIsNotNull() {
            addCriterion("USUMODIFICACION is not null");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionEqualTo(Integer value) {
            addCriterion("USUMODIFICACION =", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionNotEqualTo(Integer value) {
            addCriterion("USUMODIFICACION <>", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionGreaterThan(Integer value) {
            addCriterion("USUMODIFICACION >", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionGreaterThanOrEqualTo(Integer value) {
            addCriterion("USUMODIFICACION >=", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionLessThan(Integer value) {
            addCriterion("USUMODIFICACION <", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionLessThanOrEqualTo(Integer value) {
            addCriterion("USUMODIFICACION <=", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionIn(List<Integer> values) {
            addCriterion("USUMODIFICACION in", values, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionNotIn(List<Integer> values) {
            addCriterion("USUMODIFICACION not in", values, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionBetween(Integer value1, Integer value2) {
            addCriterion("USUMODIFICACION between", value1, value2, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionNotBetween(Integer value1, Integer value2) {
            addCriterion("USUMODIFICACION not between", value1, value2, "usumodificacion");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE_INT.FCS_CERTIFICACIONES
     *
     * @mbg.generated do_not_delete_during_merge Mon Dec 13 17:55:56 CET 2021
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE_INT.FCS_CERTIFICACIONES
     *
     * @mbg.generated Mon Dec 13 17:55:56 CET 2021
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}