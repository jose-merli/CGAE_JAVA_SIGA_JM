package org.itcgae.siga.db.mappers;

import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;
import org.itcgae.siga.db.entities.GenTablasMaestras;
import org.itcgae.siga.db.entities.GenTablasMaestrasExample.Criteria;
import org.itcgae.siga.db.entities.GenTablasMaestrasExample.Criterion;
import org.itcgae.siga.db.entities.GenTablasMaestrasExample;

public class GenTablasMaestrasSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_DESA.GEN_TABLAS_MAESTRAS
     *
     * @mbg.generated Wed Mar 14 18:23:45 CET 2018
     */
    public String countByExample(GenTablasMaestrasExample example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("GEN_TABLAS_MAESTRAS");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_DESA.GEN_TABLAS_MAESTRAS
     *
     * @mbg.generated Wed Mar 14 18:23:45 CET 2018
     */
    public String deleteByExample(GenTablasMaestrasExample example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("GEN_TABLAS_MAESTRAS");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_DESA.GEN_TABLAS_MAESTRAS
     *
     * @mbg.generated Wed Mar 14 18:23:45 CET 2018
     */
    public String insertSelective(GenTablasMaestras record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("GEN_TABLAS_MAESTRAS");
        
        if (record.getIdtablamaestra() != null) {
            sql.VALUES("IDTABLAMAESTRA", "#{idtablamaestra,jdbcType=VARCHAR}");
        }
        
        if (record.getIdcampocodigo() != null) {
            sql.VALUES("IDCAMPOCODIGO", "#{idcampocodigo,jdbcType=VARCHAR}");
        }
        
        if (record.getIdcampodescripcion() != null) {
            sql.VALUES("IDCAMPODESCRIPCION", "#{idcampodescripcion,jdbcType=VARCHAR}");
        }
        
        if (record.getAliastabla() != null) {
            sql.VALUES("ALIASTABLA", "#{aliastabla,jdbcType=VARCHAR}");
        }
        
        if (record.getFlagborradologico() != null) {
            sql.VALUES("FLAGBORRADOLOGICO", "#{flagborradologico,jdbcType=DECIMAL}");
        }
        
        if (record.getFlagusalenguaje() != null) {
            sql.VALUES("FLAGUSALENGUAJE", "#{flagusalenguaje,jdbcType=DECIMAL}");
        }
        
        if (record.getLongitudcodigo() != null) {
            sql.VALUES("LONGITUDCODIGO", "#{longitudcodigo,jdbcType=DECIMAL}");
        }
        
        if (record.getLongituddescripcion() != null) {
            sql.VALUES("LONGITUDDESCRIPCION", "#{longituddescripcion,jdbcType=DECIMAL}");
        }
        
        if (record.getFechamodificacion() != null) {
            sql.VALUES("FECHAMODIFICACION", "#{fechamodificacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUsumodificacion() != null) {
            sql.VALUES("USUMODIFICACION", "#{usumodificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getTipocodigo() != null) {
            sql.VALUES("TIPOCODIGO", "#{tipocodigo,jdbcType=VARCHAR}");
        }
        
        if (record.getLocal() != null) {
            sql.VALUES("LOCAL", "#{local,jdbcType=VARCHAR}");
        }
        
        if (record.getIdtablatraduccion() != null) {
            sql.VALUES("IDTABLATRADUCCION", "#{idtablatraduccion,jdbcType=VARCHAR}");
        }
        
        if (record.getPathaccion() != null) {
            sql.VALUES("PATHACCION", "#{pathaccion,jdbcType=VARCHAR}");
        }
        
        if (record.getIdrecurso() != null) {
            sql.VALUES("IDRECURSO", "#{idrecurso,jdbcType=VARCHAR}");
        }
        
        if (record.getIdlenguaje() != null) {
            sql.VALUES("IDLENGUAJE", "#{idlenguaje,jdbcType=VARCHAR}");
        }
        
        if (record.getIdcampocodigoext() != null) {
            sql.VALUES("IDCAMPOCODIGOEXT", "#{idcampocodigoext,jdbcType=VARCHAR}");
        }
        
        if (record.getLongitudcodigoext() != null) {
            sql.VALUES("LONGITUDCODIGOEXT", "#{longitudcodigoext,jdbcType=DECIMAL}");
        }
        
        if (record.getTipocodigoext() != null) {
            sql.VALUES("TIPOCODIGOEXT", "#{tipocodigoext,jdbcType=VARCHAR}");
        }
        
        if (record.getAceptabaja() != null) {
            sql.VALUES("ACEPTABAJA", "#{aceptabaja,jdbcType=DECIMAL}");
        }
        
        if (record.getIdtablarel() != null) {
            sql.VALUES("IDTABLAREL", "#{idtablarel,jdbcType=VARCHAR}");
        }
        
        if (record.getIdcampocodigorel() != null) {
            sql.VALUES("IDCAMPOCODIGOREL", "#{idcampocodigorel,jdbcType=VARCHAR}");
        }
        
        if (record.getDescripcionrel() != null) {
            sql.VALUES("DESCRIPCIONREL", "#{descripcionrel,jdbcType=VARCHAR}");
        }
        
        if (record.getNumerotextoplantillas() != null) {
            sql.VALUES("NUMEROTEXTOPLANTILLAS", "#{numerotextoplantillas,jdbcType=DECIMAL}");
        }
        
        if (record.getQuerytablarel() != null) {
            sql.VALUES("QUERYTABLAREL", "#{querytablarel,jdbcType=VARCHAR}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_DESA.GEN_TABLAS_MAESTRAS
     *
     * @mbg.generated Wed Mar 14 18:23:45 CET 2018
     */
    public String selectByExample(GenTablasMaestrasExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("IDTABLAMAESTRA");
        } else {
            sql.SELECT("IDTABLAMAESTRA");
        }
        sql.SELECT("IDCAMPOCODIGO");
        sql.SELECT("IDCAMPODESCRIPCION");
        sql.SELECT("ALIASTABLA");
        sql.SELECT("FLAGBORRADOLOGICO");
        sql.SELECT("FLAGUSALENGUAJE");
        sql.SELECT("LONGITUDCODIGO");
        sql.SELECT("LONGITUDDESCRIPCION");
        sql.SELECT("FECHAMODIFICACION");
        sql.SELECT("USUMODIFICACION");
        sql.SELECT("TIPOCODIGO");
        sql.SELECT("LOCAL");
        sql.SELECT("IDTABLATRADUCCION");
        sql.SELECT("PATHACCION");
        sql.SELECT("IDRECURSO");
        sql.SELECT("IDLENGUAJE");
        sql.SELECT("IDCAMPOCODIGOEXT");
        sql.SELECT("LONGITUDCODIGOEXT");
        sql.SELECT("TIPOCODIGOEXT");
        sql.SELECT("ACEPTABAJA");
        sql.SELECT("IDTABLAREL");
        sql.SELECT("IDCAMPOCODIGOREL");
        sql.SELECT("DESCRIPCIONREL");
        sql.SELECT("NUMEROTEXTOPLANTILLAS");
        sql.SELECT("QUERYTABLAREL");
        sql.FROM("GEN_TABLAS_MAESTRAS");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_DESA.GEN_TABLAS_MAESTRAS
     *
     * @mbg.generated Wed Mar 14 18:23:45 CET 2018
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        GenTablasMaestras record = (GenTablasMaestras) parameter.get("record");
        GenTablasMaestrasExample example = (GenTablasMaestrasExample) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("GEN_TABLAS_MAESTRAS");
        
        if (record.getIdtablamaestra() != null) {
            sql.SET("IDTABLAMAESTRA = #{record.idtablamaestra,jdbcType=VARCHAR}");
        }
        
        if (record.getIdcampocodigo() != null) {
            sql.SET("IDCAMPOCODIGO = #{record.idcampocodigo,jdbcType=VARCHAR}");
        }
        
        if (record.getIdcampodescripcion() != null) {
            sql.SET("IDCAMPODESCRIPCION = #{record.idcampodescripcion,jdbcType=VARCHAR}");
        }
        
        if (record.getAliastabla() != null) {
            sql.SET("ALIASTABLA = #{record.aliastabla,jdbcType=VARCHAR}");
        }
        
        if (record.getFlagborradologico() != null) {
            sql.SET("FLAGBORRADOLOGICO = #{record.flagborradologico,jdbcType=DECIMAL}");
        }
        
        if (record.getFlagusalenguaje() != null) {
            sql.SET("FLAGUSALENGUAJE = #{record.flagusalenguaje,jdbcType=DECIMAL}");
        }
        
        if (record.getLongitudcodigo() != null) {
            sql.SET("LONGITUDCODIGO = #{record.longitudcodigo,jdbcType=DECIMAL}");
        }
        
        if (record.getLongituddescripcion() != null) {
            sql.SET("LONGITUDDESCRIPCION = #{record.longituddescripcion,jdbcType=DECIMAL}");
        }
        
        if (record.getFechamodificacion() != null) {
            sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUsumodificacion() != null) {
            sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getTipocodigo() != null) {
            sql.SET("TIPOCODIGO = #{record.tipocodigo,jdbcType=VARCHAR}");
        }
        
        if (record.getLocal() != null) {
            sql.SET("LOCAL = #{record.local,jdbcType=VARCHAR}");
        }
        
        if (record.getIdtablatraduccion() != null) {
            sql.SET("IDTABLATRADUCCION = #{record.idtablatraduccion,jdbcType=VARCHAR}");
        }
        
        if (record.getPathaccion() != null) {
            sql.SET("PATHACCION = #{record.pathaccion,jdbcType=VARCHAR}");
        }
        
        if (record.getIdrecurso() != null) {
            sql.SET("IDRECURSO = #{record.idrecurso,jdbcType=VARCHAR}");
        }
        
        if (record.getIdlenguaje() != null) {
            sql.SET("IDLENGUAJE = #{record.idlenguaje,jdbcType=VARCHAR}");
        }
        
        if (record.getIdcampocodigoext() != null) {
            sql.SET("IDCAMPOCODIGOEXT = #{record.idcampocodigoext,jdbcType=VARCHAR}");
        }
        
        if (record.getLongitudcodigoext() != null) {
            sql.SET("LONGITUDCODIGOEXT = #{record.longitudcodigoext,jdbcType=DECIMAL}");
        }
        
        if (record.getTipocodigoext() != null) {
            sql.SET("TIPOCODIGOEXT = #{record.tipocodigoext,jdbcType=VARCHAR}");
        }
        
        if (record.getAceptabaja() != null) {
            sql.SET("ACEPTABAJA = #{record.aceptabaja,jdbcType=DECIMAL}");
        }
        
        if (record.getIdtablarel() != null) {
            sql.SET("IDTABLAREL = #{record.idtablarel,jdbcType=VARCHAR}");
        }
        
        if (record.getIdcampocodigorel() != null) {
            sql.SET("IDCAMPOCODIGOREL = #{record.idcampocodigorel,jdbcType=VARCHAR}");
        }
        
        if (record.getDescripcionrel() != null) {
            sql.SET("DESCRIPCIONREL = #{record.descripcionrel,jdbcType=VARCHAR}");
        }
        
        if (record.getNumerotextoplantillas() != null) {
            sql.SET("NUMEROTEXTOPLANTILLAS = #{record.numerotextoplantillas,jdbcType=DECIMAL}");
        }
        
        if (record.getQuerytablarel() != null) {
            sql.SET("QUERYTABLAREL = #{record.querytablarel,jdbcType=VARCHAR}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_DESA.GEN_TABLAS_MAESTRAS
     *
     * @mbg.generated Wed Mar 14 18:23:45 CET 2018
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("GEN_TABLAS_MAESTRAS");
        
        sql.SET("IDTABLAMAESTRA = #{record.idtablamaestra,jdbcType=VARCHAR}");
        sql.SET("IDCAMPOCODIGO = #{record.idcampocodigo,jdbcType=VARCHAR}");
        sql.SET("IDCAMPODESCRIPCION = #{record.idcampodescripcion,jdbcType=VARCHAR}");
        sql.SET("ALIASTABLA = #{record.aliastabla,jdbcType=VARCHAR}");
        sql.SET("FLAGBORRADOLOGICO = #{record.flagborradologico,jdbcType=DECIMAL}");
        sql.SET("FLAGUSALENGUAJE = #{record.flagusalenguaje,jdbcType=DECIMAL}");
        sql.SET("LONGITUDCODIGO = #{record.longitudcodigo,jdbcType=DECIMAL}");
        sql.SET("LONGITUDDESCRIPCION = #{record.longituddescripcion,jdbcType=DECIMAL}");
        sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=TIMESTAMP}");
        sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
        sql.SET("TIPOCODIGO = #{record.tipocodigo,jdbcType=VARCHAR}");
        sql.SET("LOCAL = #{record.local,jdbcType=VARCHAR}");
        sql.SET("IDTABLATRADUCCION = #{record.idtablatraduccion,jdbcType=VARCHAR}");
        sql.SET("PATHACCION = #{record.pathaccion,jdbcType=VARCHAR}");
        sql.SET("IDRECURSO = #{record.idrecurso,jdbcType=VARCHAR}");
        sql.SET("IDLENGUAJE = #{record.idlenguaje,jdbcType=VARCHAR}");
        sql.SET("IDCAMPOCODIGOEXT = #{record.idcampocodigoext,jdbcType=VARCHAR}");
        sql.SET("LONGITUDCODIGOEXT = #{record.longitudcodigoext,jdbcType=DECIMAL}");
        sql.SET("TIPOCODIGOEXT = #{record.tipocodigoext,jdbcType=VARCHAR}");
        sql.SET("ACEPTABAJA = #{record.aceptabaja,jdbcType=DECIMAL}");
        sql.SET("IDTABLAREL = #{record.idtablarel,jdbcType=VARCHAR}");
        sql.SET("IDCAMPOCODIGOREL = #{record.idcampocodigorel,jdbcType=VARCHAR}");
        sql.SET("DESCRIPCIONREL = #{record.descripcionrel,jdbcType=VARCHAR}");
        sql.SET("NUMEROTEXTOPLANTILLAS = #{record.numerotextoplantillas,jdbcType=DECIMAL}");
        sql.SET("QUERYTABLAREL = #{record.querytablarel,jdbcType=VARCHAR}");
        
        GenTablasMaestrasExample example = (GenTablasMaestrasExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_DESA.GEN_TABLAS_MAESTRAS
     *
     * @mbg.generated Wed Mar 14 18:23:45 CET 2018
     */
    public String updateByPrimaryKeySelective(GenTablasMaestras record) {
        SQL sql = new SQL();
        sql.UPDATE("GEN_TABLAS_MAESTRAS");
        
        if (record.getIdcampocodigo() != null) {
            sql.SET("IDCAMPOCODIGO = #{idcampocodigo,jdbcType=VARCHAR}");
        }
        
        if (record.getIdcampodescripcion() != null) {
            sql.SET("IDCAMPODESCRIPCION = #{idcampodescripcion,jdbcType=VARCHAR}");
        }
        
        if (record.getAliastabla() != null) {
            sql.SET("ALIASTABLA = #{aliastabla,jdbcType=VARCHAR}");
        }
        
        if (record.getFlagborradologico() != null) {
            sql.SET("FLAGBORRADOLOGICO = #{flagborradologico,jdbcType=DECIMAL}");
        }
        
        if (record.getFlagusalenguaje() != null) {
            sql.SET("FLAGUSALENGUAJE = #{flagusalenguaje,jdbcType=DECIMAL}");
        }
        
        if (record.getLongitudcodigo() != null) {
            sql.SET("LONGITUDCODIGO = #{longitudcodigo,jdbcType=DECIMAL}");
        }
        
        if (record.getLongituddescripcion() != null) {
            sql.SET("LONGITUDDESCRIPCION = #{longituddescripcion,jdbcType=DECIMAL}");
        }
        
        if (record.getFechamodificacion() != null) {
            sql.SET("FECHAMODIFICACION = #{fechamodificacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUsumodificacion() != null) {
            sql.SET("USUMODIFICACION = #{usumodificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getTipocodigo() != null) {
            sql.SET("TIPOCODIGO = #{tipocodigo,jdbcType=VARCHAR}");
        }
        
        if (record.getLocal() != null) {
            sql.SET("LOCAL = #{local,jdbcType=VARCHAR}");
        }
        
        if (record.getIdtablatraduccion() != null) {
            sql.SET("IDTABLATRADUCCION = #{idtablatraduccion,jdbcType=VARCHAR}");
        }
        
        if (record.getPathaccion() != null) {
            sql.SET("PATHACCION = #{pathaccion,jdbcType=VARCHAR}");
        }
        
        if (record.getIdrecurso() != null) {
            sql.SET("IDRECURSO = #{idrecurso,jdbcType=VARCHAR}");
        }
        
        if (record.getIdlenguaje() != null) {
            sql.SET("IDLENGUAJE = #{idlenguaje,jdbcType=VARCHAR}");
        }
        
        if (record.getIdcampocodigoext() != null) {
            sql.SET("IDCAMPOCODIGOEXT = #{idcampocodigoext,jdbcType=VARCHAR}");
        }
        
        if (record.getLongitudcodigoext() != null) {
            sql.SET("LONGITUDCODIGOEXT = #{longitudcodigoext,jdbcType=DECIMAL}");
        }
        
        if (record.getTipocodigoext() != null) {
            sql.SET("TIPOCODIGOEXT = #{tipocodigoext,jdbcType=VARCHAR}");
        }
        
        if (record.getAceptabaja() != null) {
            sql.SET("ACEPTABAJA = #{aceptabaja,jdbcType=DECIMAL}");
        }
        
        if (record.getIdtablarel() != null) {
            sql.SET("IDTABLAREL = #{idtablarel,jdbcType=VARCHAR}");
        }
        
        if (record.getIdcampocodigorel() != null) {
            sql.SET("IDCAMPOCODIGOREL = #{idcampocodigorel,jdbcType=VARCHAR}");
        }
        
        if (record.getDescripcionrel() != null) {
            sql.SET("DESCRIPCIONREL = #{descripcionrel,jdbcType=VARCHAR}");
        }
        
        if (record.getNumerotextoplantillas() != null) {
            sql.SET("NUMEROTEXTOPLANTILLAS = #{numerotextoplantillas,jdbcType=DECIMAL}");
        }
        
        if (record.getQuerytablarel() != null) {
            sql.SET("QUERYTABLAREL = #{querytablarel,jdbcType=VARCHAR}");
        }
        
        sql.WHERE("IDTABLAMAESTRA = #{idtablamaestra,jdbcType=VARCHAR}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_DESA.GEN_TABLAS_MAESTRAS
     *
     * @mbg.generated Wed Mar 14 18:23:45 CET 2018
     */
    protected void applyWhere(SQL sql, GenTablasMaestrasExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}