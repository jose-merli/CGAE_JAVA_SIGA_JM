package org.itcgae.siga.db.mappers;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;
import org.itcgae.siga.db.entities.FcsFactEstadosfacturacion;
import org.itcgae.siga.db.entities.FcsFactEstadosfacturacionExample;
import org.itcgae.siga.db.entities.FcsFactEstadosfacturacionKey;

import java.util.List;

public interface FcsFactEstadosfacturacionMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_INT.FCS_FACT_ESTADOSFACTURACION
	 * @mbg.generated  Tue Jan 10 11:09:02 CET 2023
	 */
	@SelectProvider(type = FcsFactEstadosfacturacionSqlProvider.class, method = "countByExample")
	long countByExample(FcsFactEstadosfacturacionExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_INT.FCS_FACT_ESTADOSFACTURACION
	 * @mbg.generated  Tue Jan 10 11:09:02 CET 2023
	 */
	@DeleteProvider(type = FcsFactEstadosfacturacionSqlProvider.class, method = "deleteByExample")
	int deleteByExample(FcsFactEstadosfacturacionExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_INT.FCS_FACT_ESTADOSFACTURACION
	 * @mbg.generated  Tue Jan 10 11:09:02 CET 2023
	 */
	@Delete({ "delete from FCS_FACT_ESTADOSFACTURACION", "where IDINSTITUCION = #{idinstitucion,jdbcType=NUMERIC}",
			"and IDFACTURACION = #{idfacturacion,jdbcType=NUMERIC}",
			"and IDESTADOFACTURACION = #{idestadofacturacion,jdbcType=NUMERIC}",
			"and FECHAESTADO = #{fechaestado,jdbcType=TIMESTAMP}" })
	int deleteByPrimaryKey(FcsFactEstadosfacturacionKey key);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_INT.FCS_FACT_ESTADOSFACTURACION
	 * @mbg.generated  Tue Jan 10 11:09:02 CET 2023
	 */
	@Insert({ "insert into FCS_FACT_ESTADOSFACTURACION (IDINSTITUCION, IDFACTURACION, ",
			"IDESTADOFACTURACION, FECHAESTADO, ", "FECHAMODIFICACION, USUMODIFICACION, ",
			"IDORDENESTADO, OBSERVACIONES, ", "PREVISION)",
			"values (#{idinstitucion,jdbcType=NUMERIC}, #{idfacturacion,jdbcType=NUMERIC}, ",
			"#{idestadofacturacion,jdbcType=NUMERIC}, #{fechaestado,jdbcType=TIMESTAMP}, ",
			"#{fechamodificacion,jdbcType=TIMESTAMP}, #{usumodificacion,jdbcType=NUMERIC}, ",
			"#{idordenestado,jdbcType=NUMERIC}, #{observaciones,jdbcType=VARCHAR}, ",
			"#{prevision,jdbcType=VARCHAR})" })
	int insert(FcsFactEstadosfacturacion record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_INT.FCS_FACT_ESTADOSFACTURACION
	 * @mbg.generated  Tue Jan 10 11:09:02 CET 2023
	 */
	@InsertProvider(type = FcsFactEstadosfacturacionSqlProvider.class, method = "insertSelective")
	int insertSelective(FcsFactEstadosfacturacion record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_INT.FCS_FACT_ESTADOSFACTURACION
	 * @mbg.generated  Tue Jan 10 11:09:02 CET 2023
	 */
	@SelectProvider(type = FcsFactEstadosfacturacionSqlProvider.class, method = "selectByExample")
	@Results({ @Result(column = "IDINSTITUCION", property = "idinstitucion", jdbcType = JdbcType.NUMERIC, id = true),
			@Result(column = "IDFACTURACION", property = "idfacturacion", jdbcType = JdbcType.NUMERIC, id = true),
			@Result(column = "IDESTADOFACTURACION", property = "idestadofacturacion", jdbcType = JdbcType.NUMERIC, id = true),
			@Result(column = "FECHAESTADO", property = "fechaestado", jdbcType = JdbcType.TIMESTAMP, id = true),
			@Result(column = "FECHAMODIFICACION", property = "fechamodificacion", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "USUMODIFICACION", property = "usumodificacion", jdbcType = JdbcType.NUMERIC),
			@Result(column = "IDORDENESTADO", property = "idordenestado", jdbcType = JdbcType.NUMERIC),
			@Result(column = "OBSERVACIONES", property = "observaciones", jdbcType = JdbcType.VARCHAR),
			@Result(column = "PREVISION", property = "prevision", jdbcType = JdbcType.VARCHAR) })
	List<FcsFactEstadosfacturacion> selectByExample(FcsFactEstadosfacturacionExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_INT.FCS_FACT_ESTADOSFACTURACION
	 * @mbg.generated  Tue Jan 10 11:09:02 CET 2023
	 */
	@Select({ "select", "IDINSTITUCION, IDFACTURACION, IDESTADOFACTURACION, FECHAESTADO, FECHAMODIFICACION, ",
			"USUMODIFICACION, IDORDENESTADO, OBSERVACIONES, PREVISION", "from FCS_FACT_ESTADOSFACTURACION",
			"where IDINSTITUCION = #{idinstitucion,jdbcType=NUMERIC}",
			"and IDFACTURACION = #{idfacturacion,jdbcType=NUMERIC}",
			"and IDESTADOFACTURACION = #{idestadofacturacion,jdbcType=NUMERIC}",
			"and FECHAESTADO = #{fechaestado,jdbcType=TIMESTAMP}" })
	@Results({ @Result(column = "IDINSTITUCION", property = "idinstitucion", jdbcType = JdbcType.NUMERIC, id = true),
			@Result(column = "IDFACTURACION", property = "idfacturacion", jdbcType = JdbcType.NUMERIC, id = true),
			@Result(column = "IDESTADOFACTURACION", property = "idestadofacturacion", jdbcType = JdbcType.NUMERIC, id = true),
			@Result(column = "FECHAESTADO", property = "fechaestado", jdbcType = JdbcType.TIMESTAMP, id = true),
			@Result(column = "FECHAMODIFICACION", property = "fechamodificacion", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "USUMODIFICACION", property = "usumodificacion", jdbcType = JdbcType.NUMERIC),
			@Result(column = "IDORDENESTADO", property = "idordenestado", jdbcType = JdbcType.NUMERIC),
			@Result(column = "OBSERVACIONES", property = "observaciones", jdbcType = JdbcType.VARCHAR),
			@Result(column = "PREVISION", property = "prevision", jdbcType = JdbcType.VARCHAR) })
	FcsFactEstadosfacturacion selectByPrimaryKey(FcsFactEstadosfacturacionKey key);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_INT.FCS_FACT_ESTADOSFACTURACION
	 * @mbg.generated  Tue Jan 10 11:09:02 CET 2023
	 */
	@UpdateProvider(type = FcsFactEstadosfacturacionSqlProvider.class, method = "updateByExampleSelective")
	int updateByExampleSelective(@Param("record") FcsFactEstadosfacturacion record,
			@Param("example") FcsFactEstadosfacturacionExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_INT.FCS_FACT_ESTADOSFACTURACION
	 * @mbg.generated  Tue Jan 10 11:09:02 CET 2023
	 */
	@UpdateProvider(type = FcsFactEstadosfacturacionSqlProvider.class, method = "updateByExample")
	int updateByExample(@Param("record") FcsFactEstadosfacturacion record,
			@Param("example") FcsFactEstadosfacturacionExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_INT.FCS_FACT_ESTADOSFACTURACION
	 * @mbg.generated  Tue Jan 10 11:09:02 CET 2023
	 */
	@UpdateProvider(type = FcsFactEstadosfacturacionSqlProvider.class, method = "updateByPrimaryKeySelective")
	int updateByPrimaryKeySelective(FcsFactEstadosfacturacion record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_INT.FCS_FACT_ESTADOSFACTURACION
	 * @mbg.generated  Tue Jan 10 11:09:02 CET 2023
	 */
	@Update({ "update FCS_FACT_ESTADOSFACTURACION", "set FECHAMODIFICACION = #{fechamodificacion,jdbcType=TIMESTAMP},",
			"USUMODIFICACION = #{usumodificacion,jdbcType=NUMERIC},",
			"IDORDENESTADO = #{idordenestado,jdbcType=NUMERIC},", "OBSERVACIONES = #{observaciones,jdbcType=VARCHAR},",
			"PREVISION = #{prevision,jdbcType=VARCHAR}", "where IDINSTITUCION = #{idinstitucion,jdbcType=NUMERIC}",
			"and IDFACTURACION = #{idfacturacion,jdbcType=NUMERIC}",
			"and IDESTADOFACTURACION = #{idestadofacturacion,jdbcType=NUMERIC}",
			"and FECHAESTADO = #{fechaestado,jdbcType=TIMESTAMP}" })
	int updateByPrimaryKey(FcsFactEstadosfacturacion record);
}