package org.itcgae.siga.db.entities;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class FcsFactAsistenciaExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USCGAE.FCS_FACT_ASISTENCIA
     *
     * @mbg.generated Fri Oct 15 11:23:50 CEST 2021
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USCGAE.FCS_FACT_ASISTENCIA
     *
     * @mbg.generated Fri Oct 15 11:23:50 CEST 2021
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USCGAE.FCS_FACT_ASISTENCIA
     *
     * @mbg.generated Fri Oct 15 11:23:50 CEST 2021
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_FACT_ASISTENCIA
     *
     * @mbg.generated Fri Oct 15 11:23:50 CEST 2021
     */
    public FcsFactAsistenciaExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_FACT_ASISTENCIA
     *
     * @mbg.generated Fri Oct 15 11:23:50 CEST 2021
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_FACT_ASISTENCIA
     *
     * @mbg.generated Fri Oct 15 11:23:50 CEST 2021
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_FACT_ASISTENCIA
     *
     * @mbg.generated Fri Oct 15 11:23:50 CEST 2021
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_FACT_ASISTENCIA
     *
     * @mbg.generated Fri Oct 15 11:23:50 CEST 2021
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_FACT_ASISTENCIA
     *
     * @mbg.generated Fri Oct 15 11:23:50 CEST 2021
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_FACT_ASISTENCIA
     *
     * @mbg.generated Fri Oct 15 11:23:50 CEST 2021
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_FACT_ASISTENCIA
     *
     * @mbg.generated Fri Oct 15 11:23:50 CEST 2021
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_FACT_ASISTENCIA
     *
     * @mbg.generated Fri Oct 15 11:23:50 CEST 2021
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_FACT_ASISTENCIA
     *
     * @mbg.generated Fri Oct 15 11:23:50 CEST 2021
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_FACT_ASISTENCIA
     *
     * @mbg.generated Fri Oct 15 11:23:50 CEST 2021
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE.FCS_FACT_ASISTENCIA
     *
     * @mbg.generated Fri Oct 15 11:23:50 CEST 2021
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdinstitucionIsNull() {
            addCriterion("IDINSTITUCION is null");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionIsNotNull() {
            addCriterion("IDINSTITUCION is not null");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionEqualTo(Short value) {
            addCriterion("IDINSTITUCION =", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionNotEqualTo(Short value) {
            addCriterion("IDINSTITUCION <>", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionGreaterThan(Short value) {
            addCriterion("IDINSTITUCION >", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionGreaterThanOrEqualTo(Short value) {
            addCriterion("IDINSTITUCION >=", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionLessThan(Short value) {
            addCriterion("IDINSTITUCION <", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionLessThanOrEqualTo(Short value) {
            addCriterion("IDINSTITUCION <=", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionIn(List<Short> values) {
            addCriterion("IDINSTITUCION in", values, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionNotIn(List<Short> values) {
            addCriterion("IDINSTITUCION not in", values, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionBetween(Short value1, Short value2) {
            addCriterion("IDINSTITUCION between", value1, value2, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionNotBetween(Short value1, Short value2) {
            addCriterion("IDINSTITUCION not between", value1, value2, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdfacturacionIsNull() {
            addCriterion("IDFACTURACION is null");
            return (Criteria) this;
        }

        public Criteria andIdfacturacionIsNotNull() {
            addCriterion("IDFACTURACION is not null");
            return (Criteria) this;
        }

        public Criteria andIdfacturacionEqualTo(Integer value) {
            addCriterion("IDFACTURACION =", value, "idfacturacion");
            return (Criteria) this;
        }

        public Criteria andIdfacturacionNotEqualTo(Integer value) {
            addCriterion("IDFACTURACION <>", value, "idfacturacion");
            return (Criteria) this;
        }

        public Criteria andIdfacturacionGreaterThan(Integer value) {
            addCriterion("IDFACTURACION >", value, "idfacturacion");
            return (Criteria) this;
        }

        public Criteria andIdfacturacionGreaterThanOrEqualTo(Integer value) {
            addCriterion("IDFACTURACION >=", value, "idfacturacion");
            return (Criteria) this;
        }

        public Criteria andIdfacturacionLessThan(Integer value) {
            addCriterion("IDFACTURACION <", value, "idfacturacion");
            return (Criteria) this;
        }

        public Criteria andIdfacturacionLessThanOrEqualTo(Integer value) {
            addCriterion("IDFACTURACION <=", value, "idfacturacion");
            return (Criteria) this;
        }

        public Criteria andIdfacturacionIn(List<Integer> values) {
            addCriterion("IDFACTURACION in", values, "idfacturacion");
            return (Criteria) this;
        }

        public Criteria andIdfacturacionNotIn(List<Integer> values) {
            addCriterion("IDFACTURACION not in", values, "idfacturacion");
            return (Criteria) this;
        }

        public Criteria andIdfacturacionBetween(Integer value1, Integer value2) {
            addCriterion("IDFACTURACION between", value1, value2, "idfacturacion");
            return (Criteria) this;
        }

        public Criteria andIdfacturacionNotBetween(Integer value1, Integer value2) {
            addCriterion("IDFACTURACION not between", value1, value2, "idfacturacion");
            return (Criteria) this;
        }

        public Criteria andIdapunteIsNull() {
            addCriterion("IDAPUNTE is null");
            return (Criteria) this;
        }

        public Criteria andIdapunteIsNotNull() {
            addCriterion("IDAPUNTE is not null");
            return (Criteria) this;
        }

        public Criteria andIdapunteEqualTo(Long value) {
            addCriterion("IDAPUNTE =", value, "idapunte");
            return (Criteria) this;
        }

        public Criteria andIdapunteNotEqualTo(Long value) {
            addCriterion("IDAPUNTE <>", value, "idapunte");
            return (Criteria) this;
        }

        public Criteria andIdapunteGreaterThan(Long value) {
            addCriterion("IDAPUNTE >", value, "idapunte");
            return (Criteria) this;
        }

        public Criteria andIdapunteGreaterThanOrEqualTo(Long value) {
            addCriterion("IDAPUNTE >=", value, "idapunte");
            return (Criteria) this;
        }

        public Criteria andIdapunteLessThan(Long value) {
            addCriterion("IDAPUNTE <", value, "idapunte");
            return (Criteria) this;
        }

        public Criteria andIdapunteLessThanOrEqualTo(Long value) {
            addCriterion("IDAPUNTE <=", value, "idapunte");
            return (Criteria) this;
        }

        public Criteria andIdapunteIn(List<Long> values) {
            addCriterion("IDAPUNTE in", values, "idapunte");
            return (Criteria) this;
        }

        public Criteria andIdapunteNotIn(List<Long> values) {
            addCriterion("IDAPUNTE not in", values, "idapunte");
            return (Criteria) this;
        }

        public Criteria andIdapunteBetween(Long value1, Long value2) {
            addCriterion("IDAPUNTE between", value1, value2, "idapunte");
            return (Criteria) this;
        }

        public Criteria andIdapunteNotBetween(Long value1, Long value2) {
            addCriterion("IDAPUNTE not between", value1, value2, "idapunte");
            return (Criteria) this;
        }

        public Criteria andAnioIsNull() {
            addCriterion("ANIO is null");
            return (Criteria) this;
        }

        public Criteria andAnioIsNotNull() {
            addCriterion("ANIO is not null");
            return (Criteria) this;
        }

        public Criteria andAnioEqualTo(Short value) {
            addCriterion("ANIO =", value, "anio");
            return (Criteria) this;
        }

        public Criteria andAnioNotEqualTo(Short value) {
            addCriterion("ANIO <>", value, "anio");
            return (Criteria) this;
        }

        public Criteria andAnioGreaterThan(Short value) {
            addCriterion("ANIO >", value, "anio");
            return (Criteria) this;
        }

        public Criteria andAnioGreaterThanOrEqualTo(Short value) {
            addCriterion("ANIO >=", value, "anio");
            return (Criteria) this;
        }

        public Criteria andAnioLessThan(Short value) {
            addCriterion("ANIO <", value, "anio");
            return (Criteria) this;
        }

        public Criteria andAnioLessThanOrEqualTo(Short value) {
            addCriterion("ANIO <=", value, "anio");
            return (Criteria) this;
        }

        public Criteria andAnioIn(List<Short> values) {
            addCriterion("ANIO in", values, "anio");
            return (Criteria) this;
        }

        public Criteria andAnioNotIn(List<Short> values) {
            addCriterion("ANIO not in", values, "anio");
            return (Criteria) this;
        }

        public Criteria andAnioBetween(Short value1, Short value2) {
            addCriterion("ANIO between", value1, value2, "anio");
            return (Criteria) this;
        }

        public Criteria andAnioNotBetween(Short value1, Short value2) {
            addCriterion("ANIO not between", value1, value2, "anio");
            return (Criteria) this;
        }

        public Criteria andNumeroIsNull() {
            addCriterion("NUMERO is null");
            return (Criteria) this;
        }

        public Criteria andNumeroIsNotNull() {
            addCriterion("NUMERO is not null");
            return (Criteria) this;
        }

        public Criteria andNumeroEqualTo(Long value) {
            addCriterion("NUMERO =", value, "numero");
            return (Criteria) this;
        }

        public Criteria andNumeroNotEqualTo(Long value) {
            addCriterion("NUMERO <>", value, "numero");
            return (Criteria) this;
        }

        public Criteria andNumeroGreaterThan(Long value) {
            addCriterion("NUMERO >", value, "numero");
            return (Criteria) this;
        }

        public Criteria andNumeroGreaterThanOrEqualTo(Long value) {
            addCriterion("NUMERO >=", value, "numero");
            return (Criteria) this;
        }

        public Criteria andNumeroLessThan(Long value) {
            addCriterion("NUMERO <", value, "numero");
            return (Criteria) this;
        }

        public Criteria andNumeroLessThanOrEqualTo(Long value) {
            addCriterion("NUMERO <=", value, "numero");
            return (Criteria) this;
        }

        public Criteria andNumeroIn(List<Long> values) {
            addCriterion("NUMERO in", values, "numero");
            return (Criteria) this;
        }

        public Criteria andNumeroNotIn(List<Long> values) {
            addCriterion("NUMERO not in", values, "numero");
            return (Criteria) this;
        }

        public Criteria andNumeroBetween(Long value1, Long value2) {
            addCriterion("NUMERO between", value1, value2, "numero");
            return (Criteria) this;
        }

        public Criteria andNumeroNotBetween(Long value1, Long value2) {
            addCriterion("NUMERO not between", value1, value2, "numero");
            return (Criteria) this;
        }

        public Criteria andIdtipoIsNull() {
            addCriterion("IDTIPO is null");
            return (Criteria) this;
        }

        public Criteria andIdtipoIsNotNull() {
            addCriterion("IDTIPO is not null");
            return (Criteria) this;
        }

        public Criteria andIdtipoEqualTo(Short value) {
            addCriterion("IDTIPO =", value, "idtipo");
            return (Criteria) this;
        }

        public Criteria andIdtipoNotEqualTo(Short value) {
            addCriterion("IDTIPO <>", value, "idtipo");
            return (Criteria) this;
        }

        public Criteria andIdtipoGreaterThan(Short value) {
            addCriterion("IDTIPO >", value, "idtipo");
            return (Criteria) this;
        }

        public Criteria andIdtipoGreaterThanOrEqualTo(Short value) {
            addCriterion("IDTIPO >=", value, "idtipo");
            return (Criteria) this;
        }

        public Criteria andIdtipoLessThan(Short value) {
            addCriterion("IDTIPO <", value, "idtipo");
            return (Criteria) this;
        }

        public Criteria andIdtipoLessThanOrEqualTo(Short value) {
            addCriterion("IDTIPO <=", value, "idtipo");
            return (Criteria) this;
        }

        public Criteria andIdtipoIn(List<Short> values) {
            addCriterion("IDTIPO in", values, "idtipo");
            return (Criteria) this;
        }

        public Criteria andIdtipoNotIn(List<Short> values) {
            addCriterion("IDTIPO not in", values, "idtipo");
            return (Criteria) this;
        }

        public Criteria andIdtipoBetween(Short value1, Short value2) {
            addCriterion("IDTIPO between", value1, value2, "idtipo");
            return (Criteria) this;
        }

        public Criteria andIdtipoNotBetween(Short value1, Short value2) {
            addCriterion("IDTIPO not between", value1, value2, "idtipo");
            return (Criteria) this;
        }

        public Criteria andIdpersonaIsNull() {
            addCriterion("IDPERSONA is null");
            return (Criteria) this;
        }

        public Criteria andIdpersonaIsNotNull() {
            addCriterion("IDPERSONA is not null");
            return (Criteria) this;
        }

        public Criteria andIdpersonaEqualTo(Long value) {
            addCriterion("IDPERSONA =", value, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaNotEqualTo(Long value) {
            addCriterion("IDPERSONA <>", value, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaGreaterThan(Long value) {
            addCriterion("IDPERSONA >", value, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaGreaterThanOrEqualTo(Long value) {
            addCriterion("IDPERSONA >=", value, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaLessThan(Long value) {
            addCriterion("IDPERSONA <", value, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaLessThanOrEqualTo(Long value) {
            addCriterion("IDPERSONA <=", value, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaIn(List<Long> values) {
            addCriterion("IDPERSONA in", values, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaNotIn(List<Long> values) {
            addCriterion("IDPERSONA not in", values, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaBetween(Long value1, Long value2) {
            addCriterion("IDPERSONA between", value1, value2, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaNotBetween(Long value1, Long value2) {
            addCriterion("IDPERSONA not between", value1, value2, "idpersona");
            return (Criteria) this;
        }

        public Criteria andFechahoraIsNull() {
            addCriterion("FECHAHORA is null");
            return (Criteria) this;
        }

        public Criteria andFechahoraIsNotNull() {
            addCriterion("FECHAHORA is not null");
            return (Criteria) this;
        }

        public Criteria andFechahoraEqualTo(Date value) {
            addCriterion("FECHAHORA =", value, "fechahora");
            return (Criteria) this;
        }

        public Criteria andFechahoraNotEqualTo(Date value) {
            addCriterion("FECHAHORA <>", value, "fechahora");
            return (Criteria) this;
        }

        public Criteria andFechahoraGreaterThan(Date value) {
            addCriterion("FECHAHORA >", value, "fechahora");
            return (Criteria) this;
        }

        public Criteria andFechahoraGreaterThanOrEqualTo(Date value) {
            addCriterion("FECHAHORA >=", value, "fechahora");
            return (Criteria) this;
        }

        public Criteria andFechahoraLessThan(Date value) {
            addCriterion("FECHAHORA <", value, "fechahora");
            return (Criteria) this;
        }

        public Criteria andFechahoraLessThanOrEqualTo(Date value) {
            addCriterion("FECHAHORA <=", value, "fechahora");
            return (Criteria) this;
        }

        public Criteria andFechahoraIn(List<Date> values) {
            addCriterion("FECHAHORA in", values, "fechahora");
            return (Criteria) this;
        }

        public Criteria andFechahoraNotIn(List<Date> values) {
            addCriterion("FECHAHORA not in", values, "fechahora");
            return (Criteria) this;
        }

        public Criteria andFechahoraBetween(Date value1, Date value2) {
            addCriterion("FECHAHORA between", value1, value2, "fechahora");
            return (Criteria) this;
        }

        public Criteria andFechahoraNotBetween(Date value1, Date value2) {
            addCriterion("FECHAHORA not between", value1, value2, "fechahora");
            return (Criteria) this;
        }

        public Criteria andFechajustificacionIsNull() {
            addCriterion("FECHAJUSTIFICACION is null");
            return (Criteria) this;
        }

        public Criteria andFechajustificacionIsNotNull() {
            addCriterion("FECHAJUSTIFICACION is not null");
            return (Criteria) this;
        }

        public Criteria andFechajustificacionEqualTo(Date value) {
            addCriterion("FECHAJUSTIFICACION =", value, "fechajustificacion");
            return (Criteria) this;
        }

        public Criteria andFechajustificacionNotEqualTo(Date value) {
            addCriterion("FECHAJUSTIFICACION <>", value, "fechajustificacion");
            return (Criteria) this;
        }

        public Criteria andFechajustificacionGreaterThan(Date value) {
            addCriterion("FECHAJUSTIFICACION >", value, "fechajustificacion");
            return (Criteria) this;
        }

        public Criteria andFechajustificacionGreaterThanOrEqualTo(Date value) {
            addCriterion("FECHAJUSTIFICACION >=", value, "fechajustificacion");
            return (Criteria) this;
        }

        public Criteria andFechajustificacionLessThan(Date value) {
            addCriterion("FECHAJUSTIFICACION <", value, "fechajustificacion");
            return (Criteria) this;
        }

        public Criteria andFechajustificacionLessThanOrEqualTo(Date value) {
            addCriterion("FECHAJUSTIFICACION <=", value, "fechajustificacion");
            return (Criteria) this;
        }

        public Criteria andFechajustificacionIn(List<Date> values) {
            addCriterion("FECHAJUSTIFICACION in", values, "fechajustificacion");
            return (Criteria) this;
        }

        public Criteria andFechajustificacionNotIn(List<Date> values) {
            addCriterion("FECHAJUSTIFICACION not in", values, "fechajustificacion");
            return (Criteria) this;
        }

        public Criteria andFechajustificacionBetween(Date value1, Date value2) {
            addCriterion("FECHAJUSTIFICACION between", value1, value2, "fechajustificacion");
            return (Criteria) this;
        }

        public Criteria andFechajustificacionNotBetween(Date value1, Date value2) {
            addCriterion("FECHAJUSTIFICACION not between", value1, value2, "fechajustificacion");
            return (Criteria) this;
        }

        public Criteria andPrecioaplicadoIsNull() {
            addCriterion("PRECIOAPLICADO is null");
            return (Criteria) this;
        }

        public Criteria andPrecioaplicadoIsNotNull() {
            addCriterion("PRECIOAPLICADO is not null");
            return (Criteria) this;
        }

        public Criteria andPrecioaplicadoEqualTo(BigDecimal value) {
            addCriterion("PRECIOAPLICADO =", value, "precioaplicado");
            return (Criteria) this;
        }

        public Criteria andPrecioaplicadoNotEqualTo(BigDecimal value) {
            addCriterion("PRECIOAPLICADO <>", value, "precioaplicado");
            return (Criteria) this;
        }

        public Criteria andPrecioaplicadoGreaterThan(BigDecimal value) {
            addCriterion("PRECIOAPLICADO >", value, "precioaplicado");
            return (Criteria) this;
        }

        public Criteria andPrecioaplicadoGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("PRECIOAPLICADO >=", value, "precioaplicado");
            return (Criteria) this;
        }

        public Criteria andPrecioaplicadoLessThan(BigDecimal value) {
            addCriterion("PRECIOAPLICADO <", value, "precioaplicado");
            return (Criteria) this;
        }

        public Criteria andPrecioaplicadoLessThanOrEqualTo(BigDecimal value) {
            addCriterion("PRECIOAPLICADO <=", value, "precioaplicado");
            return (Criteria) this;
        }

        public Criteria andPrecioaplicadoIn(List<BigDecimal> values) {
            addCriterion("PRECIOAPLICADO in", values, "precioaplicado");
            return (Criteria) this;
        }

        public Criteria andPrecioaplicadoNotIn(List<BigDecimal> values) {
            addCriterion("PRECIOAPLICADO not in", values, "precioaplicado");
            return (Criteria) this;
        }

        public Criteria andPrecioaplicadoBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PRECIOAPLICADO between", value1, value2, "precioaplicado");
            return (Criteria) this;
        }

        public Criteria andPrecioaplicadoNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PRECIOAPLICADO not between", value1, value2, "precioaplicado");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionIsNull() {
            addCriterion("FECHAMODIFICACION is null");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionIsNotNull() {
            addCriterion("FECHAMODIFICACION is not null");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION =", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionNotEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION <>", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionGreaterThan(Date value) {
            addCriterion("FECHAMODIFICACION >", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionGreaterThanOrEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION >=", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionLessThan(Date value) {
            addCriterion("FECHAMODIFICACION <", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionLessThanOrEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION <=", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionIn(List<Date> values) {
            addCriterion("FECHAMODIFICACION in", values, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionNotIn(List<Date> values) {
            addCriterion("FECHAMODIFICACION not in", values, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionBetween(Date value1, Date value2) {
            addCriterion("FECHAMODIFICACION between", value1, value2, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionNotBetween(Date value1, Date value2) {
            addCriterion("FECHAMODIFICACION not between", value1, value2, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionIsNull() {
            addCriterion("USUMODIFICACION is null");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionIsNotNull() {
            addCriterion("USUMODIFICACION is not null");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionEqualTo(Integer value) {
            addCriterion("USUMODIFICACION =", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionNotEqualTo(Integer value) {
            addCriterion("USUMODIFICACION <>", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionGreaterThan(Integer value) {
            addCriterion("USUMODIFICACION >", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionGreaterThanOrEqualTo(Integer value) {
            addCriterion("USUMODIFICACION >=", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionLessThan(Integer value) {
            addCriterion("USUMODIFICACION <", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionLessThanOrEqualTo(Integer value) {
            addCriterion("USUMODIFICACION <=", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionIn(List<Integer> values) {
            addCriterion("USUMODIFICACION in", values, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionNotIn(List<Integer> values) {
            addCriterion("USUMODIFICACION not in", values, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionBetween(Integer value1, Integer value2) {
            addCriterion("USUMODIFICACION between", value1, value2, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionNotBetween(Integer value1, Integer value2) {
            addCriterion("USUMODIFICACION not between", value1, value2, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andIdhitoIsNull() {
            addCriterion("IDHITO is null");
            return (Criteria) this;
        }

        public Criteria andIdhitoIsNotNull() {
            addCriterion("IDHITO is not null");
            return (Criteria) this;
        }

        public Criteria andIdhitoEqualTo(Long value) {
            addCriterion("IDHITO =", value, "idhito");
            return (Criteria) this;
        }

        public Criteria andIdhitoNotEqualTo(Long value) {
            addCriterion("IDHITO <>", value, "idhito");
            return (Criteria) this;
        }

        public Criteria andIdhitoGreaterThan(Long value) {
            addCriterion("IDHITO >", value, "idhito");
            return (Criteria) this;
        }

        public Criteria andIdhitoGreaterThanOrEqualTo(Long value) {
            addCriterion("IDHITO >=", value, "idhito");
            return (Criteria) this;
        }

        public Criteria andIdhitoLessThan(Long value) {
            addCriterion("IDHITO <", value, "idhito");
            return (Criteria) this;
        }

        public Criteria andIdhitoLessThanOrEqualTo(Long value) {
            addCriterion("IDHITO <=", value, "idhito");
            return (Criteria) this;
        }

        public Criteria andIdhitoIn(List<Long> values) {
            addCriterion("IDHITO in", values, "idhito");
            return (Criteria) this;
        }

        public Criteria andIdhitoNotIn(List<Long> values) {
            addCriterion("IDHITO not in", values, "idhito");
            return (Criteria) this;
        }

        public Criteria andIdhitoBetween(Long value1, Long value2) {
            addCriterion("IDHITO between", value1, value2, "idhito");
            return (Criteria) this;
        }

        public Criteria andIdhitoNotBetween(Long value1, Long value2) {
            addCriterion("IDHITO not between", value1, value2, "idhito");
            return (Criteria) this;
        }

        public Criteria andMotivoIsNull() {
            addCriterion("MOTIVO is null");
            return (Criteria) this;
        }

        public Criteria andMotivoIsNotNull() {
            addCriterion("MOTIVO is not null");
            return (Criteria) this;
        }

        public Criteria andMotivoEqualTo(String value) {
            addCriterion("MOTIVO =", value, "motivo");
            return (Criteria) this;
        }

        public Criteria andMotivoNotEqualTo(String value) {
            addCriterion("MOTIVO <>", value, "motivo");
            return (Criteria) this;
        }

        public Criteria andMotivoGreaterThan(String value) {
            addCriterion("MOTIVO >", value, "motivo");
            return (Criteria) this;
        }

        public Criteria andMotivoGreaterThanOrEqualTo(String value) {
            addCriterion("MOTIVO >=", value, "motivo");
            return (Criteria) this;
        }

        public Criteria andMotivoLessThan(String value) {
            addCriterion("MOTIVO <", value, "motivo");
            return (Criteria) this;
        }

        public Criteria andMotivoLessThanOrEqualTo(String value) {
            addCriterion("MOTIVO <=", value, "motivo");
            return (Criteria) this;
        }

        public Criteria andMotivoLike(String value) {
            addCriterion("MOTIVO like", value, "motivo");
            return (Criteria) this;
        }

        public Criteria andMotivoNotLike(String value) {
            addCriterion("MOTIVO not like", value, "motivo");
            return (Criteria) this;
        }

        public Criteria andMotivoIn(List<String> values) {
            addCriterion("MOTIVO in", values, "motivo");
            return (Criteria) this;
        }

        public Criteria andMotivoNotIn(List<String> values) {
            addCriterion("MOTIVO not in", values, "motivo");
            return (Criteria) this;
        }

        public Criteria andMotivoBetween(String value1, String value2) {
            addCriterion("MOTIVO between", value1, value2, "motivo");
            return (Criteria) this;
        }

        public Criteria andMotivoNotBetween(String value1, String value2) {
            addCriterion("MOTIVO not between", value1, value2, "motivo");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE.FCS_FACT_ASISTENCIA
     *
     * @mbg.generated do_not_delete_during_merge Fri Oct 15 11:23:50 CEST 2021
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE.FCS_FACT_ASISTENCIA
     *
     * @mbg.generated Fri Oct 15 11:23:50 CEST 2021
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}