package org.itcgae.siga.db.mappers;

import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;
import org.itcgae.siga.db.entities.EcomCenDatos;
import org.itcgae.siga.db.entities.EcomCenDatosExample.Criteria;
import org.itcgae.siga.db.entities.EcomCenDatosExample.Criterion;
import org.itcgae.siga.db.entities.EcomCenDatosExample;

public class EcomCenDatosSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.ECOM_CEN_DATOS
     *
     * @mbg.generated Thu Dec 13 14:07:22 CET 2018
     */
    public String countByExample(EcomCenDatosExample example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("ECOM_CEN_DATOS");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.ECOM_CEN_DATOS
     *
     * @mbg.generated Thu Dec 13 14:07:22 CET 2018
     */
    public String deleteByExample(EcomCenDatosExample example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("ECOM_CEN_DATOS");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.ECOM_CEN_DATOS
     *
     * @mbg.generated Thu Dec 13 14:07:22 CET 2018
     */
    public String insertSelective(EcomCenDatos record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("ECOM_CEN_DATOS");
        
        sql.VALUES("IDCENSODATOS", "#{idcensodatos,jdbcType=DECIMAL}");
        
        if (record.getPublicarcolegiado() != null) {
            sql.VALUES("PUBLICARCOLEGIADO", "#{publicarcolegiado,jdbcType=DECIMAL}");
        }
        
        if (record.getNcolegiado() != null) {
            sql.VALUES("NCOLEGIADO", "#{ncolegiado,jdbcType=VARCHAR}");
        }
        
        if (record.getNumsolicitudcolegiacion() != null) {
            sql.VALUES("NUMSOLICITUDCOLEGIACION", "#{numsolicitudcolegiacion,jdbcType=VARCHAR}");
        }
        
        if (record.getNombre() != null) {
            sql.VALUES("NOMBRE", "#{nombre,jdbcType=VARCHAR}");
        }
        
        if (record.getApellido1() != null) {
            sql.VALUES("APELLIDO1", "#{apellido1,jdbcType=VARCHAR}");
        }
        
        if (record.getApellido2() != null) {
            sql.VALUES("APELLIDO2", "#{apellido2,jdbcType=VARCHAR}");
        }
        
        if (record.getSexo() != null) {
            sql.VALUES("SEXO", "#{sexo,jdbcType=CHAR}");
        }
        
        if (record.getFechanacimiento() != null) {
            sql.VALUES("FECHANACIMIENTO", "#{fechanacimiento,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIdcensotipoidentificacion() != null) {
            sql.VALUES("IDCENSOTIPOIDENTIFICACION", "#{idcensotipoidentificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getNumdocumento() != null) {
            sql.VALUES("NUMDOCUMENTO", "#{numdocumento,jdbcType=VARCHAR}");
        }
        
        if (record.getIdcensodireccion() != null) {
            sql.VALUES("IDCENSODIRECCION", "#{idcensodireccion,jdbcType=DECIMAL}");
        }
        
        if (record.getPublicartelefono() != null) {
            sql.VALUES("PUBLICARTELEFONO", "#{publicartelefono,jdbcType=DECIMAL}");
        }
        
        if (record.getTelefono() != null) {
            sql.VALUES("TELEFONO", "#{telefono,jdbcType=VARCHAR}");
        }
        
        if (record.getPublicartelefonomovil() != null) {
            sql.VALUES("PUBLICARTELEFONOMOVIL", "#{publicartelefonomovil,jdbcType=DECIMAL}");
        }
        
        if (record.getTelefonomovil() != null) {
            sql.VALUES("TELEFONOMOVIL", "#{telefonomovil,jdbcType=VARCHAR}");
        }
        
        if (record.getPublicarfax() != null) {
            sql.VALUES("PUBLICARFAX", "#{publicarfax,jdbcType=DECIMAL}");
        }
        
        if (record.getFax() != null) {
            sql.VALUES("FAX", "#{fax,jdbcType=VARCHAR}");
        }
        
        if (record.getPublicaremail() != null) {
            sql.VALUES("PUBLICAREMAIL", "#{publicaremail,jdbcType=DECIMAL}");
        }
        
        if (record.getEmail() != null) {
            sql.VALUES("EMAIL", "#{email,jdbcType=VARCHAR}");
        }
        
        if (record.getIdecomcensosituacionejer() != null) {
            sql.VALUES("IDECOMCENSOSITUACIONEJER", "#{idecomcensosituacionejer,jdbcType=DECIMAL}");
        }
        
        if (record.getFechasituacion() != null) {
            sql.VALUES("FECHASITUACION", "#{fechasituacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getFechamodifrecibida() != null) {
            sql.VALUES("FECHAMODIFRECIBIDA", "#{fechamodifrecibida,jdbcType=TIMESTAMP}");
        }
        
        if (record.getResidente() != null) {
            sql.VALUES("RESIDENTE", "#{residente,jdbcType=DECIMAL}");
        }
        
        if (record.getIdestadocolegiado() != null) {
            sql.VALUES("IDESTADOCOLEGIADO", "#{idestadocolegiado,jdbcType=DECIMAL}");
        }
        
        if (record.getFechamodificacion() != null) {
            sql.VALUES("FECHAMODIFICACION", "#{fechamodificacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUsumodificacion() != null) {
            sql.VALUES("USUMODIFICACION", "#{usumodificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getMediador() != null) {
            sql.VALUES("MEDIADOR", "#{mediador,jdbcType=DECIMAL}");
        }
        
        if (record.getHash() != null) {
            sql.VALUES("HASH", "#{hash,jdbcType=VARCHAR}");
        }
        
        if (record.getFechainicio() != null) {
            sql.VALUES("FECHAINICIO", "#{fechainicio,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIdinstitucionresidencia() != null) {
            sql.VALUES("IDINSTITUCIONRESIDENCIA", "#{idinstitucionresidencia,jdbcType=DECIMAL}");
        }
        
        if (record.getAniolicenciatura() != null) {
            sql.VALUES("ANIOLICENCIATURA", "#{aniolicenciatura,jdbcType=VARCHAR}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.ECOM_CEN_DATOS
     *
     * @mbg.generated Thu Dec 13 14:07:22 CET 2018
     */
    public String selectByExample(EcomCenDatosExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("IDCENSODATOS");
        } else {
            sql.SELECT("IDCENSODATOS");
        }
        sql.SELECT("PUBLICARCOLEGIADO");
        sql.SELECT("NCOLEGIADO");
        sql.SELECT("NUMSOLICITUDCOLEGIACION");
        sql.SELECT("NOMBRE");
        sql.SELECT("APELLIDO1");
        sql.SELECT("APELLIDO2");
        sql.SELECT("SEXO");
        sql.SELECT("FECHANACIMIENTO");
        sql.SELECT("IDCENSOTIPOIDENTIFICACION");
        sql.SELECT("NUMDOCUMENTO");
        sql.SELECT("IDCENSODIRECCION");
        sql.SELECT("PUBLICARTELEFONO");
        sql.SELECT("TELEFONO");
        sql.SELECT("PUBLICARTELEFONOMOVIL");
        sql.SELECT("TELEFONOMOVIL");
        sql.SELECT("PUBLICARFAX");
        sql.SELECT("FAX");
        sql.SELECT("PUBLICAREMAIL");
        sql.SELECT("EMAIL");
        sql.SELECT("IDECOMCENSOSITUACIONEJER");
        sql.SELECT("FECHASITUACION");
        sql.SELECT("FECHAMODIFRECIBIDA");
        sql.SELECT("RESIDENTE");
        sql.SELECT("IDESTADOCOLEGIADO");
        sql.SELECT("FECHAMODIFICACION");
        sql.SELECT("USUMODIFICACION");
        sql.SELECT("MEDIADOR");
        sql.SELECT("HASH");
        sql.SELECT("FECHAINICIO");
        sql.SELECT("IDINSTITUCIONRESIDENCIA");
        sql.SELECT("ANIOLICENCIATURA");
        sql.FROM("ECOM_CEN_DATOS");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.ECOM_CEN_DATOS
     *
     * @mbg.generated Thu Dec 13 14:07:22 CET 2018
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        EcomCenDatos record = (EcomCenDatos) parameter.get("record");
        EcomCenDatosExample example = (EcomCenDatosExample) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("ECOM_CEN_DATOS");
        
        if (record.getIdcensodatos() != null) {
            sql.SET("IDCENSODATOS = #{record.idcensodatos,jdbcType=DECIMAL}");
        }
        
        if (record.getPublicarcolegiado() != null) {
            sql.SET("PUBLICARCOLEGIADO = #{record.publicarcolegiado,jdbcType=DECIMAL}");
        }
        
        if (record.getNcolegiado() != null) {
            sql.SET("NCOLEGIADO = #{record.ncolegiado,jdbcType=VARCHAR}");
        }
        
        if (record.getNumsolicitudcolegiacion() != null) {
            sql.SET("NUMSOLICITUDCOLEGIACION = #{record.numsolicitudcolegiacion,jdbcType=VARCHAR}");
        }
        
        if (record.getNombre() != null) {
            sql.SET("NOMBRE = #{record.nombre,jdbcType=VARCHAR}");
        }
        
        if (record.getApellido1() != null) {
            sql.SET("APELLIDO1 = #{record.apellido1,jdbcType=VARCHAR}");
        }
        
        if (record.getApellido2() != null) {
            sql.SET("APELLIDO2 = #{record.apellido2,jdbcType=VARCHAR}");
        }
        
        if (record.getSexo() != null) {
            sql.SET("SEXO = #{record.sexo,jdbcType=CHAR}");
        }
        
        if (record.getFechanacimiento() != null) {
            sql.SET("FECHANACIMIENTO = #{record.fechanacimiento,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIdcensotipoidentificacion() != null) {
            sql.SET("IDCENSOTIPOIDENTIFICACION = #{record.idcensotipoidentificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getNumdocumento() != null) {
            sql.SET("NUMDOCUMENTO = #{record.numdocumento,jdbcType=VARCHAR}");
        }
        
        if (record.getIdcensodireccion() != null) {
            sql.SET("IDCENSODIRECCION = #{record.idcensodireccion,jdbcType=DECIMAL}");
        }
        
        if (record.getPublicartelefono() != null) {
            sql.SET("PUBLICARTELEFONO = #{record.publicartelefono,jdbcType=DECIMAL}");
        }
        
        if (record.getTelefono() != null) {
            sql.SET("TELEFONO = #{record.telefono,jdbcType=VARCHAR}");
        }
        
        if (record.getPublicartelefonomovil() != null) {
            sql.SET("PUBLICARTELEFONOMOVIL = #{record.publicartelefonomovil,jdbcType=DECIMAL}");
        }
        
        if (record.getTelefonomovil() != null) {
            sql.SET("TELEFONOMOVIL = #{record.telefonomovil,jdbcType=VARCHAR}");
        }
        
        if (record.getPublicarfax() != null) {
            sql.SET("PUBLICARFAX = #{record.publicarfax,jdbcType=DECIMAL}");
        }
        
        if (record.getFax() != null) {
            sql.SET("FAX = #{record.fax,jdbcType=VARCHAR}");
        }
        
        if (record.getPublicaremail() != null) {
            sql.SET("PUBLICAREMAIL = #{record.publicaremail,jdbcType=DECIMAL}");
        }
        
        if (record.getEmail() != null) {
            sql.SET("EMAIL = #{record.email,jdbcType=VARCHAR}");
        }
        
        if (record.getIdecomcensosituacionejer() != null) {
            sql.SET("IDECOMCENSOSITUACIONEJER = #{record.idecomcensosituacionejer,jdbcType=DECIMAL}");
        }
        
        if (record.getFechasituacion() != null) {
            sql.SET("FECHASITUACION = #{record.fechasituacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getFechamodifrecibida() != null) {
            sql.SET("FECHAMODIFRECIBIDA = #{record.fechamodifrecibida,jdbcType=TIMESTAMP}");
        }
        
        if (record.getResidente() != null) {
            sql.SET("RESIDENTE = #{record.residente,jdbcType=DECIMAL}");
        }
        
        if (record.getIdestadocolegiado() != null) {
            sql.SET("IDESTADOCOLEGIADO = #{record.idestadocolegiado,jdbcType=DECIMAL}");
        }
        
        if (record.getFechamodificacion() != null) {
            sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUsumodificacion() != null) {
            sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getMediador() != null) {
            sql.SET("MEDIADOR = #{record.mediador,jdbcType=DECIMAL}");
        }
        
        if (record.getHash() != null) {
            sql.SET("HASH = #{record.hash,jdbcType=VARCHAR}");
        }
        
        if (record.getFechainicio() != null) {
            sql.SET("FECHAINICIO = #{record.fechainicio,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIdinstitucionresidencia() != null) {
            sql.SET("IDINSTITUCIONRESIDENCIA = #{record.idinstitucionresidencia,jdbcType=DECIMAL}");
        }
        
        if (record.getAniolicenciatura() != null) {
            sql.SET("ANIOLICENCIATURA = #{record.aniolicenciatura,jdbcType=VARCHAR}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.ECOM_CEN_DATOS
     *
     * @mbg.generated Thu Dec 13 14:07:22 CET 2018
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("ECOM_CEN_DATOS");
        
        sql.SET("IDCENSODATOS = #{record.idcensodatos,jdbcType=DECIMAL}");
        sql.SET("PUBLICARCOLEGIADO = #{record.publicarcolegiado,jdbcType=DECIMAL}");
        sql.SET("NCOLEGIADO = #{record.ncolegiado,jdbcType=VARCHAR}");
        sql.SET("NUMSOLICITUDCOLEGIACION = #{record.numsolicitudcolegiacion,jdbcType=VARCHAR}");
        sql.SET("NOMBRE = #{record.nombre,jdbcType=VARCHAR}");
        sql.SET("APELLIDO1 = #{record.apellido1,jdbcType=VARCHAR}");
        sql.SET("APELLIDO2 = #{record.apellido2,jdbcType=VARCHAR}");
        sql.SET("SEXO = #{record.sexo,jdbcType=CHAR}");
        sql.SET("FECHANACIMIENTO = #{record.fechanacimiento,jdbcType=TIMESTAMP}");
        sql.SET("IDCENSOTIPOIDENTIFICACION = #{record.idcensotipoidentificacion,jdbcType=DECIMAL}");
        sql.SET("NUMDOCUMENTO = #{record.numdocumento,jdbcType=VARCHAR}");
        sql.SET("IDCENSODIRECCION = #{record.idcensodireccion,jdbcType=DECIMAL}");
        sql.SET("PUBLICARTELEFONO = #{record.publicartelefono,jdbcType=DECIMAL}");
        sql.SET("TELEFONO = #{record.telefono,jdbcType=VARCHAR}");
        sql.SET("PUBLICARTELEFONOMOVIL = #{record.publicartelefonomovil,jdbcType=DECIMAL}");
        sql.SET("TELEFONOMOVIL = #{record.telefonomovil,jdbcType=VARCHAR}");
        sql.SET("PUBLICARFAX = #{record.publicarfax,jdbcType=DECIMAL}");
        sql.SET("FAX = #{record.fax,jdbcType=VARCHAR}");
        sql.SET("PUBLICAREMAIL = #{record.publicaremail,jdbcType=DECIMAL}");
        sql.SET("EMAIL = #{record.email,jdbcType=VARCHAR}");
        sql.SET("IDECOMCENSOSITUACIONEJER = #{record.idecomcensosituacionejer,jdbcType=DECIMAL}");
        sql.SET("FECHASITUACION = #{record.fechasituacion,jdbcType=TIMESTAMP}");
        sql.SET("FECHAMODIFRECIBIDA = #{record.fechamodifrecibida,jdbcType=TIMESTAMP}");
        sql.SET("RESIDENTE = #{record.residente,jdbcType=DECIMAL}");
        sql.SET("IDESTADOCOLEGIADO = #{record.idestadocolegiado,jdbcType=DECIMAL}");
        sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=TIMESTAMP}");
        sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
        sql.SET("MEDIADOR = #{record.mediador,jdbcType=DECIMAL}");
        sql.SET("HASH = #{record.hash,jdbcType=VARCHAR}");
        sql.SET("FECHAINICIO = #{record.fechainicio,jdbcType=TIMESTAMP}");
        sql.SET("IDINSTITUCIONRESIDENCIA = #{record.idinstitucionresidencia,jdbcType=DECIMAL}");
        sql.SET("ANIOLICENCIATURA = #{record.aniolicenciatura,jdbcType=VARCHAR}");
        
        EcomCenDatosExample example = (EcomCenDatosExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.ECOM_CEN_DATOS
     *
     * @mbg.generated Thu Dec 13 14:07:22 CET 2018
     */
    public String updateByPrimaryKeySelective(EcomCenDatos record) {
        SQL sql = new SQL();
        sql.UPDATE("ECOM_CEN_DATOS");
        
        if (record.getPublicarcolegiado() != null) {
            sql.SET("PUBLICARCOLEGIADO = #{publicarcolegiado,jdbcType=DECIMAL}");
        }
        
        if (record.getNcolegiado() != null) {
            sql.SET("NCOLEGIADO = #{ncolegiado,jdbcType=VARCHAR}");
        }
        
        if (record.getNumsolicitudcolegiacion() != null) {
            sql.SET("NUMSOLICITUDCOLEGIACION = #{numsolicitudcolegiacion,jdbcType=VARCHAR}");
        }
        
        if (record.getNombre() != null) {
            sql.SET("NOMBRE = #{nombre,jdbcType=VARCHAR}");
        }
        
        if (record.getApellido1() != null) {
            sql.SET("APELLIDO1 = #{apellido1,jdbcType=VARCHAR}");
        }
        
        if (record.getApellido2() != null) {
            sql.SET("APELLIDO2 = #{apellido2,jdbcType=VARCHAR}");
        }
        
        if (record.getSexo() != null) {
            sql.SET("SEXO = #{sexo,jdbcType=CHAR}");
        }
        
        if (record.getFechanacimiento() != null) {
            sql.SET("FECHANACIMIENTO = #{fechanacimiento,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIdcensotipoidentificacion() != null) {
            sql.SET("IDCENSOTIPOIDENTIFICACION = #{idcensotipoidentificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getNumdocumento() != null) {
            sql.SET("NUMDOCUMENTO = #{numdocumento,jdbcType=VARCHAR}");
        }
        
        if (record.getIdcensodireccion() != null) {
            sql.SET("IDCENSODIRECCION = #{idcensodireccion,jdbcType=DECIMAL}");
        }
        
        if (record.getPublicartelefono() != null) {
            sql.SET("PUBLICARTELEFONO = #{publicartelefono,jdbcType=DECIMAL}");
        }
        
        if (record.getTelefono() != null) {
            sql.SET("TELEFONO = #{telefono,jdbcType=VARCHAR}");
        }
        
        if (record.getPublicartelefonomovil() != null) {
            sql.SET("PUBLICARTELEFONOMOVIL = #{publicartelefonomovil,jdbcType=DECIMAL}");
        }
        
        if (record.getTelefonomovil() != null) {
            sql.SET("TELEFONOMOVIL = #{telefonomovil,jdbcType=VARCHAR}");
        }
        
        if (record.getPublicarfax() != null) {
            sql.SET("PUBLICARFAX = #{publicarfax,jdbcType=DECIMAL}");
        }
        
        if (record.getFax() != null) {
            sql.SET("FAX = #{fax,jdbcType=VARCHAR}");
        }
        
        if (record.getPublicaremail() != null) {
            sql.SET("PUBLICAREMAIL = #{publicaremail,jdbcType=DECIMAL}");
        }
        
        if (record.getEmail() != null) {
            sql.SET("EMAIL = #{email,jdbcType=VARCHAR}");
        }
        
        if (record.getIdecomcensosituacionejer() != null) {
            sql.SET("IDECOMCENSOSITUACIONEJER = #{idecomcensosituacionejer,jdbcType=DECIMAL}");
        }
        
        if (record.getFechasituacion() != null) {
            sql.SET("FECHASITUACION = #{fechasituacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getFechamodifrecibida() != null) {
            sql.SET("FECHAMODIFRECIBIDA = #{fechamodifrecibida,jdbcType=TIMESTAMP}");
        }
        
        if (record.getResidente() != null) {
            sql.SET("RESIDENTE = #{residente,jdbcType=DECIMAL}");
        }
        
        if (record.getIdestadocolegiado() != null) {
            sql.SET("IDESTADOCOLEGIADO = #{idestadocolegiado,jdbcType=DECIMAL}");
        }
        
        if (record.getFechamodificacion() != null) {
            sql.SET("FECHAMODIFICACION = #{fechamodificacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUsumodificacion() != null) {
            sql.SET("USUMODIFICACION = #{usumodificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getMediador() != null) {
            sql.SET("MEDIADOR = #{mediador,jdbcType=DECIMAL}");
        }
        
        if (record.getHash() != null) {
            sql.SET("HASH = #{hash,jdbcType=VARCHAR}");
        }
        
        if (record.getFechainicio() != null) {
            sql.SET("FECHAINICIO = #{fechainicio,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIdinstitucionresidencia() != null) {
            sql.SET("IDINSTITUCIONRESIDENCIA = #{idinstitucionresidencia,jdbcType=DECIMAL}");
        }
        
        if (record.getAniolicenciatura() != null) {
            sql.SET("ANIOLICENCIATURA = #{aniolicenciatura,jdbcType=VARCHAR}");
        }
        
        sql.WHERE("IDCENSODATOS = #{idcensodatos,jdbcType=DECIMAL}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.ECOM_CEN_DATOS
     *
     * @mbg.generated Thu Dec 13 14:07:22 CET 2018
     */
    protected void applyWhere(SQL sql, EcomCenDatosExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}