package org.itcgae.siga.db.mappers;

import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;
import org.itcgae.siga.db.entities.FacSeriefacturacion;
import org.itcgae.siga.db.entities.FacSeriefacturacionExample.Criteria;
import org.itcgae.siga.db.entities.FacSeriefacturacionExample.Criterion;
import org.itcgae.siga.db.entities.FacSeriefacturacionExample;

public class FacSeriefacturacionSqlProvider {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_SERIEFACTURACION
     *
     * @mbg.generated Fri Oct 08 14:06:46 CEST 2021
     */
    public String countByExample(FacSeriefacturacionExample example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("FAC_SERIEFACTURACION");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_SERIEFACTURACION
     *
     * @mbg.generated Fri Oct 08 14:06:46 CEST 2021
     */
    public String deleteByExample(FacSeriefacturacionExample example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("FAC_SERIEFACTURACION");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_SERIEFACTURACION
     *
     * @mbg.generated Fri Oct 08 14:06:46 CEST 2021
     */
    public String insertSelective(FacSeriefacturacion record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("FAC_SERIEFACTURACION");
        
        if (record.getIdinstitucion() != null) {
            sql.VALUES("IDINSTITUCION", "#{idinstitucion,jdbcType=DECIMAL}");
        }
        
        if (record.getIdseriefacturacion() != null) {
            sql.VALUES("IDSERIEFACTURACION", "#{idseriefacturacion,jdbcType=DECIMAL}");
        }
        
        if (record.getIdplantilla() != null) {
            sql.VALUES("IDPLANTILLA", "#{idplantilla,jdbcType=DECIMAL}");
        }
        
        if (record.getDescripcion() != null) {
            sql.VALUES("DESCRIPCION", "#{descripcion,jdbcType=VARCHAR}");
        }
        
        if (record.getNombreabreviado() != null) {
            sql.VALUES("NOMBREABREVIADO", "#{nombreabreviado,jdbcType=VARCHAR}");
        }
        
        if (record.getFechamodificacion() != null) {
            sql.VALUES("FECHAMODIFICACION", "#{fechamodificacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUsumodificacion() != null) {
            sql.VALUES("USUMODIFICACION", "#{usumodificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getEnviofacturas() != null) {
            sql.VALUES("ENVIOFACTURAS", "#{enviofacturas,jdbcType=VARCHAR}");
        }
        
        if (record.getGenerarpdf() != null) {
            sql.VALUES("GENERARPDF", "#{generarpdf,jdbcType=VARCHAR}");
        }
        
        if (record.getIdcontador() != null) {
            sql.VALUES("IDCONTADOR", "#{idcontador,jdbcType=VARCHAR}");
        }
        
        if (record.getConfdeudor() != null) {
            sql.VALUES("CONFDEUDOR", "#{confdeudor,jdbcType=VARCHAR}");
        }
        
        if (record.getConfingresos() != null) {
            sql.VALUES("CONFINGRESOS", "#{confingresos,jdbcType=VARCHAR}");
        }
        
        if (record.getCtaingresos() != null) {
            sql.VALUES("CTAINGRESOS", "#{ctaingresos,jdbcType=VARCHAR}");
        }
        
        if (record.getCtaclientes() != null) {
            sql.VALUES("CTACLIENTES", "#{ctaclientes,jdbcType=VARCHAR}");
        }
        
        if (record.getTiposerie() != null) {
            sql.VALUES("TIPOSERIE", "#{tiposerie,jdbcType=VARCHAR}");
        }
        
        if (record.getObservaciones() != null) {
            sql.VALUES("OBSERVACIONES", "#{observaciones,jdbcType=VARCHAR}");
        }
        
        if (record.getIdtipoplantillamail() != null) {
            sql.VALUES("IDTIPOPLANTILLAMAIL", "#{idtipoplantillamail,jdbcType=DECIMAL}");
        }
        
        if (record.getIdtipoenvios() != null) {
            sql.VALUES("IDTIPOENVIOS", "#{idtipoenvios,jdbcType=DECIMAL}");
        }
        
        if (record.getIdseriefacturacionprevia() != null) {
            sql.VALUES("IDSERIEFACTURACIONPREVIA", "#{idseriefacturacionprevia,jdbcType=DECIMAL}");
        }
        
        if (record.getFechabaja() != null) {
            sql.VALUES("FECHABAJA", "#{fechabaja,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIdNombreDescargaFac() != null) {
            sql.VALUES("ID_NOMBRE_DESCARGA_FAC", "#{idNombreDescargaFac,jdbcType=DECIMAL}");
        }
        
        if (record.getTraspasoPlantilla() != null) {
            sql.VALUES("TRASPASO_PLANTILLA", "#{traspasoPlantilla,jdbcType=VARCHAR}");
        }
        
        if (record.getTraspasoCodauditoriaDef() != null) {
            sql.VALUES("TRASPASO_CODAUDITORIA_DEF", "#{traspasoCodauditoriaDef,jdbcType=VARCHAR}");
        }
        
        if (record.getTraspasofacturas() != null) {
            sql.VALUES("TRASPASOFACTURAS", "#{traspasofacturas,jdbcType=VARCHAR}");
        }
        
        if (record.getIdcontadorAbonos() != null) {
            sql.VALUES("IDCONTADOR_ABONOS", "#{idcontadorAbonos,jdbcType=VARCHAR}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_SERIEFACTURACION
     *
     * @mbg.generated Fri Oct 08 14:06:46 CEST 2021
     */
    public String selectByExample(FacSeriefacturacionExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("IDINSTITUCION");
        } else {
            sql.SELECT("IDINSTITUCION");
        }
        sql.SELECT("IDSERIEFACTURACION");
        sql.SELECT("IDPLANTILLA");
        sql.SELECT("DESCRIPCION");
        sql.SELECT("NOMBREABREVIADO");
        sql.SELECT("FECHAMODIFICACION");
        sql.SELECT("USUMODIFICACION");
        sql.SELECT("ENVIOFACTURAS");
        sql.SELECT("GENERARPDF");
        sql.SELECT("IDCONTADOR");
        sql.SELECT("CONFDEUDOR");
        sql.SELECT("CONFINGRESOS");
        sql.SELECT("CTAINGRESOS");
        sql.SELECT("CTACLIENTES");
        sql.SELECT("TIPOSERIE");
        sql.SELECT("OBSERVACIONES");
        sql.SELECT("IDTIPOPLANTILLAMAIL");
        sql.SELECT("IDTIPOENVIOS");
        sql.SELECT("IDSERIEFACTURACIONPREVIA");
        sql.SELECT("FECHABAJA");
        sql.SELECT("ID_NOMBRE_DESCARGA_FAC");
        sql.SELECT("TRASPASO_PLANTILLA");
        sql.SELECT("TRASPASO_CODAUDITORIA_DEF");
        sql.SELECT("TRASPASOFACTURAS");
        sql.SELECT("IDCONTADOR_ABONOS");
        sql.FROM("FAC_SERIEFACTURACION");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_SERIEFACTURACION
     *
     * @mbg.generated Fri Oct 08 14:06:46 CEST 2021
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        FacSeriefacturacion record = (FacSeriefacturacion) parameter.get("record");
        FacSeriefacturacionExample example = (FacSeriefacturacionExample) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("FAC_SERIEFACTURACION");
        
        if (record.getIdinstitucion() != null) {
            sql.SET("IDINSTITUCION = #{record.idinstitucion,jdbcType=DECIMAL}");
        }
        
        if (record.getIdseriefacturacion() != null) {
            sql.SET("IDSERIEFACTURACION = #{record.idseriefacturacion,jdbcType=DECIMAL}");
        }
        
        if (record.getIdplantilla() != null) {
            sql.SET("IDPLANTILLA = #{record.idplantilla,jdbcType=DECIMAL}");
        }
        
        if (record.getDescripcion() != null) {
            sql.SET("DESCRIPCION = #{record.descripcion,jdbcType=VARCHAR}");
        }
        
        if (record.getNombreabreviado() != null) {
            sql.SET("NOMBREABREVIADO = #{record.nombreabreviado,jdbcType=VARCHAR}");
        }
        
        if (record.getFechamodificacion() != null) {
            sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUsumodificacion() != null) {
            sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getEnviofacturas() != null) {
            sql.SET("ENVIOFACTURAS = #{record.enviofacturas,jdbcType=VARCHAR}");
        }
        
        if (record.getGenerarpdf() != null) {
            sql.SET("GENERARPDF = #{record.generarpdf,jdbcType=VARCHAR}");
        }
        
        if (record.getIdcontador() != null) {
            sql.SET("IDCONTADOR = #{record.idcontador,jdbcType=VARCHAR}");
        }
        
        if (record.getConfdeudor() != null) {
            sql.SET("CONFDEUDOR = #{record.confdeudor,jdbcType=VARCHAR}");
        }
        
        if (record.getConfingresos() != null) {
            sql.SET("CONFINGRESOS = #{record.confingresos,jdbcType=VARCHAR}");
        }
        
        if (record.getCtaingresos() != null) {
            sql.SET("CTAINGRESOS = #{record.ctaingresos,jdbcType=VARCHAR}");
        }
        
        if (record.getCtaclientes() != null) {
            sql.SET("CTACLIENTES = #{record.ctaclientes,jdbcType=VARCHAR}");
        }
        
        if (record.getTiposerie() != null) {
            sql.SET("TIPOSERIE = #{record.tiposerie,jdbcType=VARCHAR}");
        }
        
        if (record.getObservaciones() != null) {
            sql.SET("OBSERVACIONES = #{record.observaciones,jdbcType=VARCHAR}");
        }
        
        if (record.getIdtipoplantillamail() != null) {
            sql.SET("IDTIPOPLANTILLAMAIL = #{record.idtipoplantillamail,jdbcType=DECIMAL}");
        }
        
        if (record.getIdtipoenvios() != null) {
            sql.SET("IDTIPOENVIOS = #{record.idtipoenvios,jdbcType=DECIMAL}");
        }
        
        if (record.getIdseriefacturacionprevia() != null) {
            sql.SET("IDSERIEFACTURACIONPREVIA = #{record.idseriefacturacionprevia,jdbcType=DECIMAL}");
        }
        
        if (record.getFechabaja() != null) {
            sql.SET("FECHABAJA = #{record.fechabaja,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIdNombreDescargaFac() != null) {
            sql.SET("ID_NOMBRE_DESCARGA_FAC = #{record.idNombreDescargaFac,jdbcType=DECIMAL}");
        }
        
        if (record.getTraspasoPlantilla() != null) {
            sql.SET("TRASPASO_PLANTILLA = #{record.traspasoPlantilla,jdbcType=VARCHAR}");
        }
        
        if (record.getTraspasoCodauditoriaDef() != null) {
            sql.SET("TRASPASO_CODAUDITORIA_DEF = #{record.traspasoCodauditoriaDef,jdbcType=VARCHAR}");
        }
        
        if (record.getTraspasofacturas() != null) {
            sql.SET("TRASPASOFACTURAS = #{record.traspasofacturas,jdbcType=VARCHAR}");
        }
        
        if (record.getIdcontadorAbonos() != null) {
            sql.SET("IDCONTADOR_ABONOS = #{record.idcontadorAbonos,jdbcType=VARCHAR}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_SERIEFACTURACION
     *
     * @mbg.generated Fri Oct 08 14:06:46 CEST 2021
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("FAC_SERIEFACTURACION");
        
        sql.SET("IDINSTITUCION = #{record.idinstitucion,jdbcType=DECIMAL}");
        sql.SET("IDSERIEFACTURACION = #{record.idseriefacturacion,jdbcType=DECIMAL}");
        sql.SET("IDPLANTILLA = #{record.idplantilla,jdbcType=DECIMAL}");
        sql.SET("DESCRIPCION = #{record.descripcion,jdbcType=VARCHAR}");
        sql.SET("NOMBREABREVIADO = #{record.nombreabreviado,jdbcType=VARCHAR}");
        sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=TIMESTAMP}");
        sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
        sql.SET("ENVIOFACTURAS = #{record.enviofacturas,jdbcType=VARCHAR}");
        sql.SET("GENERARPDF = #{record.generarpdf,jdbcType=VARCHAR}");
        sql.SET("IDCONTADOR = #{record.idcontador,jdbcType=VARCHAR}");
        sql.SET("CONFDEUDOR = #{record.confdeudor,jdbcType=VARCHAR}");
        sql.SET("CONFINGRESOS = #{record.confingresos,jdbcType=VARCHAR}");
        sql.SET("CTAINGRESOS = #{record.ctaingresos,jdbcType=VARCHAR}");
        sql.SET("CTACLIENTES = #{record.ctaclientes,jdbcType=VARCHAR}");
        sql.SET("TIPOSERIE = #{record.tiposerie,jdbcType=VARCHAR}");
        sql.SET("OBSERVACIONES = #{record.observaciones,jdbcType=VARCHAR}");
        sql.SET("IDTIPOPLANTILLAMAIL = #{record.idtipoplantillamail,jdbcType=DECIMAL}");
        sql.SET("IDTIPOENVIOS = #{record.idtipoenvios,jdbcType=DECIMAL}");
        sql.SET("IDSERIEFACTURACIONPREVIA = #{record.idseriefacturacionprevia,jdbcType=DECIMAL}");
        sql.SET("FECHABAJA = #{record.fechabaja,jdbcType=TIMESTAMP}");
        sql.SET("ID_NOMBRE_DESCARGA_FAC = #{record.idNombreDescargaFac,jdbcType=DECIMAL}");
        sql.SET("TRASPASO_PLANTILLA = #{record.traspasoPlantilla,jdbcType=VARCHAR}");
        sql.SET("TRASPASO_CODAUDITORIA_DEF = #{record.traspasoCodauditoriaDef,jdbcType=VARCHAR}");
        sql.SET("TRASPASOFACTURAS = #{record.traspasofacturas,jdbcType=VARCHAR}");
        sql.SET("IDCONTADOR_ABONOS = #{record.idcontadorAbonos,jdbcType=VARCHAR}");
        
        FacSeriefacturacionExample example = (FacSeriefacturacionExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_SERIEFACTURACION
     *
     * @mbg.generated Fri Oct 08 14:06:46 CEST 2021
     */
    public String updateByPrimaryKeySelective(FacSeriefacturacion record) {
        SQL sql = new SQL();
        sql.UPDATE("FAC_SERIEFACTURACION");
        
        if (record.getIdplantilla() != null) {
            sql.SET("IDPLANTILLA = #{idplantilla,jdbcType=DECIMAL}");
        }
        
        if (record.getDescripcion() != null) {
            sql.SET("DESCRIPCION = #{descripcion,jdbcType=VARCHAR}");
        }
        
        if (record.getNombreabreviado() != null) {
            sql.SET("NOMBREABREVIADO = #{nombreabreviado,jdbcType=VARCHAR}");
        }
        
        if (record.getFechamodificacion() != null) {
            sql.SET("FECHAMODIFICACION = #{fechamodificacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUsumodificacion() != null) {
            sql.SET("USUMODIFICACION = #{usumodificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getEnviofacturas() != null) {
            sql.SET("ENVIOFACTURAS = #{enviofacturas,jdbcType=VARCHAR}");
        }
        
        if (record.getGenerarpdf() != null) {
            sql.SET("GENERARPDF = #{generarpdf,jdbcType=VARCHAR}");
        }
        
        if (record.getIdcontador() != null) {
            sql.SET("IDCONTADOR = #{idcontador,jdbcType=VARCHAR}");
        }
        
        if (record.getConfdeudor() != null) {
            sql.SET("CONFDEUDOR = #{confdeudor,jdbcType=VARCHAR}");
        }
        
        if (record.getConfingresos() != null) {
            sql.SET("CONFINGRESOS = #{confingresos,jdbcType=VARCHAR}");
        }
        
        if (record.getCtaingresos() != null) {
            sql.SET("CTAINGRESOS = #{ctaingresos,jdbcType=VARCHAR}");
        }
        
        if (record.getCtaclientes() != null) {
            sql.SET("CTACLIENTES = #{ctaclientes,jdbcType=VARCHAR}");
        }
        
        if (record.getTiposerie() != null) {
            sql.SET("TIPOSERIE = #{tiposerie,jdbcType=VARCHAR}");
        }
        
        if (record.getObservaciones() != null) {
            sql.SET("OBSERVACIONES = #{observaciones,jdbcType=VARCHAR}");
        }
        
        if (record.getIdtipoplantillamail() != null) {
            sql.SET("IDTIPOPLANTILLAMAIL = #{idtipoplantillamail,jdbcType=DECIMAL}");
        }
        
        if (record.getIdtipoenvios() != null) {
            sql.SET("IDTIPOENVIOS = #{idtipoenvios,jdbcType=DECIMAL}");
        }
        
        if (record.getIdseriefacturacionprevia() != null) {
            sql.SET("IDSERIEFACTURACIONPREVIA = #{idseriefacturacionprevia,jdbcType=DECIMAL}");
        }
        
        if (record.getFechabaja() != null) {
            sql.SET("FECHABAJA = #{fechabaja,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIdNombreDescargaFac() != null) {
            sql.SET("ID_NOMBRE_DESCARGA_FAC = #{idNombreDescargaFac,jdbcType=DECIMAL}");
        }
        
        if (record.getTraspasoPlantilla() != null) {
            sql.SET("TRASPASO_PLANTILLA = #{traspasoPlantilla,jdbcType=VARCHAR}");
        }
        
        if (record.getTraspasoCodauditoriaDef() != null) {
            sql.SET("TRASPASO_CODAUDITORIA_DEF = #{traspasoCodauditoriaDef,jdbcType=VARCHAR}");
        }
        
        if (record.getTraspasofacturas() != null) {
            sql.SET("TRASPASOFACTURAS = #{traspasofacturas,jdbcType=VARCHAR}");
        }
        
        if (record.getIdcontadorAbonos() != null) {
            sql.SET("IDCONTADOR_ABONOS = #{idcontadorAbonos,jdbcType=VARCHAR}");
        }
        
        sql.WHERE("IDINSTITUCION = #{idinstitucion,jdbcType=DECIMAL}");
        sql.WHERE("IDSERIEFACTURACION = #{idseriefacturacion,jdbcType=DECIMAL}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_SERIEFACTURACION
     *
     * @mbg.generated Fri Oct 08 14:06:46 CEST 2021
     */
    protected void applyWhere(SQL sql, FacSeriefacturacionExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}