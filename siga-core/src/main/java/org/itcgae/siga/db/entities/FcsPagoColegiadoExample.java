package org.itcgae.siga.db.entities;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class FcsPagoColegiadoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USCGAE.FCS_PAGO_COLEGIADO
     *
     * @mbg.generated Fri Dec 14 13:11:39 CET 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USCGAE.FCS_PAGO_COLEGIADO
     *
     * @mbg.generated Fri Dec 14 13:11:39 CET 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USCGAE.FCS_PAGO_COLEGIADO
     *
     * @mbg.generated Fri Dec 14 13:11:39 CET 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_PAGO_COLEGIADO
     *
     * @mbg.generated Fri Dec 14 13:11:39 CET 2018
     */
    public FcsPagoColegiadoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_PAGO_COLEGIADO
     *
     * @mbg.generated Fri Dec 14 13:11:39 CET 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_PAGO_COLEGIADO
     *
     * @mbg.generated Fri Dec 14 13:11:39 CET 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_PAGO_COLEGIADO
     *
     * @mbg.generated Fri Dec 14 13:11:39 CET 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_PAGO_COLEGIADO
     *
     * @mbg.generated Fri Dec 14 13:11:39 CET 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_PAGO_COLEGIADO
     *
     * @mbg.generated Fri Dec 14 13:11:39 CET 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_PAGO_COLEGIADO
     *
     * @mbg.generated Fri Dec 14 13:11:39 CET 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_PAGO_COLEGIADO
     *
     * @mbg.generated Fri Dec 14 13:11:39 CET 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_PAGO_COLEGIADO
     *
     * @mbg.generated Fri Dec 14 13:11:39 CET 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_PAGO_COLEGIADO
     *
     * @mbg.generated Fri Dec 14 13:11:39 CET 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_PAGO_COLEGIADO
     *
     * @mbg.generated Fri Dec 14 13:11:39 CET 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE.FCS_PAGO_COLEGIADO
     *
     * @mbg.generated Fri Dec 14 13:11:39 CET 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdinstitucionIsNull() {
            addCriterion("IDINSTITUCION is null");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionIsNotNull() {
            addCriterion("IDINSTITUCION is not null");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionEqualTo(Short value) {
            addCriterion("IDINSTITUCION =", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionNotEqualTo(Short value) {
            addCriterion("IDINSTITUCION <>", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionGreaterThan(Short value) {
            addCriterion("IDINSTITUCION >", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionGreaterThanOrEqualTo(Short value) {
            addCriterion("IDINSTITUCION >=", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionLessThan(Short value) {
            addCriterion("IDINSTITUCION <", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionLessThanOrEqualTo(Short value) {
            addCriterion("IDINSTITUCION <=", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionIn(List<Short> values) {
            addCriterion("IDINSTITUCION in", values, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionNotIn(List<Short> values) {
            addCriterion("IDINSTITUCION not in", values, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionBetween(Short value1, Short value2) {
            addCriterion("IDINSTITUCION between", value1, value2, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionNotBetween(Short value1, Short value2) {
            addCriterion("IDINSTITUCION not between", value1, value2, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdpagosjgIsNull() {
            addCriterion("IDPAGOSJG is null");
            return (Criteria) this;
        }

        public Criteria andIdpagosjgIsNotNull() {
            addCriterion("IDPAGOSJG is not null");
            return (Criteria) this;
        }

        public Criteria andIdpagosjgEqualTo(Integer value) {
            addCriterion("IDPAGOSJG =", value, "idpagosjg");
            return (Criteria) this;
        }

        public Criteria andIdpagosjgNotEqualTo(Integer value) {
            addCriterion("IDPAGOSJG <>", value, "idpagosjg");
            return (Criteria) this;
        }

        public Criteria andIdpagosjgGreaterThan(Integer value) {
            addCriterion("IDPAGOSJG >", value, "idpagosjg");
            return (Criteria) this;
        }

        public Criteria andIdpagosjgGreaterThanOrEqualTo(Integer value) {
            addCriterion("IDPAGOSJG >=", value, "idpagosjg");
            return (Criteria) this;
        }

        public Criteria andIdpagosjgLessThan(Integer value) {
            addCriterion("IDPAGOSJG <", value, "idpagosjg");
            return (Criteria) this;
        }

        public Criteria andIdpagosjgLessThanOrEqualTo(Integer value) {
            addCriterion("IDPAGOSJG <=", value, "idpagosjg");
            return (Criteria) this;
        }

        public Criteria andIdpagosjgIn(List<Integer> values) {
            addCriterion("IDPAGOSJG in", values, "idpagosjg");
            return (Criteria) this;
        }

        public Criteria andIdpagosjgNotIn(List<Integer> values) {
            addCriterion("IDPAGOSJG not in", values, "idpagosjg");
            return (Criteria) this;
        }

        public Criteria andIdpagosjgBetween(Integer value1, Integer value2) {
            addCriterion("IDPAGOSJG between", value1, value2, "idpagosjg");
            return (Criteria) this;
        }

        public Criteria andIdpagosjgNotBetween(Integer value1, Integer value2) {
            addCriterion("IDPAGOSJG not between", value1, value2, "idpagosjg");
            return (Criteria) this;
        }

        public Criteria andIdperorigenIsNull() {
            addCriterion("IDPERORIGEN is null");
            return (Criteria) this;
        }

        public Criteria andIdperorigenIsNotNull() {
            addCriterion("IDPERORIGEN is not null");
            return (Criteria) this;
        }

        public Criteria andIdperorigenEqualTo(Long value) {
            addCriterion("IDPERORIGEN =", value, "idperorigen");
            return (Criteria) this;
        }

        public Criteria andIdperorigenNotEqualTo(Long value) {
            addCriterion("IDPERORIGEN <>", value, "idperorigen");
            return (Criteria) this;
        }

        public Criteria andIdperorigenGreaterThan(Long value) {
            addCriterion("IDPERORIGEN >", value, "idperorigen");
            return (Criteria) this;
        }

        public Criteria andIdperorigenGreaterThanOrEqualTo(Long value) {
            addCriterion("IDPERORIGEN >=", value, "idperorigen");
            return (Criteria) this;
        }

        public Criteria andIdperorigenLessThan(Long value) {
            addCriterion("IDPERORIGEN <", value, "idperorigen");
            return (Criteria) this;
        }

        public Criteria andIdperorigenLessThanOrEqualTo(Long value) {
            addCriterion("IDPERORIGEN <=", value, "idperorigen");
            return (Criteria) this;
        }

        public Criteria andIdperorigenIn(List<Long> values) {
            addCriterion("IDPERORIGEN in", values, "idperorigen");
            return (Criteria) this;
        }

        public Criteria andIdperorigenNotIn(List<Long> values) {
            addCriterion("IDPERORIGEN not in", values, "idperorigen");
            return (Criteria) this;
        }

        public Criteria andIdperorigenBetween(Long value1, Long value2) {
            addCriterion("IDPERORIGEN between", value1, value2, "idperorigen");
            return (Criteria) this;
        }

        public Criteria andIdperorigenNotBetween(Long value1, Long value2) {
            addCriterion("IDPERORIGEN not between", value1, value2, "idperorigen");
            return (Criteria) this;
        }

        public Criteria andIdperdestinoIsNull() {
            addCriterion("IDPERDESTINO is null");
            return (Criteria) this;
        }

        public Criteria andIdperdestinoIsNotNull() {
            addCriterion("IDPERDESTINO is not null");
            return (Criteria) this;
        }

        public Criteria andIdperdestinoEqualTo(Long value) {
            addCriterion("IDPERDESTINO =", value, "idperdestino");
            return (Criteria) this;
        }

        public Criteria andIdperdestinoNotEqualTo(Long value) {
            addCriterion("IDPERDESTINO <>", value, "idperdestino");
            return (Criteria) this;
        }

        public Criteria andIdperdestinoGreaterThan(Long value) {
            addCriterion("IDPERDESTINO >", value, "idperdestino");
            return (Criteria) this;
        }

        public Criteria andIdperdestinoGreaterThanOrEqualTo(Long value) {
            addCriterion("IDPERDESTINO >=", value, "idperdestino");
            return (Criteria) this;
        }

        public Criteria andIdperdestinoLessThan(Long value) {
            addCriterion("IDPERDESTINO <", value, "idperdestino");
            return (Criteria) this;
        }

        public Criteria andIdperdestinoLessThanOrEqualTo(Long value) {
            addCriterion("IDPERDESTINO <=", value, "idperdestino");
            return (Criteria) this;
        }

        public Criteria andIdperdestinoIn(List<Long> values) {
            addCriterion("IDPERDESTINO in", values, "idperdestino");
            return (Criteria) this;
        }

        public Criteria andIdperdestinoNotIn(List<Long> values) {
            addCriterion("IDPERDESTINO not in", values, "idperdestino");
            return (Criteria) this;
        }

        public Criteria andIdperdestinoBetween(Long value1, Long value2) {
            addCriterion("IDPERDESTINO between", value1, value2, "idperdestino");
            return (Criteria) this;
        }

        public Criteria andIdperdestinoNotBetween(Long value1, Long value2) {
            addCriterion("IDPERDESTINO not between", value1, value2, "idperdestino");
            return (Criteria) this;
        }

        public Criteria andImpoficioIsNull() {
            addCriterion("IMPOFICIO is null");
            return (Criteria) this;
        }

        public Criteria andImpoficioIsNotNull() {
            addCriterion("IMPOFICIO is not null");
            return (Criteria) this;
        }

        public Criteria andImpoficioEqualTo(BigDecimal value) {
            addCriterion("IMPOFICIO =", value, "impoficio");
            return (Criteria) this;
        }

        public Criteria andImpoficioNotEqualTo(BigDecimal value) {
            addCriterion("IMPOFICIO <>", value, "impoficio");
            return (Criteria) this;
        }

        public Criteria andImpoficioGreaterThan(BigDecimal value) {
            addCriterion("IMPOFICIO >", value, "impoficio");
            return (Criteria) this;
        }

        public Criteria andImpoficioGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("IMPOFICIO >=", value, "impoficio");
            return (Criteria) this;
        }

        public Criteria andImpoficioLessThan(BigDecimal value) {
            addCriterion("IMPOFICIO <", value, "impoficio");
            return (Criteria) this;
        }

        public Criteria andImpoficioLessThanOrEqualTo(BigDecimal value) {
            addCriterion("IMPOFICIO <=", value, "impoficio");
            return (Criteria) this;
        }

        public Criteria andImpoficioIn(List<BigDecimal> values) {
            addCriterion("IMPOFICIO in", values, "impoficio");
            return (Criteria) this;
        }

        public Criteria andImpoficioNotIn(List<BigDecimal> values) {
            addCriterion("IMPOFICIO not in", values, "impoficio");
            return (Criteria) this;
        }

        public Criteria andImpoficioBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("IMPOFICIO between", value1, value2, "impoficio");
            return (Criteria) this;
        }

        public Criteria andImpoficioNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("IMPOFICIO not between", value1, value2, "impoficio");
            return (Criteria) this;
        }

        public Criteria andImpasistenciaIsNull() {
            addCriterion("IMPASISTENCIA is null");
            return (Criteria) this;
        }

        public Criteria andImpasistenciaIsNotNull() {
            addCriterion("IMPASISTENCIA is not null");
            return (Criteria) this;
        }

        public Criteria andImpasistenciaEqualTo(BigDecimal value) {
            addCriterion("IMPASISTENCIA =", value, "impasistencia");
            return (Criteria) this;
        }

        public Criteria andImpasistenciaNotEqualTo(BigDecimal value) {
            addCriterion("IMPASISTENCIA <>", value, "impasistencia");
            return (Criteria) this;
        }

        public Criteria andImpasistenciaGreaterThan(BigDecimal value) {
            addCriterion("IMPASISTENCIA >", value, "impasistencia");
            return (Criteria) this;
        }

        public Criteria andImpasistenciaGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("IMPASISTENCIA >=", value, "impasistencia");
            return (Criteria) this;
        }

        public Criteria andImpasistenciaLessThan(BigDecimal value) {
            addCriterion("IMPASISTENCIA <", value, "impasistencia");
            return (Criteria) this;
        }

        public Criteria andImpasistenciaLessThanOrEqualTo(BigDecimal value) {
            addCriterion("IMPASISTENCIA <=", value, "impasistencia");
            return (Criteria) this;
        }

        public Criteria andImpasistenciaIn(List<BigDecimal> values) {
            addCriterion("IMPASISTENCIA in", values, "impasistencia");
            return (Criteria) this;
        }

        public Criteria andImpasistenciaNotIn(List<BigDecimal> values) {
            addCriterion("IMPASISTENCIA not in", values, "impasistencia");
            return (Criteria) this;
        }

        public Criteria andImpasistenciaBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("IMPASISTENCIA between", value1, value2, "impasistencia");
            return (Criteria) this;
        }

        public Criteria andImpasistenciaNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("IMPASISTENCIA not between", value1, value2, "impasistencia");
            return (Criteria) this;
        }

        public Criteria andImpsojIsNull() {
            addCriterion("IMPSOJ is null");
            return (Criteria) this;
        }

        public Criteria andImpsojIsNotNull() {
            addCriterion("IMPSOJ is not null");
            return (Criteria) this;
        }

        public Criteria andImpsojEqualTo(BigDecimal value) {
            addCriterion("IMPSOJ =", value, "impsoj");
            return (Criteria) this;
        }

        public Criteria andImpsojNotEqualTo(BigDecimal value) {
            addCriterion("IMPSOJ <>", value, "impsoj");
            return (Criteria) this;
        }

        public Criteria andImpsojGreaterThan(BigDecimal value) {
            addCriterion("IMPSOJ >", value, "impsoj");
            return (Criteria) this;
        }

        public Criteria andImpsojGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("IMPSOJ >=", value, "impsoj");
            return (Criteria) this;
        }

        public Criteria andImpsojLessThan(BigDecimal value) {
            addCriterion("IMPSOJ <", value, "impsoj");
            return (Criteria) this;
        }

        public Criteria andImpsojLessThanOrEqualTo(BigDecimal value) {
            addCriterion("IMPSOJ <=", value, "impsoj");
            return (Criteria) this;
        }

        public Criteria andImpsojIn(List<BigDecimal> values) {
            addCriterion("IMPSOJ in", values, "impsoj");
            return (Criteria) this;
        }

        public Criteria andImpsojNotIn(List<BigDecimal> values) {
            addCriterion("IMPSOJ not in", values, "impsoj");
            return (Criteria) this;
        }

        public Criteria andImpsojBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("IMPSOJ between", value1, value2, "impsoj");
            return (Criteria) this;
        }

        public Criteria andImpsojNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("IMPSOJ not between", value1, value2, "impsoj");
            return (Criteria) this;
        }

        public Criteria andImpejgIsNull() {
            addCriterion("IMPEJG is null");
            return (Criteria) this;
        }

        public Criteria andImpejgIsNotNull() {
            addCriterion("IMPEJG is not null");
            return (Criteria) this;
        }

        public Criteria andImpejgEqualTo(BigDecimal value) {
            addCriterion("IMPEJG =", value, "impejg");
            return (Criteria) this;
        }

        public Criteria andImpejgNotEqualTo(BigDecimal value) {
            addCriterion("IMPEJG <>", value, "impejg");
            return (Criteria) this;
        }

        public Criteria andImpejgGreaterThan(BigDecimal value) {
            addCriterion("IMPEJG >", value, "impejg");
            return (Criteria) this;
        }

        public Criteria andImpejgGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("IMPEJG >=", value, "impejg");
            return (Criteria) this;
        }

        public Criteria andImpejgLessThan(BigDecimal value) {
            addCriterion("IMPEJG <", value, "impejg");
            return (Criteria) this;
        }

        public Criteria andImpejgLessThanOrEqualTo(BigDecimal value) {
            addCriterion("IMPEJG <=", value, "impejg");
            return (Criteria) this;
        }

        public Criteria andImpejgIn(List<BigDecimal> values) {
            addCriterion("IMPEJG in", values, "impejg");
            return (Criteria) this;
        }

        public Criteria andImpejgNotIn(List<BigDecimal> values) {
            addCriterion("IMPEJG not in", values, "impejg");
            return (Criteria) this;
        }

        public Criteria andImpejgBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("IMPEJG between", value1, value2, "impejg");
            return (Criteria) this;
        }

        public Criteria andImpejgNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("IMPEJG not between", value1, value2, "impejg");
            return (Criteria) this;
        }

        public Criteria andImpmovvarIsNull() {
            addCriterion("IMPMOVVAR is null");
            return (Criteria) this;
        }

        public Criteria andImpmovvarIsNotNull() {
            addCriterion("IMPMOVVAR is not null");
            return (Criteria) this;
        }

        public Criteria andImpmovvarEqualTo(BigDecimal value) {
            addCriterion("IMPMOVVAR =", value, "impmovvar");
            return (Criteria) this;
        }

        public Criteria andImpmovvarNotEqualTo(BigDecimal value) {
            addCriterion("IMPMOVVAR <>", value, "impmovvar");
            return (Criteria) this;
        }

        public Criteria andImpmovvarGreaterThan(BigDecimal value) {
            addCriterion("IMPMOVVAR >", value, "impmovvar");
            return (Criteria) this;
        }

        public Criteria andImpmovvarGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("IMPMOVVAR >=", value, "impmovvar");
            return (Criteria) this;
        }

        public Criteria andImpmovvarLessThan(BigDecimal value) {
            addCriterion("IMPMOVVAR <", value, "impmovvar");
            return (Criteria) this;
        }

        public Criteria andImpmovvarLessThanOrEqualTo(BigDecimal value) {
            addCriterion("IMPMOVVAR <=", value, "impmovvar");
            return (Criteria) this;
        }

        public Criteria andImpmovvarIn(List<BigDecimal> values) {
            addCriterion("IMPMOVVAR in", values, "impmovvar");
            return (Criteria) this;
        }

        public Criteria andImpmovvarNotIn(List<BigDecimal> values) {
            addCriterion("IMPMOVVAR not in", values, "impmovvar");
            return (Criteria) this;
        }

        public Criteria andImpmovvarBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("IMPMOVVAR between", value1, value2, "impmovvar");
            return (Criteria) this;
        }

        public Criteria andImpmovvarNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("IMPMOVVAR not between", value1, value2, "impmovvar");
            return (Criteria) this;
        }

        public Criteria andImpirpfIsNull() {
            addCriterion("IMPIRPF is null");
            return (Criteria) this;
        }

        public Criteria andImpirpfIsNotNull() {
            addCriterion("IMPIRPF is not null");
            return (Criteria) this;
        }

        public Criteria andImpirpfEqualTo(BigDecimal value) {
            addCriterion("IMPIRPF =", value, "impirpf");
            return (Criteria) this;
        }

        public Criteria andImpirpfNotEqualTo(BigDecimal value) {
            addCriterion("IMPIRPF <>", value, "impirpf");
            return (Criteria) this;
        }

        public Criteria andImpirpfGreaterThan(BigDecimal value) {
            addCriterion("IMPIRPF >", value, "impirpf");
            return (Criteria) this;
        }

        public Criteria andImpirpfGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("IMPIRPF >=", value, "impirpf");
            return (Criteria) this;
        }

        public Criteria andImpirpfLessThan(BigDecimal value) {
            addCriterion("IMPIRPF <", value, "impirpf");
            return (Criteria) this;
        }

        public Criteria andImpirpfLessThanOrEqualTo(BigDecimal value) {
            addCriterion("IMPIRPF <=", value, "impirpf");
            return (Criteria) this;
        }

        public Criteria andImpirpfIn(List<BigDecimal> values) {
            addCriterion("IMPIRPF in", values, "impirpf");
            return (Criteria) this;
        }

        public Criteria andImpirpfNotIn(List<BigDecimal> values) {
            addCriterion("IMPIRPF not in", values, "impirpf");
            return (Criteria) this;
        }

        public Criteria andImpirpfBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("IMPIRPF between", value1, value2, "impirpf");
            return (Criteria) this;
        }

        public Criteria andImpirpfNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("IMPIRPF not between", value1, value2, "impirpf");
            return (Criteria) this;
        }

        public Criteria andImpretIsNull() {
            addCriterion("IMPRET is null");
            return (Criteria) this;
        }

        public Criteria andImpretIsNotNull() {
            addCriterion("IMPRET is not null");
            return (Criteria) this;
        }

        public Criteria andImpretEqualTo(BigDecimal value) {
            addCriterion("IMPRET =", value, "impret");
            return (Criteria) this;
        }

        public Criteria andImpretNotEqualTo(BigDecimal value) {
            addCriterion("IMPRET <>", value, "impret");
            return (Criteria) this;
        }

        public Criteria andImpretGreaterThan(BigDecimal value) {
            addCriterion("IMPRET >", value, "impret");
            return (Criteria) this;
        }

        public Criteria andImpretGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("IMPRET >=", value, "impret");
            return (Criteria) this;
        }

        public Criteria andImpretLessThan(BigDecimal value) {
            addCriterion("IMPRET <", value, "impret");
            return (Criteria) this;
        }

        public Criteria andImpretLessThanOrEqualTo(BigDecimal value) {
            addCriterion("IMPRET <=", value, "impret");
            return (Criteria) this;
        }

        public Criteria andImpretIn(List<BigDecimal> values) {
            addCriterion("IMPRET in", values, "impret");
            return (Criteria) this;
        }

        public Criteria andImpretNotIn(List<BigDecimal> values) {
            addCriterion("IMPRET not in", values, "impret");
            return (Criteria) this;
        }

        public Criteria andImpretBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("IMPRET between", value1, value2, "impret");
            return (Criteria) this;
        }

        public Criteria andImpretNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("IMPRET not between", value1, value2, "impret");
            return (Criteria) this;
        }

        public Criteria andIdcuentaIsNull() {
            addCriterion("IDCUENTA is null");
            return (Criteria) this;
        }

        public Criteria andIdcuentaIsNotNull() {
            addCriterion("IDCUENTA is not null");
            return (Criteria) this;
        }

        public Criteria andIdcuentaEqualTo(Short value) {
            addCriterion("IDCUENTA =", value, "idcuenta");
            return (Criteria) this;
        }

        public Criteria andIdcuentaNotEqualTo(Short value) {
            addCriterion("IDCUENTA <>", value, "idcuenta");
            return (Criteria) this;
        }

        public Criteria andIdcuentaGreaterThan(Short value) {
            addCriterion("IDCUENTA >", value, "idcuenta");
            return (Criteria) this;
        }

        public Criteria andIdcuentaGreaterThanOrEqualTo(Short value) {
            addCriterion("IDCUENTA >=", value, "idcuenta");
            return (Criteria) this;
        }

        public Criteria andIdcuentaLessThan(Short value) {
            addCriterion("IDCUENTA <", value, "idcuenta");
            return (Criteria) this;
        }

        public Criteria andIdcuentaLessThanOrEqualTo(Short value) {
            addCriterion("IDCUENTA <=", value, "idcuenta");
            return (Criteria) this;
        }

        public Criteria andIdcuentaIn(List<Short> values) {
            addCriterion("IDCUENTA in", values, "idcuenta");
            return (Criteria) this;
        }

        public Criteria andIdcuentaNotIn(List<Short> values) {
            addCriterion("IDCUENTA not in", values, "idcuenta");
            return (Criteria) this;
        }

        public Criteria andIdcuentaBetween(Short value1, Short value2) {
            addCriterion("IDCUENTA between", value1, value2, "idcuenta");
            return (Criteria) this;
        }

        public Criteria andIdcuentaNotBetween(Short value1, Short value2) {
            addCriterion("IDCUENTA not between", value1, value2, "idcuenta");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionIsNull() {
            addCriterion("FECHAMODIFICACION is null");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionIsNotNull() {
            addCriterion("FECHAMODIFICACION is not null");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION =", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionNotEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION <>", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionGreaterThan(Date value) {
            addCriterion("FECHAMODIFICACION >", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionGreaterThanOrEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION >=", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionLessThan(Date value) {
            addCriterion("FECHAMODIFICACION <", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionLessThanOrEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION <=", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionIn(List<Date> values) {
            addCriterion("FECHAMODIFICACION in", values, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionNotIn(List<Date> values) {
            addCriterion("FECHAMODIFICACION not in", values, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionBetween(Date value1, Date value2) {
            addCriterion("FECHAMODIFICACION between", value1, value2, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionNotBetween(Date value1, Date value2) {
            addCriterion("FECHAMODIFICACION not between", value1, value2, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionIsNull() {
            addCriterion("USUMODIFICACION is null");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionIsNotNull() {
            addCriterion("USUMODIFICACION is not null");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionEqualTo(Integer value) {
            addCriterion("USUMODIFICACION =", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionNotEqualTo(Integer value) {
            addCriterion("USUMODIFICACION <>", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionGreaterThan(Integer value) {
            addCriterion("USUMODIFICACION >", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionGreaterThanOrEqualTo(Integer value) {
            addCriterion("USUMODIFICACION >=", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionLessThan(Integer value) {
            addCriterion("USUMODIFICACION <", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionLessThanOrEqualTo(Integer value) {
            addCriterion("USUMODIFICACION <=", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionIn(List<Integer> values) {
            addCriterion("USUMODIFICACION in", values, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionNotIn(List<Integer> values) {
            addCriterion("USUMODIFICACION not in", values, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionBetween(Integer value1, Integer value2) {
            addCriterion("USUMODIFICACION between", value1, value2, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionNotBetween(Integer value1, Integer value2) {
            addCriterion("USUMODIFICACION not between", value1, value2, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andPorcentajeirpfIsNull() {
            addCriterion("PORCENTAJEIRPF is null");
            return (Criteria) this;
        }

        public Criteria andPorcentajeirpfIsNotNull() {
            addCriterion("PORCENTAJEIRPF is not null");
            return (Criteria) this;
        }

        public Criteria andPorcentajeirpfEqualTo(BigDecimal value) {
            addCriterion("PORCENTAJEIRPF =", value, "porcentajeirpf");
            return (Criteria) this;
        }

        public Criteria andPorcentajeirpfNotEqualTo(BigDecimal value) {
            addCriterion("PORCENTAJEIRPF <>", value, "porcentajeirpf");
            return (Criteria) this;
        }

        public Criteria andPorcentajeirpfGreaterThan(BigDecimal value) {
            addCriterion("PORCENTAJEIRPF >", value, "porcentajeirpf");
            return (Criteria) this;
        }

        public Criteria andPorcentajeirpfGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("PORCENTAJEIRPF >=", value, "porcentajeirpf");
            return (Criteria) this;
        }

        public Criteria andPorcentajeirpfLessThan(BigDecimal value) {
            addCriterion("PORCENTAJEIRPF <", value, "porcentajeirpf");
            return (Criteria) this;
        }

        public Criteria andPorcentajeirpfLessThanOrEqualTo(BigDecimal value) {
            addCriterion("PORCENTAJEIRPF <=", value, "porcentajeirpf");
            return (Criteria) this;
        }

        public Criteria andPorcentajeirpfIn(List<BigDecimal> values) {
            addCriterion("PORCENTAJEIRPF in", values, "porcentajeirpf");
            return (Criteria) this;
        }

        public Criteria andPorcentajeirpfNotIn(List<BigDecimal> values) {
            addCriterion("PORCENTAJEIRPF not in", values, "porcentajeirpf");
            return (Criteria) this;
        }

        public Criteria andPorcentajeirpfBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PORCENTAJEIRPF between", value1, value2, "porcentajeirpf");
            return (Criteria) this;
        }

        public Criteria andPorcentajeirpfNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PORCENTAJEIRPF not between", value1, value2, "porcentajeirpf");
            return (Criteria) this;
        }

        public Criteria andIdretencionIsNull() {
            addCriterion("IDRETENCION is null");
            return (Criteria) this;
        }

        public Criteria andIdretencionIsNotNull() {
            addCriterion("IDRETENCION is not null");
            return (Criteria) this;
        }

        public Criteria andIdretencionEqualTo(Integer value) {
            addCriterion("IDRETENCION =", value, "idretencion");
            return (Criteria) this;
        }

        public Criteria andIdretencionNotEqualTo(Integer value) {
            addCriterion("IDRETENCION <>", value, "idretencion");
            return (Criteria) this;
        }

        public Criteria andIdretencionGreaterThan(Integer value) {
            addCriterion("IDRETENCION >", value, "idretencion");
            return (Criteria) this;
        }

        public Criteria andIdretencionGreaterThanOrEqualTo(Integer value) {
            addCriterion("IDRETENCION >=", value, "idretencion");
            return (Criteria) this;
        }

        public Criteria andIdretencionLessThan(Integer value) {
            addCriterion("IDRETENCION <", value, "idretencion");
            return (Criteria) this;
        }

        public Criteria andIdretencionLessThanOrEqualTo(Integer value) {
            addCriterion("IDRETENCION <=", value, "idretencion");
            return (Criteria) this;
        }

        public Criteria andIdretencionIn(List<Integer> values) {
            addCriterion("IDRETENCION in", values, "idretencion");
            return (Criteria) this;
        }

        public Criteria andIdretencionNotIn(List<Integer> values) {
            addCriterion("IDRETENCION not in", values, "idretencion");
            return (Criteria) this;
        }

        public Criteria andIdretencionBetween(Integer value1, Integer value2) {
            addCriterion("IDRETENCION between", value1, value2, "idretencion");
            return (Criteria) this;
        }

        public Criteria andIdretencionNotBetween(Integer value1, Integer value2) {
            addCriterion("IDRETENCION not between", value1, value2, "idretencion");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE.FCS_PAGO_COLEGIADO
     *
     * @mbg.generated do_not_delete_during_merge Fri Dec 14 13:11:39 CET 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE.FCS_PAGO_COLEGIADO
     *
     * @mbg.generated Fri Dec 14 13:11:39 CET 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}