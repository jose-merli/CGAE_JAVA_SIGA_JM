package org.itcgae.siga.db.mappers;

import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;
import org.itcgae.siga.db.entities.ForCurso;
import org.itcgae.siga.db.entities.ForCursoExample;
import org.itcgae.siga.db.entities.ForCursoExample.Criteria;
import org.itcgae.siga.db.entities.ForCursoExample.Criterion;

public class ForCursoSqlProvider {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.FOR_CURSO
	 * @mbg.generated  Wed Jan 02 18:01:32 CET 2019
	 */
	public String countByExample(ForCursoExample example) {
		SQL sql = new SQL();
		sql.SELECT("count(*)").FROM("FOR_CURSO");
		applyWhere(sql, example, false);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.FOR_CURSO
	 * @mbg.generated  Wed Jan 02 18:01:32 CET 2019
	 */
	public String deleteByExample(ForCursoExample example) {
		SQL sql = new SQL();
		sql.DELETE_FROM("FOR_CURSO");
		applyWhere(sql, example, false);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.FOR_CURSO
	 * @mbg.generated  Wed Jan 02 18:01:32 CET 2019
	 */
	public String insertSelective(ForCurso record) {
		SQL sql = new SQL();
		sql.INSERT_INTO("FOR_CURSO");
		sql.VALUES("IDCURSO", "#{idcurso,jdbcType=DECIMAL}");
		if (record.getIdinstitucion() != null) {
			sql.VALUES("IDINSTITUCION", "#{idinstitucion,jdbcType=DECIMAL}");
		}
		if (record.getCodigocurso() != null) {
			sql.VALUES("CODIGOCURSO", "#{codigocurso,jdbcType=VARCHAR}");
		}
		if (record.getNombrecurso() != null) {
			sql.VALUES("NOMBRECURSO", "#{nombrecurso,jdbcType=VARCHAR}");
		}
		if (record.getPreciodesde() != null) {
			sql.VALUES("PRECIODESDE", "#{preciodesde,jdbcType=DECIMAL}");
		}
		if (record.getPreciohasta() != null) {
			sql.VALUES("PRECIOHASTA", "#{preciohasta,jdbcType=DECIMAL}");
		}
		if (record.getFechainscripciondesde() != null) {
			sql.VALUES("FECHAINSCRIPCIONDESDE", "#{fechainscripciondesde,jdbcType=TIMESTAMP}");
		}
		if (record.getFechainscripcionhasta() != null) {
			sql.VALUES("FECHAINSCRIPCIONHASTA", "#{fechainscripcionhasta,jdbcType=TIMESTAMP}");
		}
		if (record.getFechaimparticiondesde() != null) {
			sql.VALUES("FECHAIMPARTICIONDESDE", "#{fechaimparticiondesde,jdbcType=TIMESTAMP}");
		}
		if (record.getFechaimparticionhasta() != null) {
			sql.VALUES("FECHAIMPARTICIONHASTA", "#{fechaimparticionhasta,jdbcType=TIMESTAMP}");
		}
		if (record.getNumeroplazas() != null) {
			sql.VALUES("NUMEROPLAZAS", "#{numeroplazas,jdbcType=DECIMAL}");
		}
		if (record.getIdvisibilidadcurso() != null) {
			sql.VALUES("IDVISIBILIDADCURSO", "#{idvisibilidadcurso,jdbcType=DECIMAL}");
		}
		if (record.getIdestadocurso() != null) {
			sql.VALUES("IDESTADOCURSO", "#{idestadocurso,jdbcType=DECIMAL}");
		}
		if (record.getUsumodificacion() != null) {
			sql.VALUES("USUMODIFICACION", "#{usumodificacion,jdbcType=DECIMAL}");
		}
		if (record.getFechamodificacion() != null) {
			sql.VALUES("FECHAMODIFICACION", "#{fechamodificacion,jdbcType=TIMESTAMP}");
		}
		if (record.getIdtiposervicio() != null) {
			sql.VALUES("IDTIPOSERVICIO", "#{idtiposervicio,jdbcType=DECIMAL}");
		}
		if (record.getLugar() != null) {
			sql.VALUES("LUGAR", "#{lugar,jdbcType=VARCHAR}");
		}
		if (record.getMinimoasistencia() != null) {
			sql.VALUES("MINIMOASISTENCIA", "#{minimoasistencia,jdbcType=DECIMAL}");
		}
		if (record.getAutovalidacioninscripcion() != null) {
			sql.VALUES("AUTOVALIDACIONINSCRIPCION", "#{autovalidacioninscripcion,jdbcType=DECIMAL}");
		}
		if (record.getDocumentacionadjunta() != null) {
			sql.VALUES("DOCUMENTACIONADJUNTA", "#{documentacionadjunta,jdbcType=VARCHAR}");
		}
		if (record.getEncuestasatisfaccion() != null) {
			sql.VALUES("ENCUESTASATISFACCION", "#{encuestasatisfaccion,jdbcType=VARCHAR}");
		}
		if (record.getInformacionadicional() != null) {
			sql.VALUES("INFORMACIONADICIONAL", "#{informacionadicional,jdbcType=VARCHAR}");
		}
		if (record.getFlagarchivado() != null) {
			sql.VALUES("FLAGARCHIVADO", "#{flagarchivado,jdbcType=DECIMAL}");
		}
		if (record.getIdservicio() != null) {
			sql.VALUES("IDSERVICIO", "#{idservicio,jdbcType=DECIMAL}");
		}
		if (record.getDescripcion() != null) {
			sql.VALUES("DESCRIPCION", "#{descripcion,jdbcType=CLOB}");
		}
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.FOR_CURSO
	 * @mbg.generated  Wed Jan 02 18:01:32 CET 2019
	 */
	public String selectByExampleWithBLOBs(ForCursoExample example) {
		SQL sql = new SQL();
		if (example != null && example.isDistinct()) {
			sql.SELECT_DISTINCT("IDCURSO");
		} else {
			sql.SELECT("IDCURSO");
		}
		sql.SELECT("IDINSTITUCION");
		sql.SELECT("CODIGOCURSO");
		sql.SELECT("NOMBRECURSO");
		sql.SELECT("PRECIODESDE");
		sql.SELECT("PRECIOHASTA");
		sql.SELECT("FECHAINSCRIPCIONDESDE");
		sql.SELECT("FECHAINSCRIPCIONHASTA");
		sql.SELECT("FECHAIMPARTICIONDESDE");
		sql.SELECT("FECHAIMPARTICIONHASTA");
		sql.SELECT("NUMEROPLAZAS");
		sql.SELECT("IDVISIBILIDADCURSO");
		sql.SELECT("IDESTADOCURSO");
		sql.SELECT("USUMODIFICACION");
		sql.SELECT("FECHAMODIFICACION");
		sql.SELECT("IDTIPOSERVICIO");
		sql.SELECT("LUGAR");
		sql.SELECT("MINIMOASISTENCIA");
		sql.SELECT("AUTOVALIDACIONINSCRIPCION");
		sql.SELECT("DOCUMENTACIONADJUNTA");
		sql.SELECT("ENCUESTASATISFACCION");
		sql.SELECT("INFORMACIONADICIONAL");
		sql.SELECT("FLAGARCHIVADO");
		sql.SELECT("IDSERVICIO");
		sql.SELECT("DESCRIPCION");
		sql.FROM("FOR_CURSO");
		applyWhere(sql, example, false);
		if (example != null && example.getOrderByClause() != null) {
			sql.ORDER_BY(example.getOrderByClause());
		}
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.FOR_CURSO
	 * @mbg.generated  Wed Jan 02 18:01:32 CET 2019
	 */
	public String selectByExample(ForCursoExample example) {
		SQL sql = new SQL();
		if (example != null && example.isDistinct()) {
			sql.SELECT_DISTINCT("IDCURSO");
		} else {
			sql.SELECT("IDCURSO");
		}
		sql.SELECT("IDINSTITUCION");
		sql.SELECT("CODIGOCURSO");
		sql.SELECT("NOMBRECURSO");
		sql.SELECT("PRECIODESDE");
		sql.SELECT("PRECIOHASTA");
		sql.SELECT("FECHAINSCRIPCIONDESDE");
		sql.SELECT("FECHAINSCRIPCIONHASTA");
		sql.SELECT("FECHAIMPARTICIONDESDE");
		sql.SELECT("FECHAIMPARTICIONHASTA");
		sql.SELECT("NUMEROPLAZAS");
		sql.SELECT("IDVISIBILIDADCURSO");
		sql.SELECT("IDESTADOCURSO");
		sql.SELECT("USUMODIFICACION");
		sql.SELECT("FECHAMODIFICACION");
		sql.SELECT("IDTIPOSERVICIO");
		sql.SELECT("LUGAR");
		sql.SELECT("MINIMOASISTENCIA");
		sql.SELECT("AUTOVALIDACIONINSCRIPCION");
		sql.SELECT("DOCUMENTACIONADJUNTA");
		sql.SELECT("ENCUESTASATISFACCION");
		sql.SELECT("INFORMACIONADICIONAL");
		sql.SELECT("FLAGARCHIVADO");
		sql.SELECT("IDSERVICIO");
		sql.FROM("FOR_CURSO");
		applyWhere(sql, example, false);
		if (example != null && example.getOrderByClause() != null) {
			sql.ORDER_BY(example.getOrderByClause());
		}
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.FOR_CURSO
	 * @mbg.generated  Wed Jan 02 18:01:32 CET 2019
	 */
	public String updateByExampleSelective(Map<String, Object> parameter) {
		ForCurso record = (ForCurso) parameter.get("record");
		ForCursoExample example = (ForCursoExample) parameter.get("example");
		SQL sql = new SQL();
		sql.UPDATE("FOR_CURSO");
		if (record.getIdcurso() != null) {
			sql.SET("IDCURSO = #{record.idcurso,jdbcType=DECIMAL}");
		}
		if (record.getIdinstitucion() != null) {
			sql.SET("IDINSTITUCION = #{record.idinstitucion,jdbcType=DECIMAL}");
		}
		if (record.getCodigocurso() != null) {
			sql.SET("CODIGOCURSO = #{record.codigocurso,jdbcType=VARCHAR}");
		}
		if (record.getNombrecurso() != null) {
			sql.SET("NOMBRECURSO = #{record.nombrecurso,jdbcType=VARCHAR}");
		}
		if (record.getPreciodesde() != null) {
			sql.SET("PRECIODESDE = #{record.preciodesde,jdbcType=DECIMAL}");
		}
		if (record.getPreciohasta() != null) {
			sql.SET("PRECIOHASTA = #{record.preciohasta,jdbcType=DECIMAL}");
		}
		if (record.getFechainscripciondesde() != null) {
			sql.SET("FECHAINSCRIPCIONDESDE = #{record.fechainscripciondesde,jdbcType=TIMESTAMP}");
		}
		if (record.getFechainscripcionhasta() != null) {
			sql.SET("FECHAINSCRIPCIONHASTA = #{record.fechainscripcionhasta,jdbcType=TIMESTAMP}");
		}
		if (record.getFechaimparticiondesde() != null) {
			sql.SET("FECHAIMPARTICIONDESDE = #{record.fechaimparticiondesde,jdbcType=TIMESTAMP}");
		}
		if (record.getFechaimparticionhasta() != null) {
			sql.SET("FECHAIMPARTICIONHASTA = #{record.fechaimparticionhasta,jdbcType=TIMESTAMP}");
		}
		if (record.getNumeroplazas() != null) {
			sql.SET("NUMEROPLAZAS = #{record.numeroplazas,jdbcType=DECIMAL}");
		}
		if (record.getIdvisibilidadcurso() != null) {
			sql.SET("IDVISIBILIDADCURSO = #{record.idvisibilidadcurso,jdbcType=DECIMAL}");
		}
		if (record.getIdestadocurso() != null) {
			sql.SET("IDESTADOCURSO = #{record.idestadocurso,jdbcType=DECIMAL}");
		}
		if (record.getUsumodificacion() != null) {
			sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
		}
		if (record.getFechamodificacion() != null) {
			sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=TIMESTAMP}");
		}
		if (record.getIdtiposervicio() != null) {
			sql.SET("IDTIPOSERVICIO = #{record.idtiposervicio,jdbcType=DECIMAL}");
		}
		if (record.getLugar() != null) {
			sql.SET("LUGAR = #{record.lugar,jdbcType=VARCHAR}");
		}
		if (record.getMinimoasistencia() != null) {
			sql.SET("MINIMOASISTENCIA = #{record.minimoasistencia,jdbcType=DECIMAL}");
		}
		if (record.getAutovalidacioninscripcion() != null) {
			sql.SET("AUTOVALIDACIONINSCRIPCION = #{record.autovalidacioninscripcion,jdbcType=DECIMAL}");
		}
		if (record.getDocumentacionadjunta() != null) {
			sql.SET("DOCUMENTACIONADJUNTA = #{record.documentacionadjunta,jdbcType=VARCHAR}");
		}
		if (record.getEncuestasatisfaccion() != null) {
			sql.SET("ENCUESTASATISFACCION = #{record.encuestasatisfaccion,jdbcType=VARCHAR}");
		}
		if (record.getInformacionadicional() != null) {
			sql.SET("INFORMACIONADICIONAL = #{record.informacionadicional,jdbcType=VARCHAR}");
		}
		if (record.getFlagarchivado() != null) {
			sql.SET("FLAGARCHIVADO = #{record.flagarchivado,jdbcType=DECIMAL}");
		}
		if (record.getIdservicio() != null) {
			sql.SET("IDSERVICIO = #{record.idservicio,jdbcType=DECIMAL}");
		}
		if (record.getDescripcion() != null) {
			sql.SET("DESCRIPCION = #{record.descripcion,jdbcType=CLOB}");
		}
		applyWhere(sql, example, true);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.FOR_CURSO
	 * @mbg.generated  Wed Jan 02 18:01:32 CET 2019
	 */
	public String updateByExampleWithBLOBs(Map<String, Object> parameter) {
		SQL sql = new SQL();
		sql.UPDATE("FOR_CURSO");
		sql.SET("IDCURSO = #{record.idcurso,jdbcType=DECIMAL}");
		sql.SET("IDINSTITUCION = #{record.idinstitucion,jdbcType=DECIMAL}");
		sql.SET("CODIGOCURSO = #{record.codigocurso,jdbcType=VARCHAR}");
		sql.SET("NOMBRECURSO = #{record.nombrecurso,jdbcType=VARCHAR}");
		sql.SET("PRECIODESDE = #{record.preciodesde,jdbcType=DECIMAL}");
		sql.SET("PRECIOHASTA = #{record.preciohasta,jdbcType=DECIMAL}");
		sql.SET("FECHAINSCRIPCIONDESDE = #{record.fechainscripciondesde,jdbcType=TIMESTAMP}");
		sql.SET("FECHAINSCRIPCIONHASTA = #{record.fechainscripcionhasta,jdbcType=TIMESTAMP}");
		sql.SET("FECHAIMPARTICIONDESDE = #{record.fechaimparticiondesde,jdbcType=TIMESTAMP}");
		sql.SET("FECHAIMPARTICIONHASTA = #{record.fechaimparticionhasta,jdbcType=TIMESTAMP}");
		sql.SET("NUMEROPLAZAS = #{record.numeroplazas,jdbcType=DECIMAL}");
		sql.SET("IDVISIBILIDADCURSO = #{record.idvisibilidadcurso,jdbcType=DECIMAL}");
		sql.SET("IDESTADOCURSO = #{record.idestadocurso,jdbcType=DECIMAL}");
		sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
		sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=TIMESTAMP}");
		sql.SET("IDTIPOSERVICIO = #{record.idtiposervicio,jdbcType=DECIMAL}");
		sql.SET("LUGAR = #{record.lugar,jdbcType=VARCHAR}");
		sql.SET("MINIMOASISTENCIA = #{record.minimoasistencia,jdbcType=DECIMAL}");
		sql.SET("AUTOVALIDACIONINSCRIPCION = #{record.autovalidacioninscripcion,jdbcType=DECIMAL}");
		sql.SET("DOCUMENTACIONADJUNTA = #{record.documentacionadjunta,jdbcType=VARCHAR}");
		sql.SET("ENCUESTASATISFACCION = #{record.encuestasatisfaccion,jdbcType=VARCHAR}");
		sql.SET("INFORMACIONADICIONAL = #{record.informacionadicional,jdbcType=VARCHAR}");
		sql.SET("FLAGARCHIVADO = #{record.flagarchivado,jdbcType=DECIMAL}");
		sql.SET("IDSERVICIO = #{record.idservicio,jdbcType=DECIMAL}");
		sql.SET("DESCRIPCION = #{record.descripcion,jdbcType=CLOB}");
		ForCursoExample example = (ForCursoExample) parameter.get("example");
		applyWhere(sql, example, true);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.FOR_CURSO
	 * @mbg.generated  Wed Jan 02 18:01:32 CET 2019
	 */
	public String updateByExample(Map<String, Object> parameter) {
		SQL sql = new SQL();
		sql.UPDATE("FOR_CURSO");
		sql.SET("IDCURSO = #{record.idcurso,jdbcType=DECIMAL}");
		sql.SET("IDINSTITUCION = #{record.idinstitucion,jdbcType=DECIMAL}");
		sql.SET("CODIGOCURSO = #{record.codigocurso,jdbcType=VARCHAR}");
		sql.SET("NOMBRECURSO = #{record.nombrecurso,jdbcType=VARCHAR}");
		sql.SET("PRECIODESDE = #{record.preciodesde,jdbcType=DECIMAL}");
		sql.SET("PRECIOHASTA = #{record.preciohasta,jdbcType=DECIMAL}");
		sql.SET("FECHAINSCRIPCIONDESDE = #{record.fechainscripciondesde,jdbcType=TIMESTAMP}");
		sql.SET("FECHAINSCRIPCIONHASTA = #{record.fechainscripcionhasta,jdbcType=TIMESTAMP}");
		sql.SET("FECHAIMPARTICIONDESDE = #{record.fechaimparticiondesde,jdbcType=TIMESTAMP}");
		sql.SET("FECHAIMPARTICIONHASTA = #{record.fechaimparticionhasta,jdbcType=TIMESTAMP}");
		sql.SET("NUMEROPLAZAS = #{record.numeroplazas,jdbcType=DECIMAL}");
		sql.SET("IDVISIBILIDADCURSO = #{record.idvisibilidadcurso,jdbcType=DECIMAL}");
		sql.SET("IDESTADOCURSO = #{record.idestadocurso,jdbcType=DECIMAL}");
		sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
		sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=TIMESTAMP}");
		sql.SET("IDTIPOSERVICIO = #{record.idtiposervicio,jdbcType=DECIMAL}");
		sql.SET("LUGAR = #{record.lugar,jdbcType=VARCHAR}");
		sql.SET("MINIMOASISTENCIA = #{record.minimoasistencia,jdbcType=DECIMAL}");
		sql.SET("AUTOVALIDACIONINSCRIPCION = #{record.autovalidacioninscripcion,jdbcType=DECIMAL}");
		sql.SET("DOCUMENTACIONADJUNTA = #{record.documentacionadjunta,jdbcType=VARCHAR}");
		sql.SET("ENCUESTASATISFACCION = #{record.encuestasatisfaccion,jdbcType=VARCHAR}");
		sql.SET("INFORMACIONADICIONAL = #{record.informacionadicional,jdbcType=VARCHAR}");
		sql.SET("FLAGARCHIVADO = #{record.flagarchivado,jdbcType=DECIMAL}");
		sql.SET("IDSERVICIO = #{record.idservicio,jdbcType=DECIMAL}");
		ForCursoExample example = (ForCursoExample) parameter.get("example");
		applyWhere(sql, example, true);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.FOR_CURSO
	 * @mbg.generated  Wed Jan 02 18:01:32 CET 2019
	 */
	public String updateByPrimaryKeySelective(ForCurso record) {
		SQL sql = new SQL();
		sql.UPDATE("FOR_CURSO");
		if (record.getIdinstitucion() != null) {
			sql.SET("IDINSTITUCION = #{idinstitucion,jdbcType=DECIMAL}");
		}
		if (record.getCodigocurso() != null) {
			sql.SET("CODIGOCURSO = #{codigocurso,jdbcType=VARCHAR}");
		}
		if (record.getNombrecurso() != null) {
			sql.SET("NOMBRECURSO = #{nombrecurso,jdbcType=VARCHAR}");
		}
		if (record.getPreciodesde() != null) {
			sql.SET("PRECIODESDE = #{preciodesde,jdbcType=DECIMAL}");
		}
		if (record.getPreciohasta() != null) {
			sql.SET("PRECIOHASTA = #{preciohasta,jdbcType=DECIMAL}");
		}
		if (record.getFechainscripciondesde() != null) {
			sql.SET("FECHAINSCRIPCIONDESDE = #{fechainscripciondesde,jdbcType=TIMESTAMP}");
		}
		if (record.getFechainscripcionhasta() != null) {
			sql.SET("FECHAINSCRIPCIONHASTA = #{fechainscripcionhasta,jdbcType=TIMESTAMP}");
		}
		if (record.getFechaimparticiondesde() != null) {
			sql.SET("FECHAIMPARTICIONDESDE = #{fechaimparticiondesde,jdbcType=TIMESTAMP}");
		}
		if (record.getFechaimparticionhasta() != null) {
			sql.SET("FECHAIMPARTICIONHASTA = #{fechaimparticionhasta,jdbcType=TIMESTAMP}");
		}
		if (record.getNumeroplazas() != null) {
			sql.SET("NUMEROPLAZAS = #{numeroplazas,jdbcType=DECIMAL}");
		}
		if (record.getIdvisibilidadcurso() != null) {
			sql.SET("IDVISIBILIDADCURSO = #{idvisibilidadcurso,jdbcType=DECIMAL}");
		}
		if (record.getIdestadocurso() != null) {
			sql.SET("IDESTADOCURSO = #{idestadocurso,jdbcType=DECIMAL}");
		}
		if (record.getUsumodificacion() != null) {
			sql.SET("USUMODIFICACION = #{usumodificacion,jdbcType=DECIMAL}");
		}
		if (record.getFechamodificacion() != null) {
			sql.SET("FECHAMODIFICACION = #{fechamodificacion,jdbcType=TIMESTAMP}");
		}
		if (record.getIdtiposervicio() != null) {
			sql.SET("IDTIPOSERVICIO = #{idtiposervicio,jdbcType=DECIMAL}");
		}
		if (record.getLugar() != null) {
			sql.SET("LUGAR = #{lugar,jdbcType=VARCHAR}");
		}
		if (record.getMinimoasistencia() != null) {
			sql.SET("MINIMOASISTENCIA = #{minimoasistencia,jdbcType=DECIMAL}");
		}
		if (record.getAutovalidacioninscripcion() != null) {
			sql.SET("AUTOVALIDACIONINSCRIPCION = #{autovalidacioninscripcion,jdbcType=DECIMAL}");
		}
		if (record.getDocumentacionadjunta() != null) {
			sql.SET("DOCUMENTACIONADJUNTA = #{documentacionadjunta,jdbcType=VARCHAR}");
		}
		if (record.getEncuestasatisfaccion() != null) {
			sql.SET("ENCUESTASATISFACCION = #{encuestasatisfaccion,jdbcType=VARCHAR}");
		}
		if (record.getInformacionadicional() != null) {
			sql.SET("INFORMACIONADICIONAL = #{informacionadicional,jdbcType=VARCHAR}");
		}
		if (record.getFlagarchivado() != null) {
			sql.SET("FLAGARCHIVADO = #{flagarchivado,jdbcType=DECIMAL}");
		}
		if (record.getIdservicio() != null) {
			sql.SET("IDSERVICIO = #{idservicio,jdbcType=DECIMAL}");
		}
		if (record.getDescripcion() != null) {
			sql.SET("DESCRIPCION = #{descripcion,jdbcType=CLOB}");
		}
		sql.WHERE("IDCURSO = #{idcurso,jdbcType=DECIMAL}");
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.FOR_CURSO
	 * @mbg.generated  Wed Jan 02 18:01:32 CET 2019
	 */
	protected void applyWhere(SQL sql, ForCursoExample example, boolean includeExamplePhrase) {
		if (example == null) {
			return;
		}
		String parmPhrase1;
		String parmPhrase1_th;
		String parmPhrase2;
		String parmPhrase2_th;
		String parmPhrase3;
		String parmPhrase3_th;
		if (includeExamplePhrase) {
			parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
			parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
			parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
			parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
			parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
			parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
		} else {
			parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
			parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
			parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
			parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
			parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
			parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
		}
		StringBuilder sb = new StringBuilder();
		List<Criteria> oredCriteria = example.getOredCriteria();
		boolean firstCriteria = true;
		for (int i = 0; i < oredCriteria.size(); i++) {
			Criteria criteria = oredCriteria.get(i);
			if (criteria.isValid()) {
				if (firstCriteria) {
					firstCriteria = false;
				} else {
					sb.append(" or ");
				}
				sb.append('(');
				List<Criterion> criterions = criteria.getAllCriteria();
				boolean firstCriterion = true;
				for (int j = 0; j < criterions.size(); j++) {
					Criterion criterion = criterions.get(j);
					if (firstCriterion) {
						firstCriterion = false;
					} else {
						sb.append(" and ");
					}
					if (criterion.isNoValue()) {
						sb.append(criterion.getCondition());
					} else if (criterion.isSingleValue()) {
						if (criterion.getTypeHandler() == null) {
							sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
						} else {
							sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,
									criterion.getTypeHandler()));
						}
					} else if (criterion.isBetweenValue()) {
						if (criterion.getTypeHandler() == null) {
							sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
						} else {
							sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j,
									criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
						}
					} else if (criterion.isListValue()) {
						sb.append(criterion.getCondition());
						sb.append(" (");
						List<?> listItems = (List<?>) criterion.getValue();
						boolean comma = false;
						for (int k = 0; k < listItems.size(); k++) {
							if (comma) {
								sb.append(", ");
							} else {
								comma = true;
							}
							if (criterion.getTypeHandler() == null) {
								sb.append(String.format(parmPhrase3, i, j, k));
							} else {
								sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
							}
						}
						sb.append(')');
					}
				}
				sb.append(')');
			}
		}
		if (sb.length() > 0) {
			sql.WHERE(sb.toString());
		}
	}
}