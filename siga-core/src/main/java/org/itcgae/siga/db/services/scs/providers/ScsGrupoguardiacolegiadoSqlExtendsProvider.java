package org.itcgae.siga.db.services.scs.providers;

import org.apache.ibatis.jdbc.SQL;
import org.itcgae.siga.db.entities.ScsGrupoguardiacolegiado;
import org.itcgae.siga.db.mappers.ScsGrupoguardiacolegiadoSqlProvider;

public class ScsGrupoguardiacolegiadoSqlExtendsProvider extends ScsGrupoguardiacolegiadoSqlProvider{
	
	public String getLastId() {
		SQL sql = new SQL();
		
		sql.SELECT("MAX(IDGRUPOGUARDIACOLEGIADO) AS IDGRUPOGUARDIACOLEGIADO");
		sql.FROM("SCS_GRUPOGUARDIACOLEGIADO");
		
		return sql.toString();
	}

	public String updateOrdenGrupoColegiadoPrimero(Integer idInstitucion, Integer idCalendarioGuardias, Integer idTurno, Integer idGuardia) {

		String sql;
		String sql2;

		sql2 = " FROM SCS_GRUPOGUARDIACOLEGIADO_HIST AUX " +
				" WHERE AUX.IDINSTITUCION = SCS_GRUPOGUARDIACOLEGIADO.IDINSTITUCION " +
				" AND AUX.IDTURNO = SCS_GRUPOGUARDIACOLEGIADO.IDTURNO " +
				" AND AUX.IDGUARDIA = SCS_GRUPOGUARDIACOLEGIADO.IDGUARDIA " +
				" AND AUX.IDCALENDARIOGUARDIAS = " + idCalendarioGuardias +
				" AND AUX.IDGRUPOGUARDIACOLEGIADO = SCS_GRUPOGUARDIACOLEGIADO.IDGRUPOGUARDIACOLEGIADO ";

		sql = "UPDATE SCS_GRUPOGUARDIACOLEGIADO " +
				" SET ORDEN = (SELECT AUX.ORDEN " + sql2 + "), " +
				" IDGRUPOGUARDIA = (SELECT AUX.IDGRUPOGUARDIA " + sql2 + "), " +
				" FECHAMODIFICACION = (SELECT AUX.FECHACREACION " + sql2 + "), " + // Recupero la fecha de modificacion de la insercion de la tabla
				" USUMODIFICACION = (SELECT AUX.USUCREACION " + sql2 + ") " + // Recupero el usuario de modificacion de la insercion de la tabla
				" WHERE IDINSTITUCION = " + idInstitucion +
				" AND IDTURNO = " + idTurno +
				" AND IDGUARDIA = " + idGuardia +
				" AND EXISTS ( SELECT * " + sql2 + " ) ";

		return sql.toString();

	}

	public String updateOrdenGrupoColegiadoSegundo(Integer idInstitucion, Integer idCalendarioGuardias, Integer idTurno, Integer idGuardia, Integer usuModificacion) {
		String sql = " UPDATE SCS_GRUPOGUARDIACOLEGIADO " +
				" SET ORDEN = " +
				" ( " + // SELECT QUE SUMA EL CONTADOR DEL COLEGIADO (CALCULADO PARA CADA GRUPO), CON EL CONTADOR MINIMO DE SU GRUPO
				" SELECT TABLA_DATOS.ORDEN_FINAL + NVL(TABLA_MAXIMOS.ORDEN, 0) " +
				" FROM " +
				" ( " + // SELECT QUE OBTIENE UN CONTADOR PARA CADA COLEGIADO, EMPEZANDO POR UNO PARA CADA GRUPO, DE LOS COLEGIADOS QUE NO ESTABAN CUANDO SE GENERO EL CALENDARIO
				" SELECT AUX2.*, " +
				" AUX3.ORDEN_MINIMO_GRUPO, " +
				" 1 + AUX2.ORDEN_TOTAL - AUX3.ORDEN_MINIMO_GRUPO AS ORDEN_FINAL " +
				" FROM " +
				" ( " + // SELECT QUE OBTIENE UN CONTADOR POR CADA GRUPO Y COLEGIADO, DE LOS COLEGIADOS QUE NO ESTABAN CUANDO SE GENERO EL CALENDARIO
				" SELECT AUX1.*, " +
				" ROWNUM AS ORDEN_TOTAL " +
				" FROM " +
				" ( " +
				" SELECT GGC_AUX.* " + // SELECT QUE OBTIENE TODOS LOS GRUPOS Y COLEGIADOS ORDENADOS, DE LOS COLEGIADOS QUE NO ESTABAN CUANDO SE GENERO EL CALENDARIO
				" FROM SCS_GRUPOGUARDIACOLEGIADO GGC_AUX " +
				" WHERE GGC_AUX.IDINSTITUCION = " + idInstitucion + // SI CAMBIO ESTE DATO POR SCS_GRUPOGUARDIACOLEGIADO.IDINSTITUCION DA ERROR
				" AND GGC_AUX.IDTURNO = " + idTurno + // SI CAMBIO ESTE DATO POR SCS_GRUPOGUARDIACOLEGIADO.IDTURNO DA ERROR
				" AND GGC_AUX.IDGUARDIA = " + idGuardia +  // SI CAMBIO ESTE DATO POR SCS_GRUPOGUARDIACOLEGIADO.IDGUARDIA DA ERROR
				" AND NOT EXISTS " +
				" ( " +  // SELECT QUE OBTIENE TODOS LOS COLEGIADOS Y GRUPOS, QUE ESTABAN CUANDO SE GENERO EL CALENDARIO
				" SELECT GGCH_AUX.* " +
				" FROM SCS_GRUPOGUARDIACOLEGIADO_HIST GGCH_AUX " +
				" WHERE GGCH_AUX.IDINSTITUCION = GGC_AUX.IDINSTITUCION " +
				" AND GGCH_AUX.IDTURNO = GGC_AUX.IDTURNO " +
				" AND GGCH_AUX.IDGUARDIA = GGC_AUX.IDGUARDIA " +
				" AND GGCH_AUX.IDCALENDARIOGUARDIAS = " + idCalendarioGuardias +
				" AND GGCH_AUX.IDGRUPOGUARDIACOLEGIADO = GGC_AUX.IDGRUPOGUARDIACOLEGIADO " +
				" ) " +
				" ORDER BY GGC_AUX.IDGRUPOGUARDIA ASC, " +
				" GGC_AUX.ORDEN ASC " +
				" ) AUX1 " +
				" ) AUX2, " +

				" ( " +
				" SELECT AUX2.IDGRUPOGUARDIA, " + // SELECT QUE OBTIENE EL CONTADOR MINIMO POR CADA GRUPO, DE LOS COLEGIADOS QUE NO ESTABAN CUANDO SE GENERO EL CALENDARIO
				" MIN(AUX2.ORDEN_TOTAL) ORDEN_MINIMO_GRUPO " +
				" FROM " +
				" ( " +
				" SELECT AUX1.*, " + // SELECT QUE OBTIENE UN CONTADOR POR CADA GRUPO Y COLEGIADO, DE LOS COLEGIADOS QUE NO ESTABAN CUANDO SE GENERO EL CALENDARIO
				" ROWNUM AS ORDEN_TOTAL " +
				" FROM " +
				" ( " +
				" SELECT GGC_AUX.* " + // SELECT QUE OBTIENE TODOS LOS GRUPOS Y COLEGIADOS ORDENADOS, DE LOS COLEGIADOS QUE NO ESTABAN CUANDO SE GENERO EL CALENDARIO
				" FROM SCS_GRUPOGUARDIACOLEGIADO GGC_AUX " +
				" WHERE GGC_AUX.IDINSTITUCION = " + idInstitucion + // SI CAMBIO ESTE DATO POR SCS_GRUPOGUARDIACOLEGIADO.IDINSTITUCION DA ERROR
				" AND GGC_AUX.IDTURNO = " + idTurno + // SI CAMBIO ESTE DATO POR SCS_GRUPOGUARDIACOLEGIADO.IDTURNO DA ERROR
				" AND GGC_AUX.IDGUARDIA = " + idGuardia +  // SI CAMBIO ESTE DATO POR SCS_GRUPOGUARDIACOLEGIADO.IDGUARDIA DA ERROR
				" AND NOT EXISTS " +
				" ( " +  // SELECT QUE OBTIENE TODOS LOS COLEGIADOS Y GRUPOS, QUE ESTABAN CUANDO SE GENERO EL CALENDARIO
				" SELECT GGCH_AUX.* " +
				" FROM SCS_GRUPOGUARDIACOLEGIADO_HIST GGCH_AUX " +
				" WHERE GGCH_AUX.IDINSTITUCION = GGC_AUX.IDINSTITUCION " +
				" AND GGCH_AUX.IDTURNO = GGC_AUX.IDTURNO " +
				" AND GGCH_AUX.IDGUARDIA = GGC_AUX.IDGUARDIA " +
				" AND GGCH_AUX.IDCALENDARIOGUARDIAS = " + idCalendarioGuardias +
				" AND GGCH_AUX.IDGRUPOGUARDIACOLEGIADO = GGC_AUX.IDGRUPOGUARDIACOLEGIADO " +
				" ) " +
				" ORDER BY GGC_AUX.IDGRUPOGUARDIA ASC, " +
				" GGC_AUX.ORDEN ASC " +
				" ) AUX1 " +
				" ) AUX2 " +
				" GROUP BY AUX2.IDGRUPOGUARDIA " +
				" ) AUX3 " +

				" WHERE AUX2.IDGRUPOGUARDIA = AUX3.IDGRUPOGUARDIA " +
				" ORDER BY AUX2.IDGRUPOGUARDIA ASC, " +
				" ORDEN_FINAL ASC " +
				" ) TABLA_DATOS, " +

				" ( " + // SELECT QUE OBTIENE EL MAXIMO ORDEN POR CADA GRUPO, DE LOS COLEGIADOS QUE ESTABAN CUANDO SE GENERO EL CALENDARIO
				" SELECT MAX(GGC_AUX.ORDEN) AS ORDEN, " +
				" GGC_AUX.IDGRUPOGUARDIA " +
				" FROM SCS_GRUPOGUARDIACOLEGIADO GGC_AUX " +
				" WHERE GGC_AUX.IDINSTITUCION = " + idInstitucion + // SI CAMBIO ESTE DATO POR SCS_GRUPOGUARDIACOLEGIADO.IDINSTITUCION DA ERROR
				" AND GGC_AUX.IDTURNO = " + idTurno + // SI CAMBIO ESTE DATO POR SCS_GRUPOGUARDIACOLEGIADO.IDTURNO DA ERROR
				" AND GGC_AUX.IDGUARDIA = " + idGuardia +  // SI CAMBIO ESTE DATO POR SCS_GRUPOGUARDIACOLEGIADO.IDGUARDIA DA ERROR
				" AND EXISTS " +
				" ( " + // SELECT QUE OBTIENE TODOS LOS COLEGIADOS Y GRUPOS, QUE ESTABAN CUANDO SE GENERO EL CALENDARIO
				" SELECT GGCH_AUX.* " +
				" FROM SCS_GRUPOGUARDIACOLEGIADO_HIST GGCH_AUX " +
				" WHERE GGCH_AUX.IDINSTITUCION = GGC_AUX.IDINSTITUCION " +
				" AND GGCH_AUX.IDTURNO = GGC_AUX.IDTURNO " +
				" AND GGCH_AUX.IDGUARDIA = GGC_AUX.IDGUARDIA " +
				" AND GGCH_AUX.IDCALENDARIOGUARDIAS = " + idCalendarioGuardias +
				" AND GGCH_AUX.IDGRUPOGUARDIACOLEGIADO = GGC_AUX.IDGRUPOGUARDIACOLEGIADO " +
				" ) " +
				" GROUP BY  GGC_AUX.IDGRUPOGUARDIA " +
				" ) TABLA_MAXIMOS " +

				// OBTENGO EL COLEGIADO Y GRUPO QUE NO ESTABA CUANDO SE GENERO EL CALENDARIO
				" WHERE TABLA_DATOS.IDGRUPOGUARDIACOLEGIADO = SCS_GRUPOGUARDIACOLEGIADO.IDGRUPOGUARDIACOLEGIADO " +

				// OBTENGO EL MAXIMO ORDEN POR CADA GRUPO (PUEDE NO HABER MAXIMO, SI NO HAY DATOS EN EL HISTORICO)
				" AND  TABLA_DATOS.IDGRUPOGUARDIA = TABLA_MAXIMOS.IDGRUPOGUARDIA(+) " +
				" ), " +

				" FECHAMODIFICACION = SYSDATE, " +

				" USUMODIFICACION = " + usuModificacion +

				" WHERE IDINSTITUCION = " + idInstitucion +
				" AND IDTURNO = " + idTurno +
				" AND IDGUARDIA = " + idGuardia +
				" AND NOT EXISTS " +
				" ( " +  // SELECT QUE OBTIENE TODOS LOS COLEGIADOS Y GRUPOS, QUE ESTABAN CUANDO SE GENERO EL CALENDARIO
				" SELECT GGCH_AUX.* " +
				" FROM SCS_GRUPOGUARDIACOLEGIADO_HIST GGCH_AUX " +
				" WHERE GGCH_AUX.IDINSTITUCION = SCS_GRUPOGUARDIACOLEGIADO.IDINSTITUCION " +
				" AND GGCH_AUX.IDTURNO = SCS_GRUPOGUARDIACOLEGIADO.IDTURNO " +
				" AND GGCH_AUX.IDGUARDIA = SCS_GRUPOGUARDIACOLEGIADO.IDGUARDIA " +
				" AND GGCH_AUX.IDCALENDARIOGUARDIAS = " + idCalendarioGuardias +
				" AND GGCH_AUX.IDGRUPOGUARDIACOLEGIADO = SCS_GRUPOGUARDIACOLEGIADO.IDGRUPOGUARDIACOLEGIADO " +
				" ) ";

		return sql;

	}

	public String deleteRegistrosGrupoGuardiaCol(Integer idCalendarioGuardias) {

		SQL sql = new SQL();

		sql.DELETE_FROM("SCS_GRUPOGUARDIACOLEGIADO_HIST");
		sql.WHERE("IDCALENDARIOGUARDIAS = " + idCalendarioGuardias);

		return sql.toString();

	}
	
	public String deleteGuardiConcreto(Short idInstitucion, int idGuardia, int idTurno,int idCalendarioGuardias, String fechaIni, String fechaFin) {

		SQL sql = new SQL();

		sql.DELETE_FROM("SCS_CALENDARIOGUARDIAS");
		sql.WHERE("IDCALENDARIOGUARDIAS = " + idCalendarioGuardias);
		sql.WHERE("IDGUARDIA = "+ idGuardia);
		sql.WHERE("IDTURNO = " + idTurno );
		sql.WHERE("IDINSTITUCION = " + idInstitucion);
		sql.WHERE("FECHAINICIO >= TO_DATE('" + fechaIni + "', 'dd/mm/yyyy')");
		sql.WHERE("FECHAFIN <= TO_DATE('" + fechaFin + "', 'dd/mm/yyyy')");
		return sql.toString();

	}
	
	public String updateGrupoGuardiaOrden(ScsGrupoguardiacolegiado scsGrupoguardiacolegiado) {
		String sql = "UPDATE scs_grupoguardiacolegiado"
				+ " SET ORDEN = " + scsGrupoguardiacolegiado.getOrden()
				+" WHERE  IDGRUPOGUARDIA  =  " + scsGrupoguardiacolegiado.getIdgrupoguardia()
				+ " AND IDGRUPOGUARDIACOLEGIADO = " + scsGrupoguardiacolegiado.getIdgrupoguardiacolegiado();

		return sql;

	}

}
