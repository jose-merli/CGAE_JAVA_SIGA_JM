package org.itcgae.siga.db.entities;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ExpSolicitudborradoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USCGAE.EXP_SOLICITUDBORRADO
     *
     * @mbg.generated Thu Nov 29 12:31:31 CET 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USCGAE.EXP_SOLICITUDBORRADO
     *
     * @mbg.generated Thu Nov 29 12:31:31 CET 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USCGAE.EXP_SOLICITUDBORRADO
     *
     * @mbg.generated Thu Nov 29 12:31:31 CET 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.EXP_SOLICITUDBORRADO
     *
     * @mbg.generated Thu Nov 29 12:31:31 CET 2018
     */
    public ExpSolicitudborradoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.EXP_SOLICITUDBORRADO
     *
     * @mbg.generated Thu Nov 29 12:31:31 CET 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.EXP_SOLICITUDBORRADO
     *
     * @mbg.generated Thu Nov 29 12:31:31 CET 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.EXP_SOLICITUDBORRADO
     *
     * @mbg.generated Thu Nov 29 12:31:31 CET 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.EXP_SOLICITUDBORRADO
     *
     * @mbg.generated Thu Nov 29 12:31:31 CET 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.EXP_SOLICITUDBORRADO
     *
     * @mbg.generated Thu Nov 29 12:31:31 CET 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.EXP_SOLICITUDBORRADO
     *
     * @mbg.generated Thu Nov 29 12:31:31 CET 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.EXP_SOLICITUDBORRADO
     *
     * @mbg.generated Thu Nov 29 12:31:31 CET 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.EXP_SOLICITUDBORRADO
     *
     * @mbg.generated Thu Nov 29 12:31:31 CET 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.EXP_SOLICITUDBORRADO
     *
     * @mbg.generated Thu Nov 29 12:31:31 CET 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.EXP_SOLICITUDBORRADO
     *
     * @mbg.generated Thu Nov 29 12:31:31 CET 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE.EXP_SOLICITUDBORRADO
     *
     * @mbg.generated Thu Nov 29 12:31:31 CET 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdsolicitudIsNull() {
            addCriterion("IDSOLICITUD is null");
            return (Criteria) this;
        }

        public Criteria andIdsolicitudIsNotNull() {
            addCriterion("IDSOLICITUD is not null");
            return (Criteria) this;
        }

        public Criteria andIdsolicitudEqualTo(Long value) {
            addCriterion("IDSOLICITUD =", value, "idsolicitud");
            return (Criteria) this;
        }

        public Criteria andIdsolicitudNotEqualTo(Long value) {
            addCriterion("IDSOLICITUD <>", value, "idsolicitud");
            return (Criteria) this;
        }

        public Criteria andIdsolicitudGreaterThan(Long value) {
            addCriterion("IDSOLICITUD >", value, "idsolicitud");
            return (Criteria) this;
        }

        public Criteria andIdsolicitudGreaterThanOrEqualTo(Long value) {
            addCriterion("IDSOLICITUD >=", value, "idsolicitud");
            return (Criteria) this;
        }

        public Criteria andIdsolicitudLessThan(Long value) {
            addCriterion("IDSOLICITUD <", value, "idsolicitud");
            return (Criteria) this;
        }

        public Criteria andIdsolicitudLessThanOrEqualTo(Long value) {
            addCriterion("IDSOLICITUD <=", value, "idsolicitud");
            return (Criteria) this;
        }

        public Criteria andIdsolicitudIn(List<Long> values) {
            addCriterion("IDSOLICITUD in", values, "idsolicitud");
            return (Criteria) this;
        }

        public Criteria andIdsolicitudNotIn(List<Long> values) {
            addCriterion("IDSOLICITUD not in", values, "idsolicitud");
            return (Criteria) this;
        }

        public Criteria andIdsolicitudBetween(Long value1, Long value2) {
            addCriterion("IDSOLICITUD between", value1, value2, "idsolicitud");
            return (Criteria) this;
        }

        public Criteria andIdsolicitudNotBetween(Long value1, Long value2) {
            addCriterion("IDSOLICITUD not between", value1, value2, "idsolicitud");
            return (Criteria) this;
        }

        public Criteria andMotivoIsNull() {
            addCriterion("MOTIVO is null");
            return (Criteria) this;
        }

        public Criteria andMotivoIsNotNull() {
            addCriterion("MOTIVO is not null");
            return (Criteria) this;
        }

        public Criteria andMotivoEqualTo(String value) {
            addCriterion("MOTIVO =", value, "motivo");
            return (Criteria) this;
        }

        public Criteria andMotivoNotEqualTo(String value) {
            addCriterion("MOTIVO <>", value, "motivo");
            return (Criteria) this;
        }

        public Criteria andMotivoGreaterThan(String value) {
            addCriterion("MOTIVO >", value, "motivo");
            return (Criteria) this;
        }

        public Criteria andMotivoGreaterThanOrEqualTo(String value) {
            addCriterion("MOTIVO >=", value, "motivo");
            return (Criteria) this;
        }

        public Criteria andMotivoLessThan(String value) {
            addCriterion("MOTIVO <", value, "motivo");
            return (Criteria) this;
        }

        public Criteria andMotivoLessThanOrEqualTo(String value) {
            addCriterion("MOTIVO <=", value, "motivo");
            return (Criteria) this;
        }

        public Criteria andMotivoLike(String value) {
            addCriterion("MOTIVO like", value, "motivo");
            return (Criteria) this;
        }

        public Criteria andMotivoNotLike(String value) {
            addCriterion("MOTIVO not like", value, "motivo");
            return (Criteria) this;
        }

        public Criteria andMotivoIn(List<String> values) {
            addCriterion("MOTIVO in", values, "motivo");
            return (Criteria) this;
        }

        public Criteria andMotivoNotIn(List<String> values) {
            addCriterion("MOTIVO not in", values, "motivo");
            return (Criteria) this;
        }

        public Criteria andMotivoBetween(String value1, String value2) {
            addCriterion("MOTIVO between", value1, value2, "motivo");
            return (Criteria) this;
        }

        public Criteria andMotivoNotBetween(String value1, String value2) {
            addCriterion("MOTIVO not between", value1, value2, "motivo");
            return (Criteria) this;
        }

        public Criteria andIdestadosolicIsNull() {
            addCriterion("IDESTADOSOLIC is null");
            return (Criteria) this;
        }

        public Criteria andIdestadosolicIsNotNull() {
            addCriterion("IDESTADOSOLIC is not null");
            return (Criteria) this;
        }

        public Criteria andIdestadosolicEqualTo(Short value) {
            addCriterion("IDESTADOSOLIC =", value, "idestadosolic");
            return (Criteria) this;
        }

        public Criteria andIdestadosolicNotEqualTo(Short value) {
            addCriterion("IDESTADOSOLIC <>", value, "idestadosolic");
            return (Criteria) this;
        }

        public Criteria andIdestadosolicGreaterThan(Short value) {
            addCriterion("IDESTADOSOLIC >", value, "idestadosolic");
            return (Criteria) this;
        }

        public Criteria andIdestadosolicGreaterThanOrEqualTo(Short value) {
            addCriterion("IDESTADOSOLIC >=", value, "idestadosolic");
            return (Criteria) this;
        }

        public Criteria andIdestadosolicLessThan(Short value) {
            addCriterion("IDESTADOSOLIC <", value, "idestadosolic");
            return (Criteria) this;
        }

        public Criteria andIdestadosolicLessThanOrEqualTo(Short value) {
            addCriterion("IDESTADOSOLIC <=", value, "idestadosolic");
            return (Criteria) this;
        }

        public Criteria andIdestadosolicIn(List<Short> values) {
            addCriterion("IDESTADOSOLIC in", values, "idestadosolic");
            return (Criteria) this;
        }

        public Criteria andIdestadosolicNotIn(List<Short> values) {
            addCriterion("IDESTADOSOLIC not in", values, "idestadosolic");
            return (Criteria) this;
        }

        public Criteria andIdestadosolicBetween(Short value1, Short value2) {
            addCriterion("IDESTADOSOLIC between", value1, value2, "idestadosolic");
            return (Criteria) this;
        }

        public Criteria andIdestadosolicNotBetween(Short value1, Short value2) {
            addCriterion("IDESTADOSOLIC not between", value1, value2, "idestadosolic");
            return (Criteria) this;
        }

        public Criteria andIdpersonaIsNull() {
            addCriterion("IDPERSONA is null");
            return (Criteria) this;
        }

        public Criteria andIdpersonaIsNotNull() {
            addCriterion("IDPERSONA is not null");
            return (Criteria) this;
        }

        public Criteria andIdpersonaEqualTo(Long value) {
            addCriterion("IDPERSONA =", value, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaNotEqualTo(Long value) {
            addCriterion("IDPERSONA <>", value, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaGreaterThan(Long value) {
            addCriterion("IDPERSONA >", value, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaGreaterThanOrEqualTo(Long value) {
            addCriterion("IDPERSONA >=", value, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaLessThan(Long value) {
            addCriterion("IDPERSONA <", value, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaLessThanOrEqualTo(Long value) {
            addCriterion("IDPERSONA <=", value, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaIn(List<Long> values) {
            addCriterion("IDPERSONA in", values, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaNotIn(List<Long> values) {
            addCriterion("IDPERSONA not in", values, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaBetween(Long value1, Long value2) {
            addCriterion("IDPERSONA between", value1, value2, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaNotBetween(Long value1, Long value2) {
            addCriterion("IDPERSONA not between", value1, value2, "idpersona");
            return (Criteria) this;
        }

        public Criteria andFechaaltaIsNull() {
            addCriterion("FECHAALTA is null");
            return (Criteria) this;
        }

        public Criteria andFechaaltaIsNotNull() {
            addCriterion("FECHAALTA is not null");
            return (Criteria) this;
        }

        public Criteria andFechaaltaEqualTo(Date value) {
            addCriterion("FECHAALTA =", value, "fechaalta");
            return (Criteria) this;
        }

        public Criteria andFechaaltaNotEqualTo(Date value) {
            addCriterion("FECHAALTA <>", value, "fechaalta");
            return (Criteria) this;
        }

        public Criteria andFechaaltaGreaterThan(Date value) {
            addCriterion("FECHAALTA >", value, "fechaalta");
            return (Criteria) this;
        }

        public Criteria andFechaaltaGreaterThanOrEqualTo(Date value) {
            addCriterion("FECHAALTA >=", value, "fechaalta");
            return (Criteria) this;
        }

        public Criteria andFechaaltaLessThan(Date value) {
            addCriterion("FECHAALTA <", value, "fechaalta");
            return (Criteria) this;
        }

        public Criteria andFechaaltaLessThanOrEqualTo(Date value) {
            addCriterion("FECHAALTA <=", value, "fechaalta");
            return (Criteria) this;
        }

        public Criteria andFechaaltaIn(List<Date> values) {
            addCriterion("FECHAALTA in", values, "fechaalta");
            return (Criteria) this;
        }

        public Criteria andFechaaltaNotIn(List<Date> values) {
            addCriterion("FECHAALTA not in", values, "fechaalta");
            return (Criteria) this;
        }

        public Criteria andFechaaltaBetween(Date value1, Date value2) {
            addCriterion("FECHAALTA between", value1, value2, "fechaalta");
            return (Criteria) this;
        }

        public Criteria andFechaaltaNotBetween(Date value1, Date value2) {
            addCriterion("FECHAALTA not between", value1, value2, "fechaalta");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionIsNull() {
            addCriterion("IDINSTITUCION is null");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionIsNotNull() {
            addCriterion("IDINSTITUCION is not null");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionEqualTo(Short value) {
            addCriterion("IDINSTITUCION =", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionNotEqualTo(Short value) {
            addCriterion("IDINSTITUCION <>", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionGreaterThan(Short value) {
            addCriterion("IDINSTITUCION >", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionGreaterThanOrEqualTo(Short value) {
            addCriterion("IDINSTITUCION >=", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionLessThan(Short value) {
            addCriterion("IDINSTITUCION <", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionLessThanOrEqualTo(Short value) {
            addCriterion("IDINSTITUCION <=", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionIn(List<Short> values) {
            addCriterion("IDINSTITUCION in", values, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionNotIn(List<Short> values) {
            addCriterion("IDINSTITUCION not in", values, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionBetween(Short value1, Short value2) {
            addCriterion("IDINSTITUCION between", value1, value2, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionNotBetween(Short value1, Short value2) {
            addCriterion("IDINSTITUCION not between", value1, value2, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionTipoexpedienteIsNull() {
            addCriterion("IDINSTITUCION_TIPOEXPEDIENTE is null");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionTipoexpedienteIsNotNull() {
            addCriterion("IDINSTITUCION_TIPOEXPEDIENTE is not null");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionTipoexpedienteEqualTo(Short value) {
            addCriterion("IDINSTITUCION_TIPOEXPEDIENTE =", value, "idinstitucionTipoexpediente");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionTipoexpedienteNotEqualTo(Short value) {
            addCriterion("IDINSTITUCION_TIPOEXPEDIENTE <>", value, "idinstitucionTipoexpediente");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionTipoexpedienteGreaterThan(Short value) {
            addCriterion("IDINSTITUCION_TIPOEXPEDIENTE >", value, "idinstitucionTipoexpediente");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionTipoexpedienteGreaterThanOrEqualTo(Short value) {
            addCriterion("IDINSTITUCION_TIPOEXPEDIENTE >=", value, "idinstitucionTipoexpediente");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionTipoexpedienteLessThan(Short value) {
            addCriterion("IDINSTITUCION_TIPOEXPEDIENTE <", value, "idinstitucionTipoexpediente");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionTipoexpedienteLessThanOrEqualTo(Short value) {
            addCriterion("IDINSTITUCION_TIPOEXPEDIENTE <=", value, "idinstitucionTipoexpediente");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionTipoexpedienteIn(List<Short> values) {
            addCriterion("IDINSTITUCION_TIPOEXPEDIENTE in", values, "idinstitucionTipoexpediente");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionTipoexpedienteNotIn(List<Short> values) {
            addCriterion("IDINSTITUCION_TIPOEXPEDIENTE not in", values, "idinstitucionTipoexpediente");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionTipoexpedienteBetween(Short value1, Short value2) {
            addCriterion("IDINSTITUCION_TIPOEXPEDIENTE between", value1, value2, "idinstitucionTipoexpediente");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionTipoexpedienteNotBetween(Short value1, Short value2) {
            addCriterion("IDINSTITUCION_TIPOEXPEDIENTE not between", value1, value2, "idinstitucionTipoexpediente");
            return (Criteria) this;
        }

        public Criteria andIdtipoexpedienteIsNull() {
            addCriterion("IDTIPOEXPEDIENTE is null");
            return (Criteria) this;
        }

        public Criteria andIdtipoexpedienteIsNotNull() {
            addCriterion("IDTIPOEXPEDIENTE is not null");
            return (Criteria) this;
        }

        public Criteria andIdtipoexpedienteEqualTo(Short value) {
            addCriterion("IDTIPOEXPEDIENTE =", value, "idtipoexpediente");
            return (Criteria) this;
        }

        public Criteria andIdtipoexpedienteNotEqualTo(Short value) {
            addCriterion("IDTIPOEXPEDIENTE <>", value, "idtipoexpediente");
            return (Criteria) this;
        }

        public Criteria andIdtipoexpedienteGreaterThan(Short value) {
            addCriterion("IDTIPOEXPEDIENTE >", value, "idtipoexpediente");
            return (Criteria) this;
        }

        public Criteria andIdtipoexpedienteGreaterThanOrEqualTo(Short value) {
            addCriterion("IDTIPOEXPEDIENTE >=", value, "idtipoexpediente");
            return (Criteria) this;
        }

        public Criteria andIdtipoexpedienteLessThan(Short value) {
            addCriterion("IDTIPOEXPEDIENTE <", value, "idtipoexpediente");
            return (Criteria) this;
        }

        public Criteria andIdtipoexpedienteLessThanOrEqualTo(Short value) {
            addCriterion("IDTIPOEXPEDIENTE <=", value, "idtipoexpediente");
            return (Criteria) this;
        }

        public Criteria andIdtipoexpedienteIn(List<Short> values) {
            addCriterion("IDTIPOEXPEDIENTE in", values, "idtipoexpediente");
            return (Criteria) this;
        }

        public Criteria andIdtipoexpedienteNotIn(List<Short> values) {
            addCriterion("IDTIPOEXPEDIENTE not in", values, "idtipoexpediente");
            return (Criteria) this;
        }

        public Criteria andIdtipoexpedienteBetween(Short value1, Short value2) {
            addCriterion("IDTIPOEXPEDIENTE between", value1, value2, "idtipoexpediente");
            return (Criteria) this;
        }

        public Criteria andIdtipoexpedienteNotBetween(Short value1, Short value2) {
            addCriterion("IDTIPOEXPEDIENTE not between", value1, value2, "idtipoexpediente");
            return (Criteria) this;
        }

        public Criteria andNumeroexpedienteIsNull() {
            addCriterion("NUMEROEXPEDIENTE is null");
            return (Criteria) this;
        }

        public Criteria andNumeroexpedienteIsNotNull() {
            addCriterion("NUMEROEXPEDIENTE is not null");
            return (Criteria) this;
        }

        public Criteria andNumeroexpedienteEqualTo(Integer value) {
            addCriterion("NUMEROEXPEDIENTE =", value, "numeroexpediente");
            return (Criteria) this;
        }

        public Criteria andNumeroexpedienteNotEqualTo(Integer value) {
            addCriterion("NUMEROEXPEDIENTE <>", value, "numeroexpediente");
            return (Criteria) this;
        }

        public Criteria andNumeroexpedienteGreaterThan(Integer value) {
            addCriterion("NUMEROEXPEDIENTE >", value, "numeroexpediente");
            return (Criteria) this;
        }

        public Criteria andNumeroexpedienteGreaterThanOrEqualTo(Integer value) {
            addCriterion("NUMEROEXPEDIENTE >=", value, "numeroexpediente");
            return (Criteria) this;
        }

        public Criteria andNumeroexpedienteLessThan(Integer value) {
            addCriterion("NUMEROEXPEDIENTE <", value, "numeroexpediente");
            return (Criteria) this;
        }

        public Criteria andNumeroexpedienteLessThanOrEqualTo(Integer value) {
            addCriterion("NUMEROEXPEDIENTE <=", value, "numeroexpediente");
            return (Criteria) this;
        }

        public Criteria andNumeroexpedienteIn(List<Integer> values) {
            addCriterion("NUMEROEXPEDIENTE in", values, "numeroexpediente");
            return (Criteria) this;
        }

        public Criteria andNumeroexpedienteNotIn(List<Integer> values) {
            addCriterion("NUMEROEXPEDIENTE not in", values, "numeroexpediente");
            return (Criteria) this;
        }

        public Criteria andNumeroexpedienteBetween(Integer value1, Integer value2) {
            addCriterion("NUMEROEXPEDIENTE between", value1, value2, "numeroexpediente");
            return (Criteria) this;
        }

        public Criteria andNumeroexpedienteNotBetween(Integer value1, Integer value2) {
            addCriterion("NUMEROEXPEDIENTE not between", value1, value2, "numeroexpediente");
            return (Criteria) this;
        }

        public Criteria andAnioexpedienteIsNull() {
            addCriterion("ANIOEXPEDIENTE is null");
            return (Criteria) this;
        }

        public Criteria andAnioexpedienteIsNotNull() {
            addCriterion("ANIOEXPEDIENTE is not null");
            return (Criteria) this;
        }

        public Criteria andAnioexpedienteEqualTo(Short value) {
            addCriterion("ANIOEXPEDIENTE =", value, "anioexpediente");
            return (Criteria) this;
        }

        public Criteria andAnioexpedienteNotEqualTo(Short value) {
            addCriterion("ANIOEXPEDIENTE <>", value, "anioexpediente");
            return (Criteria) this;
        }

        public Criteria andAnioexpedienteGreaterThan(Short value) {
            addCriterion("ANIOEXPEDIENTE >", value, "anioexpediente");
            return (Criteria) this;
        }

        public Criteria andAnioexpedienteGreaterThanOrEqualTo(Short value) {
            addCriterion("ANIOEXPEDIENTE >=", value, "anioexpediente");
            return (Criteria) this;
        }

        public Criteria andAnioexpedienteLessThan(Short value) {
            addCriterion("ANIOEXPEDIENTE <", value, "anioexpediente");
            return (Criteria) this;
        }

        public Criteria andAnioexpedienteLessThanOrEqualTo(Short value) {
            addCriterion("ANIOEXPEDIENTE <=", value, "anioexpediente");
            return (Criteria) this;
        }

        public Criteria andAnioexpedienteIn(List<Short> values) {
            addCriterion("ANIOEXPEDIENTE in", values, "anioexpediente");
            return (Criteria) this;
        }

        public Criteria andAnioexpedienteNotIn(List<Short> values) {
            addCriterion("ANIOEXPEDIENTE not in", values, "anioexpediente");
            return (Criteria) this;
        }

        public Criteria andAnioexpedienteBetween(Short value1, Short value2) {
            addCriterion("ANIOEXPEDIENTE between", value1, value2, "anioexpediente");
            return (Criteria) this;
        }

        public Criteria andAnioexpedienteNotBetween(Short value1, Short value2) {
            addCriterion("ANIOEXPEDIENTE not between", value1, value2, "anioexpediente");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionIsNull() {
            addCriterion("FECHAMODIFICACION is null");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionIsNotNull() {
            addCriterion("FECHAMODIFICACION is not null");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION =", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionNotEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION <>", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionGreaterThan(Date value) {
            addCriterion("FECHAMODIFICACION >", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionGreaterThanOrEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION >=", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionLessThan(Date value) {
            addCriterion("FECHAMODIFICACION <", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionLessThanOrEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION <=", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionIn(List<Date> values) {
            addCriterion("FECHAMODIFICACION in", values, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionNotIn(List<Date> values) {
            addCriterion("FECHAMODIFICACION not in", values, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionBetween(Date value1, Date value2) {
            addCriterion("FECHAMODIFICACION between", value1, value2, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionNotBetween(Date value1, Date value2) {
            addCriterion("FECHAMODIFICACION not between", value1, value2, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionIsNull() {
            addCriterion("USUMODIFICACION is null");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionIsNotNull() {
            addCriterion("USUMODIFICACION is not null");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionEqualTo(Integer value) {
            addCriterion("USUMODIFICACION =", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionNotEqualTo(Integer value) {
            addCriterion("USUMODIFICACION <>", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionGreaterThan(Integer value) {
            addCriterion("USUMODIFICACION >", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionGreaterThanOrEqualTo(Integer value) {
            addCriterion("USUMODIFICACION >=", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionLessThan(Integer value) {
            addCriterion("USUMODIFICACION <", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionLessThanOrEqualTo(Integer value) {
            addCriterion("USUMODIFICACION <=", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionIn(List<Integer> values) {
            addCriterion("USUMODIFICACION in", values, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionNotIn(List<Integer> values) {
            addCriterion("USUMODIFICACION not in", values, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionBetween(Integer value1, Integer value2) {
            addCriterion("USUMODIFICACION between", value1, value2, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionNotBetween(Integer value1, Integer value2) {
            addCriterion("USUMODIFICACION not between", value1, value2, "usumodificacion");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE.EXP_SOLICITUDBORRADO
     *
     * @mbg.generated do_not_delete_during_merge Thu Nov 29 12:31:31 CET 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE.EXP_SOLICITUDBORRADO
     *
     * @mbg.generated Thu Nov 29 12:31:31 CET 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}