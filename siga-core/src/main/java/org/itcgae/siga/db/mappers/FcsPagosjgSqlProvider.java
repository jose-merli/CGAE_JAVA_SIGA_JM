package org.itcgae.siga.db.mappers;

import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;
import org.itcgae.siga.db.entities.FcsPagosjg;
import org.itcgae.siga.db.entities.FcsPagosjgExample.Criteria;
import org.itcgae.siga.db.entities.FcsPagosjgExample.Criterion;
import org.itcgae.siga.db.entities.FcsPagosjgExample;

public class FcsPagosjgSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_PAGOSJG
     *
     * @mbg.generated Tue Dec 17 17:08:46 CET 2019
     */
    public String countByExample(FcsPagosjgExample example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("FCS_PAGOSJG");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_PAGOSJG
     *
     * @mbg.generated Tue Dec 17 17:08:46 CET 2019
     */
    public String deleteByExample(FcsPagosjgExample example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("FCS_PAGOSJG");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_PAGOSJG
     *
     * @mbg.generated Tue Dec 17 17:08:46 CET 2019
     */
    public String insertSelective(FcsPagosjg record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("FCS_PAGOSJG");
        
        if (record.getIdinstitucion() != null) {
            sql.VALUES("IDINSTITUCION", "#{idinstitucion,jdbcType=DECIMAL}");
        }
        
        if (record.getIdpagosjg() != null) {
            sql.VALUES("IDPAGOSJG", "#{idpagosjg,jdbcType=DECIMAL}");
        }
        
        if (record.getIdfacturacion() != null) {
            sql.VALUES("IDFACTURACION", "#{idfacturacion,jdbcType=DECIMAL}");
        }
        
        if (record.getNombre() != null) {
            sql.VALUES("NOMBRE", "#{nombre,jdbcType=VARCHAR}");
        }
        
        if (record.getAbreviatura() != null) {
            sql.VALUES("ABREVIATURA", "#{abreviatura,jdbcType=VARCHAR}");
        }
        
        if (record.getFechadesde() != null) {
            sql.VALUES("FECHADESDE", "#{fechadesde,jdbcType=TIMESTAMP}");
        }
        
        if (record.getFechahasta() != null) {
            sql.VALUES("FECHAHASTA", "#{fechahasta,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCriteriopagoturno() != null) {
            sql.VALUES("CRITERIOPAGOTURNO", "#{criteriopagoturno,jdbcType=VARCHAR}");
        }
        
        if (record.getImporterepartir() != null) {
            sql.VALUES("IMPORTEREPARTIR", "#{importerepartir,jdbcType=DECIMAL}");
        }
        
        if (record.getImportepagado() != null) {
            sql.VALUES("IMPORTEPAGADO", "#{importepagado,jdbcType=DECIMAL}");
        }
        
        if (record.getImporteoficio() != null) {
            sql.VALUES("IMPORTEOFICIO", "#{importeoficio,jdbcType=DECIMAL}");
        }
        
        if (record.getImporteguardia() != null) {
            sql.VALUES("IMPORTEGUARDIA", "#{importeguardia,jdbcType=DECIMAL}");
        }
        
        if (record.getImportesoj() != null) {
            sql.VALUES("IMPORTESOJ", "#{importesoj,jdbcType=DECIMAL}");
        }
        
        if (record.getImporteejg() != null) {
            sql.VALUES("IMPORTEEJG", "#{importeejg,jdbcType=DECIMAL}");
        }
        
        if (record.getImporteminimo() != null) {
            sql.VALUES("IMPORTEMINIMO", "#{importeminimo,jdbcType=DECIMAL}");
        }
        
        if (record.getFechamodificacion() != null) {
            sql.VALUES("FECHAMODIFICACION", "#{fechamodificacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUsumodificacion() != null) {
            sql.VALUES("USUMODIFICACION", "#{usumodificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getContabilizado() != null) {
            sql.VALUES("CONTABILIZADO", "#{contabilizado,jdbcType=VARCHAR}");
        }
        
        if (record.getBancosCodigo() != null) {
            sql.VALUES("BANCOS_CODIGO", "#{bancosCodigo,jdbcType=VARCHAR}");
        }
        
        if (record.getIdsufijo() != null) {
            sql.VALUES("IDSUFIJO", "#{idsufijo,jdbcType=DECIMAL}");
        }
        
        if (record.getIdpropsepa() != null) {
            sql.VALUES("IDPROPSEPA", "#{idpropsepa,jdbcType=DECIMAL}");
        }
        
        if (record.getIdpropotros() != null) {
            sql.VALUES("IDPROPOTROS", "#{idpropotros,jdbcType=DECIMAL}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_PAGOSJG
     *
     * @mbg.generated Tue Dec 17 17:08:46 CET 2019
     */
    public String selectByExample(FcsPagosjgExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("IDINSTITUCION");
        } else {
            sql.SELECT("IDINSTITUCION");
        }
        sql.SELECT("IDPAGOSJG");
        sql.SELECT("IDFACTURACION");
        sql.SELECT("NOMBRE");
        sql.SELECT("ABREVIATURA");
        sql.SELECT("FECHADESDE");
        sql.SELECT("FECHAHASTA");
        sql.SELECT("CRITERIOPAGOTURNO");
        sql.SELECT("IMPORTEREPARTIR");
        sql.SELECT("IMPORTEPAGADO");
        sql.SELECT("IMPORTEOFICIO");
        sql.SELECT("IMPORTEGUARDIA");
        sql.SELECT("IMPORTESOJ");
        sql.SELECT("IMPORTEEJG");
        sql.SELECT("IMPORTEMINIMO");
        sql.SELECT("FECHAMODIFICACION");
        sql.SELECT("USUMODIFICACION");
        sql.SELECT("CONTABILIZADO");
        sql.SELECT("BANCOS_CODIGO");
        sql.SELECT("IDSUFIJO");
        sql.SELECT("IDPROPSEPA");
        sql.SELECT("IDPROPOTROS");
        sql.FROM("FCS_PAGOSJG");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_PAGOSJG
     *
     * @mbg.generated Tue Dec 17 17:08:46 CET 2019
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        FcsPagosjg record = (FcsPagosjg) parameter.get("record");
        FcsPagosjgExample example = (FcsPagosjgExample) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("FCS_PAGOSJG");
        
        if (record.getIdinstitucion() != null) {
            sql.SET("IDINSTITUCION = #{record.idinstitucion,jdbcType=DECIMAL}");
        }
        
        if (record.getIdpagosjg() != null) {
            sql.SET("IDPAGOSJG = #{record.idpagosjg,jdbcType=DECIMAL}");
        }
        
        if (record.getIdfacturacion() != null) {
            sql.SET("IDFACTURACION = #{record.idfacturacion,jdbcType=DECIMAL}");
        }
        
        if (record.getNombre() != null) {
            sql.SET("NOMBRE = #{record.nombre,jdbcType=VARCHAR}");
        }
        
        if (record.getAbreviatura() != null) {
            sql.SET("ABREVIATURA = #{record.abreviatura,jdbcType=VARCHAR}");
        }
        
        if (record.getFechadesde() != null) {
            sql.SET("FECHADESDE = #{record.fechadesde,jdbcType=TIMESTAMP}");
        }
        
        if (record.getFechahasta() != null) {
            sql.SET("FECHAHASTA = #{record.fechahasta,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCriteriopagoturno() != null) {
            sql.SET("CRITERIOPAGOTURNO = #{record.criteriopagoturno,jdbcType=VARCHAR}");
        }
        
        if (record.getImporterepartir() != null) {
            sql.SET("IMPORTEREPARTIR = #{record.importerepartir,jdbcType=DECIMAL}");
        }
        
        if (record.getImportepagado() != null) {
            sql.SET("IMPORTEPAGADO = #{record.importepagado,jdbcType=DECIMAL}");
        }
        
        if (record.getImporteoficio() != null) {
            sql.SET("IMPORTEOFICIO = #{record.importeoficio,jdbcType=DECIMAL}");
        }
        
        if (record.getImporteguardia() != null) {
            sql.SET("IMPORTEGUARDIA = #{record.importeguardia,jdbcType=DECIMAL}");
        }
        
        if (record.getImportesoj() != null) {
            sql.SET("IMPORTESOJ = #{record.importesoj,jdbcType=DECIMAL}");
        }
        
        if (record.getImporteejg() != null) {
            sql.SET("IMPORTEEJG = #{record.importeejg,jdbcType=DECIMAL}");
        }
        
        if (record.getImporteminimo() != null) {
            sql.SET("IMPORTEMINIMO = #{record.importeminimo,jdbcType=DECIMAL}");
        }
        
        if (record.getFechamodificacion() != null) {
            sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUsumodificacion() != null) {
            sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getContabilizado() != null) {
            sql.SET("CONTABILIZADO = #{record.contabilizado,jdbcType=VARCHAR}");
        }
        
        if (record.getBancosCodigo() != null) {
            sql.SET("BANCOS_CODIGO = #{record.bancosCodigo,jdbcType=VARCHAR}");
        }
        
        if (record.getIdsufijo() != null) {
            sql.SET("IDSUFIJO = #{record.idsufijo,jdbcType=DECIMAL}");
        }
        
        if (record.getIdpropsepa() != null) {
            sql.SET("IDPROPSEPA = #{record.idpropsepa,jdbcType=DECIMAL}");
        }
        
        if (record.getIdpropotros() != null) {
            sql.SET("IDPROPOTROS = #{record.idpropotros,jdbcType=DECIMAL}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_PAGOSJG
     *
     * @mbg.generated Tue Dec 17 17:08:46 CET 2019
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("FCS_PAGOSJG");
        
        sql.SET("IDINSTITUCION = #{record.idinstitucion,jdbcType=DECIMAL}");
        sql.SET("IDPAGOSJG = #{record.idpagosjg,jdbcType=DECIMAL}");
        sql.SET("IDFACTURACION = #{record.idfacturacion,jdbcType=DECIMAL}");
        sql.SET("NOMBRE = #{record.nombre,jdbcType=VARCHAR}");
        sql.SET("ABREVIATURA = #{record.abreviatura,jdbcType=VARCHAR}");
        sql.SET("FECHADESDE = #{record.fechadesde,jdbcType=TIMESTAMP}");
        sql.SET("FECHAHASTA = #{record.fechahasta,jdbcType=TIMESTAMP}");
        sql.SET("CRITERIOPAGOTURNO = #{record.criteriopagoturno,jdbcType=VARCHAR}");
        sql.SET("IMPORTEREPARTIR = #{record.importerepartir,jdbcType=DECIMAL}");
        sql.SET("IMPORTEPAGADO = #{record.importepagado,jdbcType=DECIMAL}");
        sql.SET("IMPORTEOFICIO = #{record.importeoficio,jdbcType=DECIMAL}");
        sql.SET("IMPORTEGUARDIA = #{record.importeguardia,jdbcType=DECIMAL}");
        sql.SET("IMPORTESOJ = #{record.importesoj,jdbcType=DECIMAL}");
        sql.SET("IMPORTEEJG = #{record.importeejg,jdbcType=DECIMAL}");
        sql.SET("IMPORTEMINIMO = #{record.importeminimo,jdbcType=DECIMAL}");
        sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=TIMESTAMP}");
        sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
        sql.SET("CONTABILIZADO = #{record.contabilizado,jdbcType=VARCHAR}");
        sql.SET("BANCOS_CODIGO = #{record.bancosCodigo,jdbcType=VARCHAR}");
        sql.SET("IDSUFIJO = #{record.idsufijo,jdbcType=DECIMAL}");
        sql.SET("IDPROPSEPA = #{record.idpropsepa,jdbcType=DECIMAL}");
        sql.SET("IDPROPOTROS = #{record.idpropotros,jdbcType=DECIMAL}");
        
        FcsPagosjgExample example = (FcsPagosjgExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_PAGOSJG
     *
     * @mbg.generated Tue Dec 17 17:08:46 CET 2019
     */
    public String updateByPrimaryKeySelective(FcsPagosjg record) {
        SQL sql = new SQL();
        sql.UPDATE("FCS_PAGOSJG");
        
        if (record.getIdfacturacion() != null) {
            sql.SET("IDFACTURACION = #{idfacturacion,jdbcType=DECIMAL}");
        }
        
        if (record.getNombre() != null) {
            sql.SET("NOMBRE = #{nombre,jdbcType=VARCHAR}");
        }
        
        if (record.getAbreviatura() != null) {
            sql.SET("ABREVIATURA = #{abreviatura,jdbcType=VARCHAR}");
        }
        
        if (record.getFechadesde() != null) {
            sql.SET("FECHADESDE = #{fechadesde,jdbcType=TIMESTAMP}");
        }
        
        if (record.getFechahasta() != null) {
            sql.SET("FECHAHASTA = #{fechahasta,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCriteriopagoturno() != null) {
            sql.SET("CRITERIOPAGOTURNO = #{criteriopagoturno,jdbcType=VARCHAR}");
        }
        
        if (record.getImporterepartir() != null) {
            sql.SET("IMPORTEREPARTIR = #{importerepartir,jdbcType=DECIMAL}");
        }
        
        if (record.getImportepagado() != null) {
            sql.SET("IMPORTEPAGADO = #{importepagado,jdbcType=DECIMAL}");
        }
        
        if (record.getImporteoficio() != null) {
            sql.SET("IMPORTEOFICIO = #{importeoficio,jdbcType=DECIMAL}");
        }
        
        if (record.getImporteguardia() != null) {
            sql.SET("IMPORTEGUARDIA = #{importeguardia,jdbcType=DECIMAL}");
        }
        
        if (record.getImportesoj() != null) {
            sql.SET("IMPORTESOJ = #{importesoj,jdbcType=DECIMAL}");
        }
        
        if (record.getImporteejg() != null) {
            sql.SET("IMPORTEEJG = #{importeejg,jdbcType=DECIMAL}");
        }
        
        if (record.getImporteminimo() != null) {
            sql.SET("IMPORTEMINIMO = #{importeminimo,jdbcType=DECIMAL}");
        }
        
        if (record.getFechamodificacion() != null) {
            sql.SET("FECHAMODIFICACION = #{fechamodificacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUsumodificacion() != null) {
            sql.SET("USUMODIFICACION = #{usumodificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getContabilizado() != null) {
            sql.SET("CONTABILIZADO = #{contabilizado,jdbcType=VARCHAR}");
        }
        
        if (record.getBancosCodigo() != null) {
            sql.SET("BANCOS_CODIGO = #{bancosCodigo,jdbcType=VARCHAR}");
        }
        
        if (record.getIdsufijo() != null) {
            sql.SET("IDSUFIJO = #{idsufijo,jdbcType=DECIMAL}");
        }
        
        if (record.getIdpropsepa() != null) {
            sql.SET("IDPROPSEPA = #{idpropsepa,jdbcType=DECIMAL}");
        }
        
        if (record.getIdpropotros() != null) {
            sql.SET("IDPROPOTROS = #{idpropotros,jdbcType=DECIMAL}");
        }
        
        sql.WHERE("IDINSTITUCION = #{idinstitucion,jdbcType=DECIMAL}");
        sql.WHERE("IDPAGOSJG = #{idpagosjg,jdbcType=DECIMAL}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_PAGOSJG
     *
     * @mbg.generated Tue Dec 17 17:08:46 CET 2019
     */
    protected void applyWhere(SQL sql, FcsPagosjgExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}