package org.itcgae.siga.db.mappers;

import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;
import org.itcgae.siga.db.entities.CerSolicitudcertificados;
import org.itcgae.siga.db.entities.CerSolicitudcertificadosExample.Criteria;
import org.itcgae.siga.db.entities.CerSolicitudcertificadosExample.Criterion;
import org.itcgae.siga.db.entities.CerSolicitudcertificadosExample;

public class CerSolicitudcertificadosSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CER_SOLICITUDCERTIFICADOS
     *
     * @mbg.generated Thu Oct 25 13:43:52 CEST 2018
     */
    public String countByExample(CerSolicitudcertificadosExample example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("CER_SOLICITUDCERTIFICADOS");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CER_SOLICITUDCERTIFICADOS
     *
     * @mbg.generated Thu Oct 25 13:43:52 CEST 2018
     */
    public String deleteByExample(CerSolicitudcertificadosExample example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("CER_SOLICITUDCERTIFICADOS");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CER_SOLICITUDCERTIFICADOS
     *
     * @mbg.generated Thu Oct 25 13:43:52 CEST 2018
     */
    public String insertSelective(CerSolicitudcertificados record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("CER_SOLICITUDCERTIFICADOS");
        
        if (record.getIdinstitucion() != null) {
            sql.VALUES("IDINSTITUCION", "#{idinstitucion,jdbcType=DECIMAL}");
        }
        
        if (record.getIdsolicitud() != null) {
            sql.VALUES("IDSOLICITUD", "#{idsolicitud,jdbcType=DECIMAL}");
        }
        
        if (record.getFechasolicitud() != null) {
            sql.VALUES("FECHASOLICITUD", "#{fechasolicitud,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIdestadosolicitudcertificado() != null) {
            sql.VALUES("IDESTADOSOLICITUDCERTIFICADO", "#{idestadosolicitudcertificado,jdbcType=DECIMAL}");
        }
        
        if (record.getIdinstitucionSol() != null) {
            sql.VALUES("IDINSTITUCION_SOL", "#{idinstitucionSol,jdbcType=DECIMAL}");
        }
        
        if (record.getIdpersonaDes() != null) {
            sql.VALUES("IDPERSONA_DES", "#{idpersonaDes,jdbcType=DECIMAL}");
        }
        
        if (record.getIdestadocertificado() != null) {
            sql.VALUES("IDESTADOCERTIFICADO", "#{idestadocertificado,jdbcType=DECIMAL}");
        }
        
        if (record.getFechamodificacion() != null) {
            sql.VALUES("FECHAMODIFICACION", "#{fechamodificacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUsumodificacion() != null) {
            sql.VALUES("USUMODIFICACION", "#{usumodificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getDescripcion() != null) {
            sql.VALUES("DESCRIPCION", "#{descripcion,jdbcType=VARCHAR}");
        }
        
        if (record.getIdpersonaDir() != null) {
            sql.VALUES("IDPERSONA_DIR", "#{idpersonaDir,jdbcType=DECIMAL}");
        }
        
        if (record.getIddireccionDir() != null) {
            sql.VALUES("IDDIRECCION_DIR", "#{iddireccionDir,jdbcType=DECIMAL}");
        }
        
        if (record.getPpnIdtipoproducto() != null) {
            sql.VALUES("PPN_IDTIPOPRODUCTO", "#{ppnIdtipoproducto,jdbcType=DECIMAL}");
        }
        
        if (record.getPpnIdproducto() != null) {
            sql.VALUES("PPN_IDPRODUCTO", "#{ppnIdproducto,jdbcType=DECIMAL}");
        }
        
        if (record.getFechaemisioncertificado() != null) {
            sql.VALUES("FECHAEMISIONCERTIFICADO", "#{fechaemisioncertificado,jdbcType=TIMESTAMP}");
        }
        
        if (record.getPpnIdproductoinstitucion() != null) {
            sql.VALUES("PPN_IDPRODUCTOINSTITUCION", "#{ppnIdproductoinstitucion,jdbcType=DECIMAL}");
        }
        
        if (record.getIdtipoenvios() != null) {
            sql.VALUES("IDTIPOENVIOS", "#{idtipoenvios,jdbcType=DECIMAL}");
        }
        
        if (record.getIdinstitucionorigen() != null) {
            sql.VALUES("IDINSTITUCIONORIGEN", "#{idinstitucionorigen,jdbcType=DECIMAL}");
        }
        
        if (record.getIdinstituciondestino() != null) {
            sql.VALUES("IDINSTITUCIONDESTINO", "#{idinstituciondestino,jdbcType=DECIMAL}");
        }
        
        if (record.getIdpeticionproducto() != null) {
            sql.VALUES("IDPETICIONPRODUCTO", "#{idpeticionproducto,jdbcType=DECIMAL}");
        }
        
        if (record.getContadorCer() != null) {
            sql.VALUES("CONTADOR_CER", "#{contadorCer,jdbcType=DECIMAL}");
        }
        
        if (record.getPrefijoCer() != null) {
            sql.VALUES("PREFIJO_CER", "#{prefijoCer,jdbcType=VARCHAR}");
        }
        
        if (record.getSufijoCer() != null) {
            sql.VALUES("SUFIJO_CER", "#{sufijoCer,jdbcType=VARCHAR}");
        }
        
        if (record.getFechadescarga() != null) {
            sql.VALUES("FECHADESCARGA", "#{fechadescarga,jdbcType=TIMESTAMP}");
        }
        
        if (record.getFechacobro() != null) {
            sql.VALUES("FECHACOBRO", "#{fechacobro,jdbcType=TIMESTAMP}");
        }
        
        if (record.getFechaenvio() != null) {
            sql.VALUES("FECHAENVIO", "#{fechaenvio,jdbcType=TIMESTAMP}");
        }
        
        if (record.getFechaestado() != null) {
            sql.VALUES("FECHAESTADO", "#{fechaestado,jdbcType=TIMESTAMP}");
        }
        
        if (record.getComentario() != null) {
            sql.VALUES("COMENTARIO", "#{comentario,jdbcType=VARCHAR}");
        }
        
        if (record.getFechaentregainfo() != null) {
            sql.VALUES("FECHAENTREGAINFO", "#{fechaentregainfo,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIdmetodosolicitud() != null) {
            sql.VALUES("IDMETODOSOLICITUD", "#{idmetodosolicitud,jdbcType=DECIMAL}");
        }
        
        if (record.getUsucreacion() != null) {
            sql.VALUES("USUCREACION", "#{usucreacion,jdbcType=DECIMAL}");
        }
        
        if (record.getFechacreacion() != null) {
            sql.VALUES("FECHACREACION", "#{fechacreacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIdinstitucioncolegiacion() != null) {
            sql.VALUES("IDINSTITUCIONCOLEGIACION", "#{idinstitucioncolegiacion,jdbcType=DECIMAL}");
        }
        
        if (record.getCboCodigo() != null) {
            sql.VALUES("CBO_CODIGO", "#{cboCodigo,jdbcType=VARCHAR}");
        }
        
        if (record.getCodigoSucursal() != null) {
            sql.VALUES("CODIGO_SUCURSAL", "#{codigoSucursal,jdbcType=VARCHAR}");
        }
        
        if (record.getAceptacesionmutualidad() != null) {
            sql.VALUES("ACEPTACESIONMUTUALIDAD", "#{aceptacesionmutualidad,jdbcType=VARCHAR}");
        }
        
        if (record.getFicheroDocumento() != null) {
            sql.VALUES("FICHERO_DOCUMENTO", "#{ficheroDocumento,jdbcType=VARCHAR}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CER_SOLICITUDCERTIFICADOS
     *
     * @mbg.generated Thu Oct 25 13:43:52 CEST 2018
     */
    public String selectByExample(CerSolicitudcertificadosExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("IDINSTITUCION");
        } else {
            sql.SELECT("IDINSTITUCION");
        }
        sql.SELECT("IDSOLICITUD");
        sql.SELECT("FECHASOLICITUD");
        sql.SELECT("IDESTADOSOLICITUDCERTIFICADO");
        sql.SELECT("IDINSTITUCION_SOL");
        sql.SELECT("IDPERSONA_DES");
        sql.SELECT("IDESTADOCERTIFICADO");
        sql.SELECT("FECHAMODIFICACION");
        sql.SELECT("USUMODIFICACION");
        sql.SELECT("DESCRIPCION");
        sql.SELECT("IDPERSONA_DIR");
        sql.SELECT("IDDIRECCION_DIR");
        sql.SELECT("PPN_IDTIPOPRODUCTO");
        sql.SELECT("PPN_IDPRODUCTO");
        sql.SELECT("FECHAEMISIONCERTIFICADO");
        sql.SELECT("PPN_IDPRODUCTOINSTITUCION");
        sql.SELECT("IDTIPOENVIOS");
        sql.SELECT("IDINSTITUCIONORIGEN");
        sql.SELECT("IDINSTITUCIONDESTINO");
        sql.SELECT("IDPETICIONPRODUCTO");
        sql.SELECT("CONTADOR_CER");
        sql.SELECT("PREFIJO_CER");
        sql.SELECT("SUFIJO_CER");
        sql.SELECT("FECHADESCARGA");
        sql.SELECT("FECHACOBRO");
        sql.SELECT("FECHAENVIO");
        sql.SELECT("FECHAESTADO");
        sql.SELECT("COMENTARIO");
        sql.SELECT("FECHAENTREGAINFO");
        sql.SELECT("IDMETODOSOLICITUD");
        sql.SELECT("USUCREACION");
        sql.SELECT("FECHACREACION");
        sql.SELECT("IDINSTITUCIONCOLEGIACION");
        sql.SELECT("CBO_CODIGO");
        sql.SELECT("CODIGO_SUCURSAL");
        sql.SELECT("ACEPTACESIONMUTUALIDAD");
        sql.SELECT("FICHERO_DOCUMENTO");
        sql.FROM("CER_SOLICITUDCERTIFICADOS");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CER_SOLICITUDCERTIFICADOS
     *
     * @mbg.generated Thu Oct 25 13:43:52 CEST 2018
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        CerSolicitudcertificados record = (CerSolicitudcertificados) parameter.get("record");
        CerSolicitudcertificadosExample example = (CerSolicitudcertificadosExample) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("CER_SOLICITUDCERTIFICADOS");
        
        if (record.getIdinstitucion() != null) {
            sql.SET("IDINSTITUCION = #{record.idinstitucion,jdbcType=DECIMAL}");
        }
        
        if (record.getIdsolicitud() != null) {
            sql.SET("IDSOLICITUD = #{record.idsolicitud,jdbcType=DECIMAL}");
        }
        
        if (record.getFechasolicitud() != null) {
            sql.SET("FECHASOLICITUD = #{record.fechasolicitud,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIdestadosolicitudcertificado() != null) {
            sql.SET("IDESTADOSOLICITUDCERTIFICADO = #{record.idestadosolicitudcertificado,jdbcType=DECIMAL}");
        }
        
        if (record.getIdinstitucionSol() != null) {
            sql.SET("IDINSTITUCION_SOL = #{record.idinstitucionSol,jdbcType=DECIMAL}");
        }
        
        if (record.getIdpersonaDes() != null) {
            sql.SET("IDPERSONA_DES = #{record.idpersonaDes,jdbcType=DECIMAL}");
        }
        
        if (record.getIdestadocertificado() != null) {
            sql.SET("IDESTADOCERTIFICADO = #{record.idestadocertificado,jdbcType=DECIMAL}");
        }
        
        if (record.getFechamodificacion() != null) {
            sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUsumodificacion() != null) {
            sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getDescripcion() != null) {
            sql.SET("DESCRIPCION = #{record.descripcion,jdbcType=VARCHAR}");
        }
        
        if (record.getIdpersonaDir() != null) {
            sql.SET("IDPERSONA_DIR = #{record.idpersonaDir,jdbcType=DECIMAL}");
        }
        
        if (record.getIddireccionDir() != null) {
            sql.SET("IDDIRECCION_DIR = #{record.iddireccionDir,jdbcType=DECIMAL}");
        }
        
        if (record.getPpnIdtipoproducto() != null) {
            sql.SET("PPN_IDTIPOPRODUCTO = #{record.ppnIdtipoproducto,jdbcType=DECIMAL}");
        }
        
        if (record.getPpnIdproducto() != null) {
            sql.SET("PPN_IDPRODUCTO = #{record.ppnIdproducto,jdbcType=DECIMAL}");
        }
        
        if (record.getFechaemisioncertificado() != null) {
            sql.SET("FECHAEMISIONCERTIFICADO = #{record.fechaemisioncertificado,jdbcType=TIMESTAMP}");
        }
        
        if (record.getPpnIdproductoinstitucion() != null) {
            sql.SET("PPN_IDPRODUCTOINSTITUCION = #{record.ppnIdproductoinstitucion,jdbcType=DECIMAL}");
        }
        
        if (record.getIdtipoenvios() != null) {
            sql.SET("IDTIPOENVIOS = #{record.idtipoenvios,jdbcType=DECIMAL}");
        }
        
        if (record.getIdinstitucionorigen() != null) {
            sql.SET("IDINSTITUCIONORIGEN = #{record.idinstitucionorigen,jdbcType=DECIMAL}");
        }
        
        if (record.getIdinstituciondestino() != null) {
            sql.SET("IDINSTITUCIONDESTINO = #{record.idinstituciondestino,jdbcType=DECIMAL}");
        }
        
        if (record.getIdpeticionproducto() != null) {
            sql.SET("IDPETICIONPRODUCTO = #{record.idpeticionproducto,jdbcType=DECIMAL}");
        }
        
        if (record.getContadorCer() != null) {
            sql.SET("CONTADOR_CER = #{record.contadorCer,jdbcType=DECIMAL}");
        }
        
        if (record.getPrefijoCer() != null) {
            sql.SET("PREFIJO_CER = #{record.prefijoCer,jdbcType=VARCHAR}");
        }
        
        if (record.getSufijoCer() != null) {
            sql.SET("SUFIJO_CER = #{record.sufijoCer,jdbcType=VARCHAR}");
        }
        
        if (record.getFechadescarga() != null) {
            sql.SET("FECHADESCARGA = #{record.fechadescarga,jdbcType=TIMESTAMP}");
        }
        
        if (record.getFechacobro() != null) {
            sql.SET("FECHACOBRO = #{record.fechacobro,jdbcType=TIMESTAMP}");
        }
        
        if (record.getFechaenvio() != null) {
            sql.SET("FECHAENVIO = #{record.fechaenvio,jdbcType=TIMESTAMP}");
        }
        
        if (record.getFechaestado() != null) {
            sql.SET("FECHAESTADO = #{record.fechaestado,jdbcType=TIMESTAMP}");
        }
        
        if (record.getComentario() != null) {
            sql.SET("COMENTARIO = #{record.comentario,jdbcType=VARCHAR}");
        }
        
        if (record.getFechaentregainfo() != null) {
            sql.SET("FECHAENTREGAINFO = #{record.fechaentregainfo,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIdmetodosolicitud() != null) {
            sql.SET("IDMETODOSOLICITUD = #{record.idmetodosolicitud,jdbcType=DECIMAL}");
        }
        
        if (record.getUsucreacion() != null) {
            sql.SET("USUCREACION = #{record.usucreacion,jdbcType=DECIMAL}");
        }
        
        if (record.getFechacreacion() != null) {
            sql.SET("FECHACREACION = #{record.fechacreacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIdinstitucioncolegiacion() != null) {
            sql.SET("IDINSTITUCIONCOLEGIACION = #{record.idinstitucioncolegiacion,jdbcType=DECIMAL}");
        }
        
        if (record.getCboCodigo() != null) {
            sql.SET("CBO_CODIGO = #{record.cboCodigo,jdbcType=VARCHAR}");
        }
        
        if (record.getCodigoSucursal() != null) {
            sql.SET("CODIGO_SUCURSAL = #{record.codigoSucursal,jdbcType=VARCHAR}");
        }
        
        if (record.getAceptacesionmutualidad() != null) {
            sql.SET("ACEPTACESIONMUTUALIDAD = #{record.aceptacesionmutualidad,jdbcType=VARCHAR}");
        }
        
        if (record.getFicheroDocumento() != null) {
            sql.SET("FICHERO_DOCUMENTO = #{record.ficheroDocumento,jdbcType=VARCHAR}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CER_SOLICITUDCERTIFICADOS
     *
     * @mbg.generated Thu Oct 25 13:43:52 CEST 2018
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("CER_SOLICITUDCERTIFICADOS");
        
        sql.SET("IDINSTITUCION = #{record.idinstitucion,jdbcType=DECIMAL}");
        sql.SET("IDSOLICITUD = #{record.idsolicitud,jdbcType=DECIMAL}");
        sql.SET("FECHASOLICITUD = #{record.fechasolicitud,jdbcType=TIMESTAMP}");
        sql.SET("IDESTADOSOLICITUDCERTIFICADO = #{record.idestadosolicitudcertificado,jdbcType=DECIMAL}");
        sql.SET("IDINSTITUCION_SOL = #{record.idinstitucionSol,jdbcType=DECIMAL}");
        sql.SET("IDPERSONA_DES = #{record.idpersonaDes,jdbcType=DECIMAL}");
        sql.SET("IDESTADOCERTIFICADO = #{record.idestadocertificado,jdbcType=DECIMAL}");
        sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=TIMESTAMP}");
        sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
        sql.SET("DESCRIPCION = #{record.descripcion,jdbcType=VARCHAR}");
        sql.SET("IDPERSONA_DIR = #{record.idpersonaDir,jdbcType=DECIMAL}");
        sql.SET("IDDIRECCION_DIR = #{record.iddireccionDir,jdbcType=DECIMAL}");
        sql.SET("PPN_IDTIPOPRODUCTO = #{record.ppnIdtipoproducto,jdbcType=DECIMAL}");
        sql.SET("PPN_IDPRODUCTO = #{record.ppnIdproducto,jdbcType=DECIMAL}");
        sql.SET("FECHAEMISIONCERTIFICADO = #{record.fechaemisioncertificado,jdbcType=TIMESTAMP}");
        sql.SET("PPN_IDPRODUCTOINSTITUCION = #{record.ppnIdproductoinstitucion,jdbcType=DECIMAL}");
        sql.SET("IDTIPOENVIOS = #{record.idtipoenvios,jdbcType=DECIMAL}");
        sql.SET("IDINSTITUCIONORIGEN = #{record.idinstitucionorigen,jdbcType=DECIMAL}");
        sql.SET("IDINSTITUCIONDESTINO = #{record.idinstituciondestino,jdbcType=DECIMAL}");
        sql.SET("IDPETICIONPRODUCTO = #{record.idpeticionproducto,jdbcType=DECIMAL}");
        sql.SET("CONTADOR_CER = #{record.contadorCer,jdbcType=DECIMAL}");
        sql.SET("PREFIJO_CER = #{record.prefijoCer,jdbcType=VARCHAR}");
        sql.SET("SUFIJO_CER = #{record.sufijoCer,jdbcType=VARCHAR}");
        sql.SET("FECHADESCARGA = #{record.fechadescarga,jdbcType=TIMESTAMP}");
        sql.SET("FECHACOBRO = #{record.fechacobro,jdbcType=TIMESTAMP}");
        sql.SET("FECHAENVIO = #{record.fechaenvio,jdbcType=TIMESTAMP}");
        sql.SET("FECHAESTADO = #{record.fechaestado,jdbcType=TIMESTAMP}");
        sql.SET("COMENTARIO = #{record.comentario,jdbcType=VARCHAR}");
        sql.SET("FECHAENTREGAINFO = #{record.fechaentregainfo,jdbcType=TIMESTAMP}");
        sql.SET("IDMETODOSOLICITUD = #{record.idmetodosolicitud,jdbcType=DECIMAL}");
        sql.SET("USUCREACION = #{record.usucreacion,jdbcType=DECIMAL}");
        sql.SET("FECHACREACION = #{record.fechacreacion,jdbcType=TIMESTAMP}");
        sql.SET("IDINSTITUCIONCOLEGIACION = #{record.idinstitucioncolegiacion,jdbcType=DECIMAL}");
        sql.SET("CBO_CODIGO = #{record.cboCodigo,jdbcType=VARCHAR}");
        sql.SET("CODIGO_SUCURSAL = #{record.codigoSucursal,jdbcType=VARCHAR}");
        sql.SET("ACEPTACESIONMUTUALIDAD = #{record.aceptacesionmutualidad,jdbcType=VARCHAR}");
        sql.SET("FICHERO_DOCUMENTO = #{record.ficheroDocumento,jdbcType=VARCHAR}");
        
        CerSolicitudcertificadosExample example = (CerSolicitudcertificadosExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CER_SOLICITUDCERTIFICADOS
     *
     * @mbg.generated Thu Oct 25 13:43:52 CEST 2018
     */
    public String updateByPrimaryKeySelective(CerSolicitudcertificados record) {
        SQL sql = new SQL();
        sql.UPDATE("CER_SOLICITUDCERTIFICADOS");
        
        if (record.getFechasolicitud() != null) {
            sql.SET("FECHASOLICITUD = #{fechasolicitud,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIdestadosolicitudcertificado() != null) {
            sql.SET("IDESTADOSOLICITUDCERTIFICADO = #{idestadosolicitudcertificado,jdbcType=DECIMAL}");
        }
        
        if (record.getIdinstitucionSol() != null) {
            sql.SET("IDINSTITUCION_SOL = #{idinstitucionSol,jdbcType=DECIMAL}");
        }
        
        if (record.getIdpersonaDes() != null) {
            sql.SET("IDPERSONA_DES = #{idpersonaDes,jdbcType=DECIMAL}");
        }
        
        if (record.getIdestadocertificado() != null) {
            sql.SET("IDESTADOCERTIFICADO = #{idestadocertificado,jdbcType=DECIMAL}");
        }
        
        if (record.getFechamodificacion() != null) {
            sql.SET("FECHAMODIFICACION = #{fechamodificacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUsumodificacion() != null) {
            sql.SET("USUMODIFICACION = #{usumodificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getDescripcion() != null) {
            sql.SET("DESCRIPCION = #{descripcion,jdbcType=VARCHAR}");
        }
        
        if (record.getIdpersonaDir() != null) {
            sql.SET("IDPERSONA_DIR = #{idpersonaDir,jdbcType=DECIMAL}");
        }
        
        if (record.getIddireccionDir() != null) {
            sql.SET("IDDIRECCION_DIR = #{iddireccionDir,jdbcType=DECIMAL}");
        }
        
        if (record.getPpnIdtipoproducto() != null) {
            sql.SET("PPN_IDTIPOPRODUCTO = #{ppnIdtipoproducto,jdbcType=DECIMAL}");
        }
        
        if (record.getPpnIdproducto() != null) {
            sql.SET("PPN_IDPRODUCTO = #{ppnIdproducto,jdbcType=DECIMAL}");
        }
        
        if (record.getFechaemisioncertificado() != null) {
            sql.SET("FECHAEMISIONCERTIFICADO = #{fechaemisioncertificado,jdbcType=TIMESTAMP}");
        }
        
        if (record.getPpnIdproductoinstitucion() != null) {
            sql.SET("PPN_IDPRODUCTOINSTITUCION = #{ppnIdproductoinstitucion,jdbcType=DECIMAL}");
        }
        
        if (record.getIdtipoenvios() != null) {
            sql.SET("IDTIPOENVIOS = #{idtipoenvios,jdbcType=DECIMAL}");
        }
        
        if (record.getIdinstitucionorigen() != null) {
            sql.SET("IDINSTITUCIONORIGEN = #{idinstitucionorigen,jdbcType=DECIMAL}");
        }
        
        if (record.getIdinstituciondestino() != null) {
            sql.SET("IDINSTITUCIONDESTINO = #{idinstituciondestino,jdbcType=DECIMAL}");
        }
        
        if (record.getIdpeticionproducto() != null) {
            sql.SET("IDPETICIONPRODUCTO = #{idpeticionproducto,jdbcType=DECIMAL}");
        }
        
        if (record.getContadorCer() != null) {
            sql.SET("CONTADOR_CER = #{contadorCer,jdbcType=DECIMAL}");
        }
        
        if (record.getPrefijoCer() != null) {
            sql.SET("PREFIJO_CER = #{prefijoCer,jdbcType=VARCHAR}");
        }
        
        if (record.getSufijoCer() != null) {
            sql.SET("SUFIJO_CER = #{sufijoCer,jdbcType=VARCHAR}");
        }
        
        if (record.getFechadescarga() != null) {
            sql.SET("FECHADESCARGA = #{fechadescarga,jdbcType=TIMESTAMP}");
        }
        
        if (record.getFechacobro() != null) {
            sql.SET("FECHACOBRO = #{fechacobro,jdbcType=TIMESTAMP}");
        }
        
        if (record.getFechaenvio() != null) {
            sql.SET("FECHAENVIO = #{fechaenvio,jdbcType=TIMESTAMP}");
        }
        
        if (record.getFechaestado() != null) {
            sql.SET("FECHAESTADO = #{fechaestado,jdbcType=TIMESTAMP}");
        }
        
        if (record.getComentario() != null) {
            sql.SET("COMENTARIO = #{comentario,jdbcType=VARCHAR}");
        }
        
        if (record.getFechaentregainfo() != null) {
            sql.SET("FECHAENTREGAINFO = #{fechaentregainfo,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIdmetodosolicitud() != null) {
            sql.SET("IDMETODOSOLICITUD = #{idmetodosolicitud,jdbcType=DECIMAL}");
        }
        
        if (record.getUsucreacion() != null) {
            sql.SET("USUCREACION = #{usucreacion,jdbcType=DECIMAL}");
        }
        
        if (record.getFechacreacion() != null) {
            sql.SET("FECHACREACION = #{fechacreacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIdinstitucioncolegiacion() != null) {
            sql.SET("IDINSTITUCIONCOLEGIACION = #{idinstitucioncolegiacion,jdbcType=DECIMAL}");
        }
        
        if (record.getCboCodigo() != null) {
            sql.SET("CBO_CODIGO = #{cboCodigo,jdbcType=VARCHAR}");
        }
        
        if (record.getCodigoSucursal() != null) {
            sql.SET("CODIGO_SUCURSAL = #{codigoSucursal,jdbcType=VARCHAR}");
        }
        
        if (record.getAceptacesionmutualidad() != null) {
            sql.SET("ACEPTACESIONMUTUALIDAD = #{aceptacesionmutualidad,jdbcType=VARCHAR}");
        }
        
        if (record.getFicheroDocumento() != null) {
            sql.SET("FICHERO_DOCUMENTO = #{ficheroDocumento,jdbcType=VARCHAR}");
        }
        
        sql.WHERE("IDINSTITUCION = #{idinstitucion,jdbcType=DECIMAL}");
        sql.WHERE("IDSOLICITUD = #{idsolicitud,jdbcType=DECIMAL}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CER_SOLICITUDCERTIFICADOS
     *
     * @mbg.generated Thu Oct 25 13:43:52 CEST 2018
     */
    protected void applyWhere(SQL sql, CerSolicitudcertificadosExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}