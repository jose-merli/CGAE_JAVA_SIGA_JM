package org.itcgae.siga.db.mappers;

import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;
import org.itcgae.siga.db.entities.CenAcRespuesta;
import org.itcgae.siga.db.entities.CenAcRespuestaExample.Criteria;
import org.itcgae.siga.db.entities.CenAcRespuestaExample.Criterion;
import org.itcgae.siga.db.entities.CenAcRespuestaExample;

public class CenAcRespuestaSqlProvider {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_DESA.CEN_AC_RESPUESTA
	 * @mbg.generated  Wed Mar 14 18:23:45 CET 2018
	 */
	public String countByExample(CenAcRespuestaExample example) {
		SQL sql = new SQL();
		sql.SELECT("count(*)").FROM("CEN_AC_RESPUESTA");
		applyWhere(sql, example, false);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_DESA.CEN_AC_RESPUESTA
	 * @mbg.generated  Wed Mar 14 18:23:45 CET 2018
	 */
	public String deleteByExample(CenAcRespuestaExample example) {
		SQL sql = new SQL();
		sql.DELETE_FROM("CEN_AC_RESPUESTA");
		applyWhere(sql, example, false);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_DESA.CEN_AC_RESPUESTA
	 * @mbg.generated  Wed Mar 14 18:23:45 CET 2018
	 */
	public String insertSelective(CenAcRespuesta record) {
		SQL sql = new SQL();
		sql.INSERT_INTO("CEN_AC_RESPUESTA");
		if (record.getIdcenacrespuesta() != null) {
			sql.VALUES("IDCENACRESPUESTA", "#{idcenacrespuesta,jdbcType=DECIMAL}");
		}
		if (record.getIdcenacxml() != null) {
			sql.VALUES("IDCENACXML", "#{idcenacxml,jdbcType=DECIMAL}");
		}
		if (record.getNumeropeticion() != null) {
			sql.VALUES("NUMEROPETICION", "#{numeropeticion,jdbcType=VARCHAR}");
		}
		if (record.getLetradoNombre() != null) {
			sql.VALUES("LETRADO_NOMBRE", "#{letradoNombre,jdbcType=VARCHAR}");
		}
		if (record.getLetradoApe1() != null) {
			sql.VALUES("LETRADO_APE1", "#{letradoApe1,jdbcType=VARCHAR}");
		}
		if (record.getLetradoApe2() != null) {
			sql.VALUES("LETRADO_APE2", "#{letradoApe2,jdbcType=VARCHAR}");
		}
		if (record.getNumdoc() != null) {
			sql.VALUES("NUMDOC", "#{numdoc,jdbcType=VARCHAR}");
		}
		if (record.getEmail() != null) {
			sql.VALUES("EMAIL", "#{email,jdbcType=VARCHAR}");
		}
		if (record.getFecharespuesta() != null) {
			sql.VALUES("FECHARESPUESTA", "#{fecharespuesta,jdbcType=TIMESTAMP}");
		}
		if (record.getErrCodExt() != null) {
			sql.VALUES("ERR_COD_EXT", "#{errCodExt,jdbcType=VARCHAR}");
		}
		if (record.getErrDescExt() != null) {
			sql.VALUES("ERR_DESC_EXT", "#{errDescExt,jdbcType=VARCHAR}");
		}
		if (record.getErrCodInt() != null) {
			sql.VALUES("ERR_COD_INT", "#{errCodInt,jdbcType=VARCHAR}");
		}
		if (record.getErrDescInt() != null) {
			sql.VALUES("ERR_DESC_INT", "#{errDescInt,jdbcType=VARCHAR}");
		}
		if (record.getUsumodificacion() != null) {
			sql.VALUES("USUMODIFICACION", "#{usumodificacion,jdbcType=DECIMAL}");
		}
		if (record.getFechamodificacion() != null) {
			sql.VALUES("FECHAMODIFICACION", "#{fechamodificacion,jdbcType=TIMESTAMP}");
		}
		if (record.getIdcenacpeticion() != null) {
			sql.VALUES("IDCENACPETICION", "#{idcenacpeticion,jdbcType=DECIMAL}");
		}
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_DESA.CEN_AC_RESPUESTA
	 * @mbg.generated  Wed Mar 14 18:23:45 CET 2018
	 */
	public String selectByExample(CenAcRespuestaExample example) {
		SQL sql = new SQL();
		if (example != null && example.isDistinct()) {
			sql.SELECT_DISTINCT("IDCENACRESPUESTA");
		} else {
			sql.SELECT("IDCENACRESPUESTA");
		}
		sql.SELECT("IDCENACXML");
		sql.SELECT("NUMEROPETICION");
		sql.SELECT("LETRADO_NOMBRE");
		sql.SELECT("LETRADO_APE1");
		sql.SELECT("LETRADO_APE2");
		sql.SELECT("NUMDOC");
		sql.SELECT("EMAIL");
		sql.SELECT("FECHARESPUESTA");
		sql.SELECT("ERR_COD_EXT");
		sql.SELECT("ERR_DESC_EXT");
		sql.SELECT("ERR_COD_INT");
		sql.SELECT("ERR_DESC_INT");
		sql.SELECT("USUMODIFICACION");
		sql.SELECT("FECHAMODIFICACION");
		sql.SELECT("IDCENACPETICION");
		sql.FROM("CEN_AC_RESPUESTA");
		applyWhere(sql, example, false);
		if (example != null && example.getOrderByClause() != null) {
			sql.ORDER_BY(example.getOrderByClause());
		}
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_DESA.CEN_AC_RESPUESTA
	 * @mbg.generated  Wed Mar 14 18:23:45 CET 2018
	 */
	public String updateByExampleSelective(Map<String, Object> parameter) {
		CenAcRespuesta record = (CenAcRespuesta) parameter.get("record");
		CenAcRespuestaExample example = (CenAcRespuestaExample) parameter.get("example");
		SQL sql = new SQL();
		sql.UPDATE("CEN_AC_RESPUESTA");
		if (record.getIdcenacrespuesta() != null) {
			sql.SET("IDCENACRESPUESTA = #{record.idcenacrespuesta,jdbcType=DECIMAL}");
		}
		if (record.getIdcenacxml() != null) {
			sql.SET("IDCENACXML = #{record.idcenacxml,jdbcType=DECIMAL}");
		}
		if (record.getNumeropeticion() != null) {
			sql.SET("NUMEROPETICION = #{record.numeropeticion,jdbcType=VARCHAR}");
		}
		if (record.getLetradoNombre() != null) {
			sql.SET("LETRADO_NOMBRE = #{record.letradoNombre,jdbcType=VARCHAR}");
		}
		if (record.getLetradoApe1() != null) {
			sql.SET("LETRADO_APE1 = #{record.letradoApe1,jdbcType=VARCHAR}");
		}
		if (record.getLetradoApe2() != null) {
			sql.SET("LETRADO_APE2 = #{record.letradoApe2,jdbcType=VARCHAR}");
		}
		if (record.getNumdoc() != null) {
			sql.SET("NUMDOC = #{record.numdoc,jdbcType=VARCHAR}");
		}
		if (record.getEmail() != null) {
			sql.SET("EMAIL = #{record.email,jdbcType=VARCHAR}");
		}
		if (record.getFecharespuesta() != null) {
			sql.SET("FECHARESPUESTA = #{record.fecharespuesta,jdbcType=TIMESTAMP}");
		}
		if (record.getErrCodExt() != null) {
			sql.SET("ERR_COD_EXT = #{record.errCodExt,jdbcType=VARCHAR}");
		}
		if (record.getErrDescExt() != null) {
			sql.SET("ERR_DESC_EXT = #{record.errDescExt,jdbcType=VARCHAR}");
		}
		if (record.getErrCodInt() != null) {
			sql.SET("ERR_COD_INT = #{record.errCodInt,jdbcType=VARCHAR}");
		}
		if (record.getErrDescInt() != null) {
			sql.SET("ERR_DESC_INT = #{record.errDescInt,jdbcType=VARCHAR}");
		}
		if (record.getUsumodificacion() != null) {
			sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
		}
		if (record.getFechamodificacion() != null) {
			sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=TIMESTAMP}");
		}
		if (record.getIdcenacpeticion() != null) {
			sql.SET("IDCENACPETICION = #{record.idcenacpeticion,jdbcType=DECIMAL}");
		}
		applyWhere(sql, example, true);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_DESA.CEN_AC_RESPUESTA
	 * @mbg.generated  Wed Mar 14 18:23:45 CET 2018
	 */
	public String updateByExample(Map<String, Object> parameter) {
		SQL sql = new SQL();
		sql.UPDATE("CEN_AC_RESPUESTA");
		sql.SET("IDCENACRESPUESTA = #{record.idcenacrespuesta,jdbcType=DECIMAL}");
		sql.SET("IDCENACXML = #{record.idcenacxml,jdbcType=DECIMAL}");
		sql.SET("NUMEROPETICION = #{record.numeropeticion,jdbcType=VARCHAR}");
		sql.SET("LETRADO_NOMBRE = #{record.letradoNombre,jdbcType=VARCHAR}");
		sql.SET("LETRADO_APE1 = #{record.letradoApe1,jdbcType=VARCHAR}");
		sql.SET("LETRADO_APE2 = #{record.letradoApe2,jdbcType=VARCHAR}");
		sql.SET("NUMDOC = #{record.numdoc,jdbcType=VARCHAR}");
		sql.SET("EMAIL = #{record.email,jdbcType=VARCHAR}");
		sql.SET("FECHARESPUESTA = #{record.fecharespuesta,jdbcType=TIMESTAMP}");
		sql.SET("ERR_COD_EXT = #{record.errCodExt,jdbcType=VARCHAR}");
		sql.SET("ERR_DESC_EXT = #{record.errDescExt,jdbcType=VARCHAR}");
		sql.SET("ERR_COD_INT = #{record.errCodInt,jdbcType=VARCHAR}");
		sql.SET("ERR_DESC_INT = #{record.errDescInt,jdbcType=VARCHAR}");
		sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
		sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=TIMESTAMP}");
		sql.SET("IDCENACPETICION = #{record.idcenacpeticion,jdbcType=DECIMAL}");
		CenAcRespuestaExample example = (CenAcRespuestaExample) parameter.get("example");
		applyWhere(sql, example, true);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_DESA.CEN_AC_RESPUESTA
	 * @mbg.generated  Wed Mar 14 18:23:45 CET 2018
	 */
	public String updateByPrimaryKeySelective(CenAcRespuesta record) {
		SQL sql = new SQL();
		sql.UPDATE("CEN_AC_RESPUESTA");
		if (record.getIdcenacxml() != null) {
			sql.SET("IDCENACXML = #{idcenacxml,jdbcType=DECIMAL}");
		}
		if (record.getNumeropeticion() != null) {
			sql.SET("NUMEROPETICION = #{numeropeticion,jdbcType=VARCHAR}");
		}
		if (record.getLetradoNombre() != null) {
			sql.SET("LETRADO_NOMBRE = #{letradoNombre,jdbcType=VARCHAR}");
		}
		if (record.getLetradoApe1() != null) {
			sql.SET("LETRADO_APE1 = #{letradoApe1,jdbcType=VARCHAR}");
		}
		if (record.getLetradoApe2() != null) {
			sql.SET("LETRADO_APE2 = #{letradoApe2,jdbcType=VARCHAR}");
		}
		if (record.getNumdoc() != null) {
			sql.SET("NUMDOC = #{numdoc,jdbcType=VARCHAR}");
		}
		if (record.getEmail() != null) {
			sql.SET("EMAIL = #{email,jdbcType=VARCHAR}");
		}
		if (record.getFecharespuesta() != null) {
			sql.SET("FECHARESPUESTA = #{fecharespuesta,jdbcType=TIMESTAMP}");
		}
		if (record.getErrCodExt() != null) {
			sql.SET("ERR_COD_EXT = #{errCodExt,jdbcType=VARCHAR}");
		}
		if (record.getErrDescExt() != null) {
			sql.SET("ERR_DESC_EXT = #{errDescExt,jdbcType=VARCHAR}");
		}
		if (record.getErrCodInt() != null) {
			sql.SET("ERR_COD_INT = #{errCodInt,jdbcType=VARCHAR}");
		}
		if (record.getErrDescInt() != null) {
			sql.SET("ERR_DESC_INT = #{errDescInt,jdbcType=VARCHAR}");
		}
		if (record.getUsumodificacion() != null) {
			sql.SET("USUMODIFICACION = #{usumodificacion,jdbcType=DECIMAL}");
		}
		if (record.getFechamodificacion() != null) {
			sql.SET("FECHAMODIFICACION = #{fechamodificacion,jdbcType=TIMESTAMP}");
		}
		if (record.getIdcenacpeticion() != null) {
			sql.SET("IDCENACPETICION = #{idcenacpeticion,jdbcType=DECIMAL}");
		}
		sql.WHERE("IDCENACRESPUESTA = #{idcenacrespuesta,jdbcType=DECIMAL}");
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_DESA.CEN_AC_RESPUESTA
	 * @mbg.generated  Wed Mar 14 18:23:45 CET 2018
	 */
	protected void applyWhere(SQL sql, CenAcRespuestaExample example, boolean includeExamplePhrase) {
		if (example == null) {
			return;
		}
		String parmPhrase1;
		String parmPhrase1_th;
		String parmPhrase2;
		String parmPhrase2_th;
		String parmPhrase3;
		String parmPhrase3_th;
		if (includeExamplePhrase) {
			parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
			parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
			parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
			parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
			parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
			parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
		} else {
			parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
			parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
			parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
			parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
			parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
			parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
		}
		StringBuilder sb = new StringBuilder();
		List<Criteria> oredCriteria = example.getOredCriteria();
		boolean firstCriteria = true;
		for (int i = 0; i < oredCriteria.size(); i++) {
			Criteria criteria = oredCriteria.get(i);
			if (criteria.isValid()) {
				if (firstCriteria) {
					firstCriteria = false;
				} else {
					sb.append(" or ");
				}
				sb.append('(');
				List<Criterion> criterions = criteria.getAllCriteria();
				boolean firstCriterion = true;
				for (int j = 0; j < criterions.size(); j++) {
					Criterion criterion = criterions.get(j);
					if (firstCriterion) {
						firstCriterion = false;
					} else {
						sb.append(" and ");
					}
					if (criterion.isNoValue()) {
						sb.append(criterion.getCondition());
					} else if (criterion.isSingleValue()) {
						if (criterion.getTypeHandler() == null) {
							sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
						} else {
							sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,
									criterion.getTypeHandler()));
						}
					} else if (criterion.isBetweenValue()) {
						if (criterion.getTypeHandler() == null) {
							sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
						} else {
							sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j,
									criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
						}
					} else if (criterion.isListValue()) {
						sb.append(criterion.getCondition());
						sb.append(" (");
						List<?> listItems = (List<?>) criterion.getValue();
						boolean comma = false;
						for (int k = 0; k < listItems.size(); k++) {
							if (comma) {
								sb.append(", ");
							} else {
								comma = true;
							}
							if (criterion.getTypeHandler() == null) {
								sb.append(String.format(parmPhrase3, i, j, k));
							} else {
								sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
							}
						}
						sb.append(')');
					}
				}
				sb.append(')');
			}
		}
		if (sb.length() > 0) {
			sql.WHERE(sb.toString());
		}
	}
}