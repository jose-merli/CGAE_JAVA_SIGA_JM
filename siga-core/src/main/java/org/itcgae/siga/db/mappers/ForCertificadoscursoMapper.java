package org.itcgae.siga.db.mappers;

import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;
import org.itcgae.siga.db.entities.ForCertificadoscurso;
import org.itcgae.siga.db.entities.ForCertificadoscursoExample;

public interface ForCertificadoscursoMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.FOR_CERTIFICADOSCURSO
	 * @mbg.generated  Tue Jan 08 11:26:04 CET 2019
	 */
	@SelectProvider(type = ForCertificadoscursoSqlProvider.class, method = "countByExample")
	long countByExample(ForCertificadoscursoExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.FOR_CERTIFICADOSCURSO
	 * @mbg.generated  Tue Jan 08 11:26:04 CET 2019
	 */
	@DeleteProvider(type = ForCertificadoscursoSqlProvider.class, method = "deleteByExample")
	int deleteByExample(ForCertificadoscursoExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.FOR_CERTIFICADOSCURSO
	 * @mbg.generated  Tue Jan 08 11:26:04 CET 2019
	 */
	@Delete({ "delete from FOR_CERTIFICADOSCURSO",
			"where IDCERTIFICADOCURSO = #{idcertificadocurso,jdbcType=DECIMAL}" })
	int deleteByPrimaryKey(Long idcertificadocurso);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.FOR_CERTIFICADOSCURSO
	 * @mbg.generated  Tue Jan 08 11:26:04 CET 2019
	 */
	@Insert({ "insert into FOR_CERTIFICADOSCURSO (IDCERTIFICADOCURSO, IDCURSO, ",
			"USUMODIFICACION, FECHAMODIFICACION, ", "FECHABAJA, IDINSTITUCION, ", "IDTIPOPRODUCTO, IDPRODUCTO, ",
			"IDPRODUCTOINSTITUCION, IDCALIFICACION, ", "PRECIO)",
			"values (#{idcertificadocurso,jdbcType=DECIMAL}, #{idcurso,jdbcType=DECIMAL}, ",
			"#{usumodificacion,jdbcType=DECIMAL}, #{fechamodificacion,jdbcType=TIMESTAMP}, ",
			"#{fechabaja,jdbcType=TIMESTAMP}, #{idinstitucion,jdbcType=DECIMAL}, ",
			"#{idtipoproducto,jdbcType=DECIMAL}, #{idproducto,jdbcType=DECIMAL}, ",
			"#{idproductoinstitucion,jdbcType=DECIMAL}, #{idcalificacion,jdbcType=DECIMAL}, ",
			"#{precio,jdbcType=DECIMAL})" })
	@SelectKey(statement = "SELECT SEQ_FOR_CERTIFICADOSCURSO.NEXTVAL FROM DUAL", keyProperty = "idcertificadocurso", before = true, resultType = Long.class)
	int insert(ForCertificadoscurso record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.FOR_CERTIFICADOSCURSO
	 * @mbg.generated  Tue Jan 08 11:26:04 CET 2019
	 */
	@InsertProvider(type = ForCertificadoscursoSqlProvider.class, method = "insertSelective")
	@SelectKey(statement = "SELECT SEQ_FOR_CERTIFICADOSCURSO.NEXTVAL FROM DUAL", keyProperty = "idcertificadocurso", before = true, resultType = Long.class)
	int insertSelective(ForCertificadoscurso record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.FOR_CERTIFICADOSCURSO
	 * @mbg.generated  Tue Jan 08 11:26:04 CET 2019
	 */
	@SelectProvider(type = ForCertificadoscursoSqlProvider.class, method = "selectByExample")
	@Results({
			@Result(column = "IDCERTIFICADOCURSO", property = "idcertificadocurso", jdbcType = JdbcType.DECIMAL, id = true),
			@Result(column = "IDCURSO", property = "idcurso", jdbcType = JdbcType.DECIMAL),
			@Result(column = "USUMODIFICACION", property = "usumodificacion", jdbcType = JdbcType.DECIMAL),
			@Result(column = "FECHAMODIFICACION", property = "fechamodificacion", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "FECHABAJA", property = "fechabaja", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "IDINSTITUCION", property = "idinstitucion", jdbcType = JdbcType.DECIMAL),
			@Result(column = "IDTIPOPRODUCTO", property = "idtipoproducto", jdbcType = JdbcType.DECIMAL),
			@Result(column = "IDPRODUCTO", property = "idproducto", jdbcType = JdbcType.DECIMAL),
			@Result(column = "IDPRODUCTOINSTITUCION", property = "idproductoinstitucion", jdbcType = JdbcType.DECIMAL),
			@Result(column = "IDCALIFICACION", property = "idcalificacion", jdbcType = JdbcType.DECIMAL),
			@Result(column = "PRECIO", property = "precio", jdbcType = JdbcType.DECIMAL) })
	List<ForCertificadoscurso> selectByExample(ForCertificadoscursoExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.FOR_CERTIFICADOSCURSO
	 * @mbg.generated  Tue Jan 08 11:26:04 CET 2019
	 */
	@Select({ "select", "IDCERTIFICADOCURSO, IDCURSO, USUMODIFICACION, FECHAMODIFICACION, FECHABAJA, ",
			"IDINSTITUCION, IDTIPOPRODUCTO, IDPRODUCTO, IDPRODUCTOINSTITUCION, IDCALIFICACION, ", "PRECIO",
			"from FOR_CERTIFICADOSCURSO", "where IDCERTIFICADOCURSO = #{idcertificadocurso,jdbcType=DECIMAL}" })
	@Results({
			@Result(column = "IDCERTIFICADOCURSO", property = "idcertificadocurso", jdbcType = JdbcType.DECIMAL, id = true),
			@Result(column = "IDCURSO", property = "idcurso", jdbcType = JdbcType.DECIMAL),
			@Result(column = "USUMODIFICACION", property = "usumodificacion", jdbcType = JdbcType.DECIMAL),
			@Result(column = "FECHAMODIFICACION", property = "fechamodificacion", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "FECHABAJA", property = "fechabaja", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "IDINSTITUCION", property = "idinstitucion", jdbcType = JdbcType.DECIMAL),
			@Result(column = "IDTIPOPRODUCTO", property = "idtipoproducto", jdbcType = JdbcType.DECIMAL),
			@Result(column = "IDPRODUCTO", property = "idproducto", jdbcType = JdbcType.DECIMAL),
			@Result(column = "IDPRODUCTOINSTITUCION", property = "idproductoinstitucion", jdbcType = JdbcType.DECIMAL),
			@Result(column = "IDCALIFICACION", property = "idcalificacion", jdbcType = JdbcType.DECIMAL),
			@Result(column = "PRECIO", property = "precio", jdbcType = JdbcType.DECIMAL) })
	ForCertificadoscurso selectByPrimaryKey(Long idcertificadocurso);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.FOR_CERTIFICADOSCURSO
	 * @mbg.generated  Tue Jan 08 11:26:04 CET 2019
	 */
	@UpdateProvider(type = ForCertificadoscursoSqlProvider.class, method = "updateByExampleSelective")
	int updateByExampleSelective(@Param("record") ForCertificadoscurso record,
			@Param("example") ForCertificadoscursoExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.FOR_CERTIFICADOSCURSO
	 * @mbg.generated  Tue Jan 08 11:26:04 CET 2019
	 */
	@UpdateProvider(type = ForCertificadoscursoSqlProvider.class, method = "updateByExample")
	int updateByExample(@Param("record") ForCertificadoscurso record,
			@Param("example") ForCertificadoscursoExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.FOR_CERTIFICADOSCURSO
	 * @mbg.generated  Tue Jan 08 11:26:04 CET 2019
	 */
	@UpdateProvider(type = ForCertificadoscursoSqlProvider.class, method = "updateByPrimaryKeySelective")
	int updateByPrimaryKeySelective(ForCertificadoscurso record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.FOR_CERTIFICADOSCURSO
	 * @mbg.generated  Tue Jan 08 11:26:04 CET 2019
	 */
	@Update({ "update FOR_CERTIFICADOSCURSO", "set IDCURSO = #{idcurso,jdbcType=DECIMAL},",
			"USUMODIFICACION = #{usumodificacion,jdbcType=DECIMAL},",
			"FECHAMODIFICACION = #{fechamodificacion,jdbcType=TIMESTAMP},",
			"FECHABAJA = #{fechabaja,jdbcType=TIMESTAMP},", "IDINSTITUCION = #{idinstitucion,jdbcType=DECIMAL},",
			"IDTIPOPRODUCTO = #{idtipoproducto,jdbcType=DECIMAL},", "IDPRODUCTO = #{idproducto,jdbcType=DECIMAL},",
			"IDPRODUCTOINSTITUCION = #{idproductoinstitucion,jdbcType=DECIMAL},",
			"IDCALIFICACION = #{idcalificacion,jdbcType=DECIMAL},", "PRECIO = #{precio,jdbcType=DECIMAL}",
			"where IDCERTIFICADOCURSO = #{idcertificadocurso,jdbcType=DECIMAL}" })
	int updateByPrimaryKey(ForCertificadoscurso record);
}