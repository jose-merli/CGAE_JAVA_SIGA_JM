package org.itcgae.siga.db.mappers;

import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;
import org.itcgae.siga.db.entities.ScsCvGuardiacolegiado;
import org.itcgae.siga.db.entities.ScsCvGuardiacolegiadoExample.Criteria;
import org.itcgae.siga.db.entities.ScsCvGuardiacolegiadoExample.Criterion;
import org.itcgae.siga.db.entities.ScsCvGuardiacolegiadoExample;

public class ScsCvGuardiacolegiadoSqlProvider {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.SCS_CV_GUARDIACOLEGIADO
     *
     * @mbg.generated Wed Sep 06 15:38:18 CEST 2023
     */
    public String countByExample(ScsCvGuardiacolegiadoExample example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("SCS_CV_GUARDIACOLEGIADO");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.SCS_CV_GUARDIACOLEGIADO
     *
     * @mbg.generated Wed Sep 06 15:38:18 CEST 2023
     */
    public String deleteByExample(ScsCvGuardiacolegiadoExample example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("SCS_CV_GUARDIACOLEGIADO");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.SCS_CV_GUARDIACOLEGIADO
     *
     * @mbg.generated Wed Sep 06 15:38:18 CEST 2023
     */
    public String insertSelective(ScsCvGuardiacolegiado row) {
        SQL sql = new SQL();
        sql.INSERT_INTO("SCS_CV_GUARDIACOLEGIADO");
        
        if (row.getIdscsguardiacolegiado() != null) {
            sql.VALUES("IDSCSGUARDIACOLEGIADO", "#{idscsguardiacolegiado,jdbcType=NUMERIC}");
        }
        
        if (row.getIdinstitucion() != null) {
            sql.VALUES("IDINSTITUCION", "#{idinstitucion,jdbcType=NUMERIC}");
        }
        
        if (row.getIdguardia() != null) {
            sql.VALUES("IDGUARDIA", "#{idguardia,jdbcType=NUMERIC}");
        }
        
        if (row.getFechaguardia() != null) {
            sql.VALUES("FECHAGUARDIA", "#{fechaguardia,jdbcType=TIMESTAMP}");
        }
        
        if (row.getNombreguardia() != null) {
            sql.VALUES("NOMBREGUARDIA", "#{nombreguardia,jdbcType=VARCHAR}");
        }
        
        if (row.getOrdenguardia() != null) {
            sql.VALUES("ORDENGUARDIA", "#{ordenguardia,jdbcType=NUMERIC}");
        }
        
        if (row.getFecharecepcion() != null) {
            sql.VALUES("FECHARECEPCION", "#{fecharecepcion,jdbcType=TIMESTAMP}");
        }
        
        if (row.getNumerocolegiado() != null) {
            sql.VALUES("NUMEROCOLEGIADO", "#{numerocolegiado,jdbcType=VARCHAR}");
        }
        
        if (row.getNombrecolegiado() != null) {
            sql.VALUES("NOMBRECOLEGIADO", "#{nombrecolegiado,jdbcType=VARCHAR}");
        }
        
        if (row.getTelefono1() != null) {
            sql.VALUES("TELEFONO1", "#{telefono1,jdbcType=VARCHAR}");
        }
        
        if (row.getTelefono2() != null) {
            sql.VALUES("TELEFONO2", "#{telefono2,jdbcType=VARCHAR}");
        }
        
        if (row.getTelefonomovil() != null) {
            sql.VALUES("TELEFONOMOVIL", "#{telefonomovil,jdbcType=VARCHAR}");
        }
        
        if (row.getAccion() != null) {
            sql.VALUES("ACCION", "#{accion,jdbcType=NUMERIC}");
        }
        
        if (row.getEmail() != null) {
            sql.VALUES("EMAIL", "#{email,jdbcType=VARCHAR}");
        }
        
        if (row.getIdturno() != null) {
            sql.VALUES("IDTURNO", "#{idturno,jdbcType=NUMERIC}");
        }
        
        if (row.getIdpersona() != null) {
            sql.VALUES("IDPERSONA", "#{idpersona,jdbcType=NUMERIC}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.SCS_CV_GUARDIACOLEGIADO
     *
     * @mbg.generated Wed Sep 06 15:38:18 CEST 2023
     */
    public String selectByExample(ScsCvGuardiacolegiadoExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("IDSCSGUARDIACOLEGIADO");
        } else {
            sql.SELECT("IDSCSGUARDIACOLEGIADO");
        }
        sql.SELECT("IDINSTITUCION");
        sql.SELECT("IDGUARDIA");
        sql.SELECT("FECHAGUARDIA");
        sql.SELECT("NOMBREGUARDIA");
        sql.SELECT("ORDENGUARDIA");
        sql.SELECT("FECHARECEPCION");
        sql.SELECT("NUMEROCOLEGIADO");
        sql.SELECT("NOMBRECOLEGIADO");
        sql.SELECT("TELEFONO1");
        sql.SELECT("TELEFONO2");
        sql.SELECT("TELEFONOMOVIL");
        sql.SELECT("ACCION");
        sql.SELECT("EMAIL");
        sql.SELECT("IDTURNO");
        sql.SELECT("IDPERSONA");
        sql.FROM("SCS_CV_GUARDIACOLEGIADO");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.SCS_CV_GUARDIACOLEGIADO
     *
     * @mbg.generated Wed Sep 06 15:38:18 CEST 2023
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        ScsCvGuardiacolegiado row = (ScsCvGuardiacolegiado) parameter.get("row");
        ScsCvGuardiacolegiadoExample example = (ScsCvGuardiacolegiadoExample) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("SCS_CV_GUARDIACOLEGIADO");
        
        if (row.getIdscsguardiacolegiado() != null) {
            sql.SET("IDSCSGUARDIACOLEGIADO = #{row.idscsguardiacolegiado,jdbcType=NUMERIC}");
        }
        
        if (row.getIdinstitucion() != null) {
            sql.SET("IDINSTITUCION = #{row.idinstitucion,jdbcType=NUMERIC}");
        }
        
        if (row.getIdguardia() != null) {
            sql.SET("IDGUARDIA = #{row.idguardia,jdbcType=NUMERIC}");
        }
        
        if (row.getFechaguardia() != null) {
            sql.SET("FECHAGUARDIA = #{row.fechaguardia,jdbcType=TIMESTAMP}");
        }
        
        if (row.getNombreguardia() != null) {
            sql.SET("NOMBREGUARDIA = #{row.nombreguardia,jdbcType=VARCHAR}");
        }
        
        if (row.getOrdenguardia() != null) {
            sql.SET("ORDENGUARDIA = #{row.ordenguardia,jdbcType=NUMERIC}");
        }
        
        if (row.getFecharecepcion() != null) {
            sql.SET("FECHARECEPCION = #{row.fecharecepcion,jdbcType=TIMESTAMP}");
        }
        
        if (row.getNumerocolegiado() != null) {
            sql.SET("NUMEROCOLEGIADO = #{row.numerocolegiado,jdbcType=VARCHAR}");
        }
        
        if (row.getNombrecolegiado() != null) {
            sql.SET("NOMBRECOLEGIADO = #{row.nombrecolegiado,jdbcType=VARCHAR}");
        }
        
        if (row.getTelefono1() != null) {
            sql.SET("TELEFONO1 = #{row.telefono1,jdbcType=VARCHAR}");
        }
        
        if (row.getTelefono2() != null) {
            sql.SET("TELEFONO2 = #{row.telefono2,jdbcType=VARCHAR}");
        }
        
        if (row.getTelefonomovil() != null) {
            sql.SET("TELEFONOMOVIL = #{row.telefonomovil,jdbcType=VARCHAR}");
        }
        
        if (row.getAccion() != null) {
            sql.SET("ACCION = #{row.accion,jdbcType=NUMERIC}");
        }
        
        if (row.getEmail() != null) {
            sql.SET("EMAIL = #{row.email,jdbcType=VARCHAR}");
        }
        
        if (row.getIdturno() != null) {
            sql.SET("IDTURNO = #{row.idturno,jdbcType=NUMERIC}");
        }
        
        if (row.getIdpersona() != null) {
            sql.SET("IDPERSONA = #{row.idpersona,jdbcType=NUMERIC}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.SCS_CV_GUARDIACOLEGIADO
     *
     * @mbg.generated Wed Sep 06 15:38:18 CEST 2023
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("SCS_CV_GUARDIACOLEGIADO");
        
        sql.SET("IDSCSGUARDIACOLEGIADO = #{row.idscsguardiacolegiado,jdbcType=NUMERIC}");
        sql.SET("IDINSTITUCION = #{row.idinstitucion,jdbcType=NUMERIC}");
        sql.SET("IDGUARDIA = #{row.idguardia,jdbcType=NUMERIC}");
        sql.SET("FECHAGUARDIA = #{row.fechaguardia,jdbcType=TIMESTAMP}");
        sql.SET("NOMBREGUARDIA = #{row.nombreguardia,jdbcType=VARCHAR}");
        sql.SET("ORDENGUARDIA = #{row.ordenguardia,jdbcType=NUMERIC}");
        sql.SET("FECHARECEPCION = #{row.fecharecepcion,jdbcType=TIMESTAMP}");
        sql.SET("NUMEROCOLEGIADO = #{row.numerocolegiado,jdbcType=VARCHAR}");
        sql.SET("NOMBRECOLEGIADO = #{row.nombrecolegiado,jdbcType=VARCHAR}");
        sql.SET("TELEFONO1 = #{row.telefono1,jdbcType=VARCHAR}");
        sql.SET("TELEFONO2 = #{row.telefono2,jdbcType=VARCHAR}");
        sql.SET("TELEFONOMOVIL = #{row.telefonomovil,jdbcType=VARCHAR}");
        sql.SET("ACCION = #{row.accion,jdbcType=NUMERIC}");
        sql.SET("EMAIL = #{row.email,jdbcType=VARCHAR}");
        sql.SET("IDTURNO = #{row.idturno,jdbcType=NUMERIC}");
        sql.SET("IDPERSONA = #{row.idpersona,jdbcType=NUMERIC}");
        
        ScsCvGuardiacolegiadoExample example = (ScsCvGuardiacolegiadoExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.SCS_CV_GUARDIACOLEGIADO
     *
     * @mbg.generated Wed Sep 06 15:38:18 CEST 2023
     */
    public String updateByPrimaryKeySelective(ScsCvGuardiacolegiado row) {
        SQL sql = new SQL();
        sql.UPDATE("SCS_CV_GUARDIACOLEGIADO");
        
        if (row.getIdinstitucion() != null) {
            sql.SET("IDINSTITUCION = #{idinstitucion,jdbcType=NUMERIC}");
        }
        
        if (row.getIdguardia() != null) {
            sql.SET("IDGUARDIA = #{idguardia,jdbcType=NUMERIC}");
        }
        
        if (row.getFechaguardia() != null) {
            sql.SET("FECHAGUARDIA = #{fechaguardia,jdbcType=TIMESTAMP}");
        }
        
        if (row.getNombreguardia() != null) {
            sql.SET("NOMBREGUARDIA = #{nombreguardia,jdbcType=VARCHAR}");
        }
        
        if (row.getOrdenguardia() != null) {
            sql.SET("ORDENGUARDIA = #{ordenguardia,jdbcType=NUMERIC}");
        }
        
        if (row.getFecharecepcion() != null) {
            sql.SET("FECHARECEPCION = #{fecharecepcion,jdbcType=TIMESTAMP}");
        }
        
        if (row.getNumerocolegiado() != null) {
            sql.SET("NUMEROCOLEGIADO = #{numerocolegiado,jdbcType=VARCHAR}");
        }
        
        if (row.getNombrecolegiado() != null) {
            sql.SET("NOMBRECOLEGIADO = #{nombrecolegiado,jdbcType=VARCHAR}");
        }
        
        if (row.getTelefono1() != null) {
            sql.SET("TELEFONO1 = #{telefono1,jdbcType=VARCHAR}");
        }
        
        if (row.getTelefono2() != null) {
            sql.SET("TELEFONO2 = #{telefono2,jdbcType=VARCHAR}");
        }
        
        if (row.getTelefonomovil() != null) {
            sql.SET("TELEFONOMOVIL = #{telefonomovil,jdbcType=VARCHAR}");
        }
        
        if (row.getAccion() != null) {
            sql.SET("ACCION = #{accion,jdbcType=NUMERIC}");
        }
        
        if (row.getEmail() != null) {
            sql.SET("EMAIL = #{email,jdbcType=VARCHAR}");
        }
        
        if (row.getIdturno() != null) {
            sql.SET("IDTURNO = #{idturno,jdbcType=NUMERIC}");
        }
        
        if (row.getIdpersona() != null) {
            sql.SET("IDPERSONA = #{idpersona,jdbcType=NUMERIC}");
        }
        
        sql.WHERE("IDSCSGUARDIACOLEGIADO = #{idscsguardiacolegiado,jdbcType=NUMERIC}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.SCS_CV_GUARDIACOLEGIADO
     *
     * @mbg.generated Wed Sep 06 15:38:18 CEST 2023
     */
    protected void applyWhere(SQL sql, ScsCvGuardiacolegiadoExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}