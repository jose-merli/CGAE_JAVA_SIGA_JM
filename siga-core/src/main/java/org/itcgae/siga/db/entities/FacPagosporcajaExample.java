package org.itcgae.siga.db.entities;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class FacPagosporcajaExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USCGAE.FAC_PAGOSPORCAJA
     *
     * @mbg.generated Wed Sep 15 14:32:29 CEST 2021
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USCGAE.FAC_PAGOSPORCAJA
     *
     * @mbg.generated Wed Sep 15 14:32:29 CEST 2021
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USCGAE.FAC_PAGOSPORCAJA
     *
     * @mbg.generated Wed Sep 15 14:32:29 CEST 2021
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_PAGOSPORCAJA
     *
     * @mbg.generated Wed Sep 15 14:32:29 CEST 2021
     */
    public FacPagosporcajaExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_PAGOSPORCAJA
     *
     * @mbg.generated Wed Sep 15 14:32:29 CEST 2021
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_PAGOSPORCAJA
     *
     * @mbg.generated Wed Sep 15 14:32:29 CEST 2021
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_PAGOSPORCAJA
     *
     * @mbg.generated Wed Sep 15 14:32:29 CEST 2021
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_PAGOSPORCAJA
     *
     * @mbg.generated Wed Sep 15 14:32:29 CEST 2021
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_PAGOSPORCAJA
     *
     * @mbg.generated Wed Sep 15 14:32:29 CEST 2021
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_PAGOSPORCAJA
     *
     * @mbg.generated Wed Sep 15 14:32:29 CEST 2021
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_PAGOSPORCAJA
     *
     * @mbg.generated Wed Sep 15 14:32:29 CEST 2021
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_PAGOSPORCAJA
     *
     * @mbg.generated Wed Sep 15 14:32:29 CEST 2021
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_PAGOSPORCAJA
     *
     * @mbg.generated Wed Sep 15 14:32:29 CEST 2021
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FAC_PAGOSPORCAJA
     *
     * @mbg.generated Wed Sep 15 14:32:29 CEST 2021
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE.FAC_PAGOSPORCAJA
     *
     * @mbg.generated Wed Sep 15 14:32:29 CEST 2021
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdinstitucionIsNull() {
            addCriterion("IDINSTITUCION is null");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionIsNotNull() {
            addCriterion("IDINSTITUCION is not null");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionEqualTo(Short value) {
            addCriterion("IDINSTITUCION =", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionNotEqualTo(Short value) {
            addCriterion("IDINSTITUCION <>", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionGreaterThan(Short value) {
            addCriterion("IDINSTITUCION >", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionGreaterThanOrEqualTo(Short value) {
            addCriterion("IDINSTITUCION >=", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionLessThan(Short value) {
            addCriterion("IDINSTITUCION <", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionLessThanOrEqualTo(Short value) {
            addCriterion("IDINSTITUCION <=", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionIn(List<Short> values) {
            addCriterion("IDINSTITUCION in", values, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionNotIn(List<Short> values) {
            addCriterion("IDINSTITUCION not in", values, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionBetween(Short value1, Short value2) {
            addCriterion("IDINSTITUCION between", value1, value2, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionNotBetween(Short value1, Short value2) {
            addCriterion("IDINSTITUCION not between", value1, value2, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdfacturaIsNull() {
            addCriterion("IDFACTURA is null");
            return (Criteria) this;
        }

        public Criteria andIdfacturaIsNotNull() {
            addCriterion("IDFACTURA is not null");
            return (Criteria) this;
        }

        public Criteria andIdfacturaEqualTo(String value) {
            addCriterion("IDFACTURA =", value, "idfactura");
            return (Criteria) this;
        }

        public Criteria andIdfacturaNotEqualTo(String value) {
            addCriterion("IDFACTURA <>", value, "idfactura");
            return (Criteria) this;
        }

        public Criteria andIdfacturaGreaterThan(String value) {
            addCriterion("IDFACTURA >", value, "idfactura");
            return (Criteria) this;
        }

        public Criteria andIdfacturaGreaterThanOrEqualTo(String value) {
            addCriterion("IDFACTURA >=", value, "idfactura");
            return (Criteria) this;
        }

        public Criteria andIdfacturaLessThan(String value) {
            addCriterion("IDFACTURA <", value, "idfactura");
            return (Criteria) this;
        }

        public Criteria andIdfacturaLessThanOrEqualTo(String value) {
            addCriterion("IDFACTURA <=", value, "idfactura");
            return (Criteria) this;
        }

        public Criteria andIdfacturaLike(String value) {
            addCriterion("IDFACTURA like", value, "idfactura");
            return (Criteria) this;
        }

        public Criteria andIdfacturaNotLike(String value) {
            addCriterion("IDFACTURA not like", value, "idfactura");
            return (Criteria) this;
        }

        public Criteria andIdfacturaIn(List<String> values) {
            addCriterion("IDFACTURA in", values, "idfactura");
            return (Criteria) this;
        }

        public Criteria andIdfacturaNotIn(List<String> values) {
            addCriterion("IDFACTURA not in", values, "idfactura");
            return (Criteria) this;
        }

        public Criteria andIdfacturaBetween(String value1, String value2) {
            addCriterion("IDFACTURA between", value1, value2, "idfactura");
            return (Criteria) this;
        }

        public Criteria andIdfacturaNotBetween(String value1, String value2) {
            addCriterion("IDFACTURA not between", value1, value2, "idfactura");
            return (Criteria) this;
        }

        public Criteria andIdpagoporcajaIsNull() {
            addCriterion("IDPAGOPORCAJA is null");
            return (Criteria) this;
        }

        public Criteria andIdpagoporcajaIsNotNull() {
            addCriterion("IDPAGOPORCAJA is not null");
            return (Criteria) this;
        }

        public Criteria andIdpagoporcajaEqualTo(Short value) {
            addCriterion("IDPAGOPORCAJA =", value, "idpagoporcaja");
            return (Criteria) this;
        }

        public Criteria andIdpagoporcajaNotEqualTo(Short value) {
            addCriterion("IDPAGOPORCAJA <>", value, "idpagoporcaja");
            return (Criteria) this;
        }

        public Criteria andIdpagoporcajaGreaterThan(Short value) {
            addCriterion("IDPAGOPORCAJA >", value, "idpagoporcaja");
            return (Criteria) this;
        }

        public Criteria andIdpagoporcajaGreaterThanOrEqualTo(Short value) {
            addCriterion("IDPAGOPORCAJA >=", value, "idpagoporcaja");
            return (Criteria) this;
        }

        public Criteria andIdpagoporcajaLessThan(Short value) {
            addCriterion("IDPAGOPORCAJA <", value, "idpagoporcaja");
            return (Criteria) this;
        }

        public Criteria andIdpagoporcajaLessThanOrEqualTo(Short value) {
            addCriterion("IDPAGOPORCAJA <=", value, "idpagoporcaja");
            return (Criteria) this;
        }

        public Criteria andIdpagoporcajaIn(List<Short> values) {
            addCriterion("IDPAGOPORCAJA in", values, "idpagoporcaja");
            return (Criteria) this;
        }

        public Criteria andIdpagoporcajaNotIn(List<Short> values) {
            addCriterion("IDPAGOPORCAJA not in", values, "idpagoporcaja");
            return (Criteria) this;
        }

        public Criteria andIdpagoporcajaBetween(Short value1, Short value2) {
            addCriterion("IDPAGOPORCAJA between", value1, value2, "idpagoporcaja");
            return (Criteria) this;
        }

        public Criteria andIdpagoporcajaNotBetween(Short value1, Short value2) {
            addCriterion("IDPAGOPORCAJA not between", value1, value2, "idpagoporcaja");
            return (Criteria) this;
        }

        public Criteria andFechaIsNull() {
            addCriterion("FECHA is null");
            return (Criteria) this;
        }

        public Criteria andFechaIsNotNull() {
            addCriterion("FECHA is not null");
            return (Criteria) this;
        }

        public Criteria andFechaEqualTo(Date value) {
            addCriterion("FECHA =", value, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaNotEqualTo(Date value) {
            addCriterion("FECHA <>", value, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaGreaterThan(Date value) {
            addCriterion("FECHA >", value, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaGreaterThanOrEqualTo(Date value) {
            addCriterion("FECHA >=", value, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaLessThan(Date value) {
            addCriterion("FECHA <", value, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaLessThanOrEqualTo(Date value) {
            addCriterion("FECHA <=", value, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaIn(List<Date> values) {
            addCriterion("FECHA in", values, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaNotIn(List<Date> values) {
            addCriterion("FECHA not in", values, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaBetween(Date value1, Date value2) {
            addCriterion("FECHA between", value1, value2, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaNotBetween(Date value1, Date value2) {
            addCriterion("FECHA not between", value1, value2, "fecha");
            return (Criteria) this;
        }

        public Criteria andContabilizadoIsNull() {
            addCriterion("CONTABILIZADO is null");
            return (Criteria) this;
        }

        public Criteria andContabilizadoIsNotNull() {
            addCriterion("CONTABILIZADO is not null");
            return (Criteria) this;
        }

        public Criteria andContabilizadoEqualTo(String value) {
            addCriterion("CONTABILIZADO =", value, "contabilizado");
            return (Criteria) this;
        }

        public Criteria andContabilizadoNotEqualTo(String value) {
            addCriterion("CONTABILIZADO <>", value, "contabilizado");
            return (Criteria) this;
        }

        public Criteria andContabilizadoGreaterThan(String value) {
            addCriterion("CONTABILIZADO >", value, "contabilizado");
            return (Criteria) this;
        }

        public Criteria andContabilizadoGreaterThanOrEqualTo(String value) {
            addCriterion("CONTABILIZADO >=", value, "contabilizado");
            return (Criteria) this;
        }

        public Criteria andContabilizadoLessThan(String value) {
            addCriterion("CONTABILIZADO <", value, "contabilizado");
            return (Criteria) this;
        }

        public Criteria andContabilizadoLessThanOrEqualTo(String value) {
            addCriterion("CONTABILIZADO <=", value, "contabilizado");
            return (Criteria) this;
        }

        public Criteria andContabilizadoLike(String value) {
            addCriterion("CONTABILIZADO like", value, "contabilizado");
            return (Criteria) this;
        }

        public Criteria andContabilizadoNotLike(String value) {
            addCriterion("CONTABILIZADO not like", value, "contabilizado");
            return (Criteria) this;
        }

        public Criteria andContabilizadoIn(List<String> values) {
            addCriterion("CONTABILIZADO in", values, "contabilizado");
            return (Criteria) this;
        }

        public Criteria andContabilizadoNotIn(List<String> values) {
            addCriterion("CONTABILIZADO not in", values, "contabilizado");
            return (Criteria) this;
        }

        public Criteria andContabilizadoBetween(String value1, String value2) {
            addCriterion("CONTABILIZADO between", value1, value2, "contabilizado");
            return (Criteria) this;
        }

        public Criteria andContabilizadoNotBetween(String value1, String value2) {
            addCriterion("CONTABILIZADO not between", value1, value2, "contabilizado");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionIsNull() {
            addCriterion("FECHAMODIFICACION is null");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionIsNotNull() {
            addCriterion("FECHAMODIFICACION is not null");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION =", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionNotEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION <>", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionGreaterThan(Date value) {
            addCriterion("FECHAMODIFICACION >", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionGreaterThanOrEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION >=", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionLessThan(Date value) {
            addCriterion("FECHAMODIFICACION <", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionLessThanOrEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION <=", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionIn(List<Date> values) {
            addCriterion("FECHAMODIFICACION in", values, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionNotIn(List<Date> values) {
            addCriterion("FECHAMODIFICACION not in", values, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionBetween(Date value1, Date value2) {
            addCriterion("FECHAMODIFICACION between", value1, value2, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionNotBetween(Date value1, Date value2) {
            addCriterion("FECHAMODIFICACION not between", value1, value2, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionIsNull() {
            addCriterion("USUMODIFICACION is null");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionIsNotNull() {
            addCriterion("USUMODIFICACION is not null");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionEqualTo(Integer value) {
            addCriterion("USUMODIFICACION =", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionNotEqualTo(Integer value) {
            addCriterion("USUMODIFICACION <>", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionGreaterThan(Integer value) {
            addCriterion("USUMODIFICACION >", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionGreaterThanOrEqualTo(Integer value) {
            addCriterion("USUMODIFICACION >=", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionLessThan(Integer value) {
            addCriterion("USUMODIFICACION <", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionLessThanOrEqualTo(Integer value) {
            addCriterion("USUMODIFICACION <=", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionIn(List<Integer> values) {
            addCriterion("USUMODIFICACION in", values, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionNotIn(List<Integer> values) {
            addCriterion("USUMODIFICACION not in", values, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionBetween(Integer value1, Integer value2) {
            addCriterion("USUMODIFICACION between", value1, value2, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionNotBetween(Integer value1, Integer value2) {
            addCriterion("USUMODIFICACION not between", value1, value2, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andImporteIsNull() {
            addCriterion("IMPORTE is null");
            return (Criteria) this;
        }

        public Criteria andImporteIsNotNull() {
            addCriterion("IMPORTE is not null");
            return (Criteria) this;
        }

        public Criteria andImporteEqualTo(BigDecimal value) {
            addCriterion("IMPORTE =", value, "importe");
            return (Criteria) this;
        }

        public Criteria andImporteNotEqualTo(BigDecimal value) {
            addCriterion("IMPORTE <>", value, "importe");
            return (Criteria) this;
        }

        public Criteria andImporteGreaterThan(BigDecimal value) {
            addCriterion("IMPORTE >", value, "importe");
            return (Criteria) this;
        }

        public Criteria andImporteGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("IMPORTE >=", value, "importe");
            return (Criteria) this;
        }

        public Criteria andImporteLessThan(BigDecimal value) {
            addCriterion("IMPORTE <", value, "importe");
            return (Criteria) this;
        }

        public Criteria andImporteLessThanOrEqualTo(BigDecimal value) {
            addCriterion("IMPORTE <=", value, "importe");
            return (Criteria) this;
        }

        public Criteria andImporteIn(List<BigDecimal> values) {
            addCriterion("IMPORTE in", values, "importe");
            return (Criteria) this;
        }

        public Criteria andImporteNotIn(List<BigDecimal> values) {
            addCriterion("IMPORTE not in", values, "importe");
            return (Criteria) this;
        }

        public Criteria andImporteBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("IMPORTE between", value1, value2, "importe");
            return (Criteria) this;
        }

        public Criteria andImporteNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("IMPORTE not between", value1, value2, "importe");
            return (Criteria) this;
        }

        public Criteria andTarjetaIsNull() {
            addCriterion("TARJETA is null");
            return (Criteria) this;
        }

        public Criteria andTarjetaIsNotNull() {
            addCriterion("TARJETA is not null");
            return (Criteria) this;
        }

        public Criteria andTarjetaEqualTo(String value) {
            addCriterion("TARJETA =", value, "tarjeta");
            return (Criteria) this;
        }

        public Criteria andTarjetaNotEqualTo(String value) {
            addCriterion("TARJETA <>", value, "tarjeta");
            return (Criteria) this;
        }

        public Criteria andTarjetaGreaterThan(String value) {
            addCriterion("TARJETA >", value, "tarjeta");
            return (Criteria) this;
        }

        public Criteria andTarjetaGreaterThanOrEqualTo(String value) {
            addCriterion("TARJETA >=", value, "tarjeta");
            return (Criteria) this;
        }

        public Criteria andTarjetaLessThan(String value) {
            addCriterion("TARJETA <", value, "tarjeta");
            return (Criteria) this;
        }

        public Criteria andTarjetaLessThanOrEqualTo(String value) {
            addCriterion("TARJETA <=", value, "tarjeta");
            return (Criteria) this;
        }

        public Criteria andTarjetaLike(String value) {
            addCriterion("TARJETA like", value, "tarjeta");
            return (Criteria) this;
        }

        public Criteria andTarjetaNotLike(String value) {
            addCriterion("TARJETA not like", value, "tarjeta");
            return (Criteria) this;
        }

        public Criteria andTarjetaIn(List<String> values) {
            addCriterion("TARJETA in", values, "tarjeta");
            return (Criteria) this;
        }

        public Criteria andTarjetaNotIn(List<String> values) {
            addCriterion("TARJETA not in", values, "tarjeta");
            return (Criteria) this;
        }

        public Criteria andTarjetaBetween(String value1, String value2) {
            addCriterion("TARJETA between", value1, value2, "tarjeta");
            return (Criteria) this;
        }

        public Criteria andTarjetaNotBetween(String value1, String value2) {
            addCriterion("TARJETA not between", value1, value2, "tarjeta");
            return (Criteria) this;
        }

        public Criteria andIdabonoIsNull() {
            addCriterion("IDABONO is null");
            return (Criteria) this;
        }

        public Criteria andIdabonoIsNotNull() {
            addCriterion("IDABONO is not null");
            return (Criteria) this;
        }

        public Criteria andIdabonoEqualTo(Long value) {
            addCriterion("IDABONO =", value, "idabono");
            return (Criteria) this;
        }

        public Criteria andIdabonoNotEqualTo(Long value) {
            addCriterion("IDABONO <>", value, "idabono");
            return (Criteria) this;
        }

        public Criteria andIdabonoGreaterThan(Long value) {
            addCriterion("IDABONO >", value, "idabono");
            return (Criteria) this;
        }

        public Criteria andIdabonoGreaterThanOrEqualTo(Long value) {
            addCriterion("IDABONO >=", value, "idabono");
            return (Criteria) this;
        }

        public Criteria andIdabonoLessThan(Long value) {
            addCriterion("IDABONO <", value, "idabono");
            return (Criteria) this;
        }

        public Criteria andIdabonoLessThanOrEqualTo(Long value) {
            addCriterion("IDABONO <=", value, "idabono");
            return (Criteria) this;
        }

        public Criteria andIdabonoIn(List<Long> values) {
            addCriterion("IDABONO in", values, "idabono");
            return (Criteria) this;
        }

        public Criteria andIdabonoNotIn(List<Long> values) {
            addCriterion("IDABONO not in", values, "idabono");
            return (Criteria) this;
        }

        public Criteria andIdabonoBetween(Long value1, Long value2) {
            addCriterion("IDABONO between", value1, value2, "idabono");
            return (Criteria) this;
        }

        public Criteria andIdabonoNotBetween(Long value1, Long value2) {
            addCriterion("IDABONO not between", value1, value2, "idabono");
            return (Criteria) this;
        }

        public Criteria andIdpagoabonoIsNull() {
            addCriterion("IDPAGOABONO is null");
            return (Criteria) this;
        }

        public Criteria andIdpagoabonoIsNotNull() {
            addCriterion("IDPAGOABONO is not null");
            return (Criteria) this;
        }

        public Criteria andIdpagoabonoEqualTo(Long value) {
            addCriterion("IDPAGOABONO =", value, "idpagoabono");
            return (Criteria) this;
        }

        public Criteria andIdpagoabonoNotEqualTo(Long value) {
            addCriterion("IDPAGOABONO <>", value, "idpagoabono");
            return (Criteria) this;
        }

        public Criteria andIdpagoabonoGreaterThan(Long value) {
            addCriterion("IDPAGOABONO >", value, "idpagoabono");
            return (Criteria) this;
        }

        public Criteria andIdpagoabonoGreaterThanOrEqualTo(Long value) {
            addCriterion("IDPAGOABONO >=", value, "idpagoabono");
            return (Criteria) this;
        }

        public Criteria andIdpagoabonoLessThan(Long value) {
            addCriterion("IDPAGOABONO <", value, "idpagoabono");
            return (Criteria) this;
        }

        public Criteria andIdpagoabonoLessThanOrEqualTo(Long value) {
            addCriterion("IDPAGOABONO <=", value, "idpagoabono");
            return (Criteria) this;
        }

        public Criteria andIdpagoabonoIn(List<Long> values) {
            addCriterion("IDPAGOABONO in", values, "idpagoabono");
            return (Criteria) this;
        }

        public Criteria andIdpagoabonoNotIn(List<Long> values) {
            addCriterion("IDPAGOABONO not in", values, "idpagoabono");
            return (Criteria) this;
        }

        public Criteria andIdpagoabonoBetween(Long value1, Long value2) {
            addCriterion("IDPAGOABONO between", value1, value2, "idpagoabono");
            return (Criteria) this;
        }

        public Criteria andIdpagoabonoNotBetween(Long value1, Long value2) {
            addCriterion("IDPAGOABONO not between", value1, value2, "idpagoabono");
            return (Criteria) this;
        }

        public Criteria andObservacionesIsNull() {
            addCriterion("OBSERVACIONES is null");
            return (Criteria) this;
        }

        public Criteria andObservacionesIsNotNull() {
            addCriterion("OBSERVACIONES is not null");
            return (Criteria) this;
        }

        public Criteria andObservacionesEqualTo(String value) {
            addCriterion("OBSERVACIONES =", value, "observaciones");
            return (Criteria) this;
        }

        public Criteria andObservacionesNotEqualTo(String value) {
            addCriterion("OBSERVACIONES <>", value, "observaciones");
            return (Criteria) this;
        }

        public Criteria andObservacionesGreaterThan(String value) {
            addCriterion("OBSERVACIONES >", value, "observaciones");
            return (Criteria) this;
        }

        public Criteria andObservacionesGreaterThanOrEqualTo(String value) {
            addCriterion("OBSERVACIONES >=", value, "observaciones");
            return (Criteria) this;
        }

        public Criteria andObservacionesLessThan(String value) {
            addCriterion("OBSERVACIONES <", value, "observaciones");
            return (Criteria) this;
        }

        public Criteria andObservacionesLessThanOrEqualTo(String value) {
            addCriterion("OBSERVACIONES <=", value, "observaciones");
            return (Criteria) this;
        }

        public Criteria andObservacionesLike(String value) {
            addCriterion("OBSERVACIONES like", value, "observaciones");
            return (Criteria) this;
        }

        public Criteria andObservacionesNotLike(String value) {
            addCriterion("OBSERVACIONES not like", value, "observaciones");
            return (Criteria) this;
        }

        public Criteria andObservacionesIn(List<String> values) {
            addCriterion("OBSERVACIONES in", values, "observaciones");
            return (Criteria) this;
        }

        public Criteria andObservacionesNotIn(List<String> values) {
            addCriterion("OBSERVACIONES not in", values, "observaciones");
            return (Criteria) this;
        }

        public Criteria andObservacionesBetween(String value1, String value2) {
            addCriterion("OBSERVACIONES between", value1, value2, "observaciones");
            return (Criteria) this;
        }

        public Criteria andObservacionesNotBetween(String value1, String value2) {
            addCriterion("OBSERVACIONES not between", value1, value2, "observaciones");
            return (Criteria) this;
        }

        public Criteria andNumeroautorizacionIsNull() {
            addCriterion("NUMEROAUTORIZACION is null");
            return (Criteria) this;
        }

        public Criteria andNumeroautorizacionIsNotNull() {
            addCriterion("NUMEROAUTORIZACION is not null");
            return (Criteria) this;
        }

        public Criteria andNumeroautorizacionEqualTo(Integer value) {
            addCriterion("NUMEROAUTORIZACION =", value, "numeroautorizacion");
            return (Criteria) this;
        }

        public Criteria andNumeroautorizacionNotEqualTo(Integer value) {
            addCriterion("NUMEROAUTORIZACION <>", value, "numeroautorizacion");
            return (Criteria) this;
        }

        public Criteria andNumeroautorizacionGreaterThan(Integer value) {
            addCriterion("NUMEROAUTORIZACION >", value, "numeroautorizacion");
            return (Criteria) this;
        }

        public Criteria andNumeroautorizacionGreaterThanOrEqualTo(Integer value) {
            addCriterion("NUMEROAUTORIZACION >=", value, "numeroautorizacion");
            return (Criteria) this;
        }

        public Criteria andNumeroautorizacionLessThan(Integer value) {
            addCriterion("NUMEROAUTORIZACION <", value, "numeroautorizacion");
            return (Criteria) this;
        }

        public Criteria andNumeroautorizacionLessThanOrEqualTo(Integer value) {
            addCriterion("NUMEROAUTORIZACION <=", value, "numeroautorizacion");
            return (Criteria) this;
        }

        public Criteria andNumeroautorizacionIn(List<Integer> values) {
            addCriterion("NUMEROAUTORIZACION in", values, "numeroautorizacion");
            return (Criteria) this;
        }

        public Criteria andNumeroautorizacionNotIn(List<Integer> values) {
            addCriterion("NUMEROAUTORIZACION not in", values, "numeroautorizacion");
            return (Criteria) this;
        }

        public Criteria andNumeroautorizacionBetween(Integer value1, Integer value2) {
            addCriterion("NUMEROAUTORIZACION between", value1, value2, "numeroautorizacion");
            return (Criteria) this;
        }

        public Criteria andNumeroautorizacionNotBetween(Integer value1, Integer value2) {
            addCriterion("NUMEROAUTORIZACION not between", value1, value2, "numeroautorizacion");
            return (Criteria) this;
        }

        public Criteria andReferenciaIsNull() {
            addCriterion("REFERENCIA is null");
            return (Criteria) this;
        }

        public Criteria andReferenciaIsNotNull() {
            addCriterion("REFERENCIA is not null");
            return (Criteria) this;
        }

        public Criteria andReferenciaEqualTo(BigDecimal value) {
            addCriterion("REFERENCIA =", value, "referencia");
            return (Criteria) this;
        }

        public Criteria andReferenciaNotEqualTo(BigDecimal value) {
            addCriterion("REFERENCIA <>", value, "referencia");
            return (Criteria) this;
        }

        public Criteria andReferenciaGreaterThan(BigDecimal value) {
            addCriterion("REFERENCIA >", value, "referencia");
            return (Criteria) this;
        }

        public Criteria andReferenciaGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("REFERENCIA >=", value, "referencia");
            return (Criteria) this;
        }

        public Criteria andReferenciaLessThan(BigDecimal value) {
            addCriterion("REFERENCIA <", value, "referencia");
            return (Criteria) this;
        }

        public Criteria andReferenciaLessThanOrEqualTo(BigDecimal value) {
            addCriterion("REFERENCIA <=", value, "referencia");
            return (Criteria) this;
        }

        public Criteria andReferenciaIn(List<BigDecimal> values) {
            addCriterion("REFERENCIA in", values, "referencia");
            return (Criteria) this;
        }

        public Criteria andReferenciaNotIn(List<BigDecimal> values) {
            addCriterion("REFERENCIA not in", values, "referencia");
            return (Criteria) this;
        }

        public Criteria andReferenciaBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("REFERENCIA between", value1, value2, "referencia");
            return (Criteria) this;
        }

        public Criteria andReferenciaNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("REFERENCIA not between", value1, value2, "referencia");
            return (Criteria) this;
        }

        public Criteria andTipoapunteIsNull() {
            addCriterion("TIPOAPUNTE is null");
            return (Criteria) this;
        }

        public Criteria andTipoapunteIsNotNull() {
            addCriterion("TIPOAPUNTE is not null");
            return (Criteria) this;
        }

        public Criteria andTipoapunteEqualTo(String value) {
            addCriterion("TIPOAPUNTE =", value, "tipoapunte");
            return (Criteria) this;
        }

        public Criteria andTipoapunteNotEqualTo(String value) {
            addCriterion("TIPOAPUNTE <>", value, "tipoapunte");
            return (Criteria) this;
        }

        public Criteria andTipoapunteGreaterThan(String value) {
            addCriterion("TIPOAPUNTE >", value, "tipoapunte");
            return (Criteria) this;
        }

        public Criteria andTipoapunteGreaterThanOrEqualTo(String value) {
            addCriterion("TIPOAPUNTE >=", value, "tipoapunte");
            return (Criteria) this;
        }

        public Criteria andTipoapunteLessThan(String value) {
            addCriterion("TIPOAPUNTE <", value, "tipoapunte");
            return (Criteria) this;
        }

        public Criteria andTipoapunteLessThanOrEqualTo(String value) {
            addCriterion("TIPOAPUNTE <=", value, "tipoapunte");
            return (Criteria) this;
        }

        public Criteria andTipoapunteLike(String value) {
            addCriterion("TIPOAPUNTE like", value, "tipoapunte");
            return (Criteria) this;
        }

        public Criteria andTipoapunteNotLike(String value) {
            addCriterion("TIPOAPUNTE not like", value, "tipoapunte");
            return (Criteria) this;
        }

        public Criteria andTipoapunteIn(List<String> values) {
            addCriterion("TIPOAPUNTE in", values, "tipoapunte");
            return (Criteria) this;
        }

        public Criteria andTipoapunteNotIn(List<String> values) {
            addCriterion("TIPOAPUNTE not in", values, "tipoapunte");
            return (Criteria) this;
        }

        public Criteria andTipoapunteBetween(String value1, String value2) {
            addCriterion("TIPOAPUNTE between", value1, value2, "tipoapunte");
            return (Criteria) this;
        }

        public Criteria andTipoapunteNotBetween(String value1, String value2) {
            addCriterion("TIPOAPUNTE not between", value1, value2, "tipoapunte");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE.FAC_PAGOSPORCAJA
     *
     * @mbg.generated do_not_delete_during_merge Wed Sep 15 14:32:29 CEST 2021
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE.FAC_PAGOSPORCAJA
     *
     * @mbg.generated Wed Sep 15 14:32:29 CEST 2021
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}