package org.itcgae.siga.db.entities;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ScsDocumentacionsojExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USCGAE_INT.SCS_DOCUMENTACIONSOJ
     *
     * @mbg.generated Tue Oct 11 12:59:09 CEST 2022
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USCGAE_INT.SCS_DOCUMENTACIONSOJ
     *
     * @mbg.generated Tue Oct 11 12:59:09 CEST 2022
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USCGAE_INT.SCS_DOCUMENTACIONSOJ
     *
     * @mbg.generated Tue Oct 11 12:59:09 CEST 2022
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.SCS_DOCUMENTACIONSOJ
     *
     * @mbg.generated Tue Oct 11 12:59:09 CEST 2022
     */
    public ScsDocumentacionsojExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.SCS_DOCUMENTACIONSOJ
     *
     * @mbg.generated Tue Oct 11 12:59:09 CEST 2022
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.SCS_DOCUMENTACIONSOJ
     *
     * @mbg.generated Tue Oct 11 12:59:09 CEST 2022
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.SCS_DOCUMENTACIONSOJ
     *
     * @mbg.generated Tue Oct 11 12:59:09 CEST 2022
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.SCS_DOCUMENTACIONSOJ
     *
     * @mbg.generated Tue Oct 11 12:59:09 CEST 2022
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.SCS_DOCUMENTACIONSOJ
     *
     * @mbg.generated Tue Oct 11 12:59:09 CEST 2022
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.SCS_DOCUMENTACIONSOJ
     *
     * @mbg.generated Tue Oct 11 12:59:09 CEST 2022
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.SCS_DOCUMENTACIONSOJ
     *
     * @mbg.generated Tue Oct 11 12:59:09 CEST 2022
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.SCS_DOCUMENTACIONSOJ
     *
     * @mbg.generated Tue Oct 11 12:59:09 CEST 2022
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.SCS_DOCUMENTACIONSOJ
     *
     * @mbg.generated Tue Oct 11 12:59:09 CEST 2022
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_INT.SCS_DOCUMENTACIONSOJ
     *
     * @mbg.generated Tue Oct 11 12:59:09 CEST 2022
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE_INT.SCS_DOCUMENTACIONSOJ
     *
     * @mbg.generated Tue Oct 11 12:59:09 CEST 2022
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdinstitucionIsNull() {
            addCriterion("IDINSTITUCION is null");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionIsNotNull() {
            addCriterion("IDINSTITUCION is not null");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionEqualTo(Short value) {
            addCriterion("IDINSTITUCION =", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionNotEqualTo(Short value) {
            addCriterion("IDINSTITUCION <>", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionGreaterThan(Short value) {
            addCriterion("IDINSTITUCION >", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionGreaterThanOrEqualTo(Short value) {
            addCriterion("IDINSTITUCION >=", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionLessThan(Short value) {
            addCriterion("IDINSTITUCION <", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionLessThanOrEqualTo(Short value) {
            addCriterion("IDINSTITUCION <=", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionIn(List<Short> values) {
            addCriterion("IDINSTITUCION in", values, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionNotIn(List<Short> values) {
            addCriterion("IDINSTITUCION not in", values, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionBetween(Short value1, Short value2) {
            addCriterion("IDINSTITUCION between", value1, value2, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionNotBetween(Short value1, Short value2) {
            addCriterion("IDINSTITUCION not between", value1, value2, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdtiposojIsNull() {
            addCriterion("IDTIPOSOJ is null");
            return (Criteria) this;
        }

        public Criteria andIdtiposojIsNotNull() {
            addCriterion("IDTIPOSOJ is not null");
            return (Criteria) this;
        }

        public Criteria andIdtiposojEqualTo(Short value) {
            addCriterion("IDTIPOSOJ =", value, "idtiposoj");
            return (Criteria) this;
        }

        public Criteria andIdtiposojNotEqualTo(Short value) {
            addCriterion("IDTIPOSOJ <>", value, "idtiposoj");
            return (Criteria) this;
        }

        public Criteria andIdtiposojGreaterThan(Short value) {
            addCriterion("IDTIPOSOJ >", value, "idtiposoj");
            return (Criteria) this;
        }

        public Criteria andIdtiposojGreaterThanOrEqualTo(Short value) {
            addCriterion("IDTIPOSOJ >=", value, "idtiposoj");
            return (Criteria) this;
        }

        public Criteria andIdtiposojLessThan(Short value) {
            addCriterion("IDTIPOSOJ <", value, "idtiposoj");
            return (Criteria) this;
        }

        public Criteria andIdtiposojLessThanOrEqualTo(Short value) {
            addCriterion("IDTIPOSOJ <=", value, "idtiposoj");
            return (Criteria) this;
        }

        public Criteria andIdtiposojIn(List<Short> values) {
            addCriterion("IDTIPOSOJ in", values, "idtiposoj");
            return (Criteria) this;
        }

        public Criteria andIdtiposojNotIn(List<Short> values) {
            addCriterion("IDTIPOSOJ not in", values, "idtiposoj");
            return (Criteria) this;
        }

        public Criteria andIdtiposojBetween(Short value1, Short value2) {
            addCriterion("IDTIPOSOJ between", value1, value2, "idtiposoj");
            return (Criteria) this;
        }

        public Criteria andIdtiposojNotBetween(Short value1, Short value2) {
            addCriterion("IDTIPOSOJ not between", value1, value2, "idtiposoj");
            return (Criteria) this;
        }

        public Criteria andAnioIsNull() {
            addCriterion("ANIO is null");
            return (Criteria) this;
        }

        public Criteria andAnioIsNotNull() {
            addCriterion("ANIO is not null");
            return (Criteria) this;
        }

        public Criteria andAnioEqualTo(Short value) {
            addCriterion("ANIO =", value, "anio");
            return (Criteria) this;
        }

        public Criteria andAnioNotEqualTo(Short value) {
            addCriterion("ANIO <>", value, "anio");
            return (Criteria) this;
        }

        public Criteria andAnioGreaterThan(Short value) {
            addCriterion("ANIO >", value, "anio");
            return (Criteria) this;
        }

        public Criteria andAnioGreaterThanOrEqualTo(Short value) {
            addCriterion("ANIO >=", value, "anio");
            return (Criteria) this;
        }

        public Criteria andAnioLessThan(Short value) {
            addCriterion("ANIO <", value, "anio");
            return (Criteria) this;
        }

        public Criteria andAnioLessThanOrEqualTo(Short value) {
            addCriterion("ANIO <=", value, "anio");
            return (Criteria) this;
        }

        public Criteria andAnioIn(List<Short> values) {
            addCriterion("ANIO in", values, "anio");
            return (Criteria) this;
        }

        public Criteria andAnioNotIn(List<Short> values) {
            addCriterion("ANIO not in", values, "anio");
            return (Criteria) this;
        }

        public Criteria andAnioBetween(Short value1, Short value2) {
            addCriterion("ANIO between", value1, value2, "anio");
            return (Criteria) this;
        }

        public Criteria andAnioNotBetween(Short value1, Short value2) {
            addCriterion("ANIO not between", value1, value2, "anio");
            return (Criteria) this;
        }

        public Criteria andNumeroIsNull() {
            addCriterion("NUMERO is null");
            return (Criteria) this;
        }

        public Criteria andNumeroIsNotNull() {
            addCriterion("NUMERO is not null");
            return (Criteria) this;
        }

        public Criteria andNumeroEqualTo(Long value) {
            addCriterion("NUMERO =", value, "numero");
            return (Criteria) this;
        }

        public Criteria andNumeroNotEqualTo(Long value) {
            addCriterion("NUMERO <>", value, "numero");
            return (Criteria) this;
        }

        public Criteria andNumeroGreaterThan(Long value) {
            addCriterion("NUMERO >", value, "numero");
            return (Criteria) this;
        }

        public Criteria andNumeroGreaterThanOrEqualTo(Long value) {
            addCriterion("NUMERO >=", value, "numero");
            return (Criteria) this;
        }

        public Criteria andNumeroLessThan(Long value) {
            addCriterion("NUMERO <", value, "numero");
            return (Criteria) this;
        }

        public Criteria andNumeroLessThanOrEqualTo(Long value) {
            addCriterion("NUMERO <=", value, "numero");
            return (Criteria) this;
        }

        public Criteria andNumeroIn(List<Long> values) {
            addCriterion("NUMERO in", values, "numero");
            return (Criteria) this;
        }

        public Criteria andNumeroNotIn(List<Long> values) {
            addCriterion("NUMERO not in", values, "numero");
            return (Criteria) this;
        }

        public Criteria andNumeroBetween(Long value1, Long value2) {
            addCriterion("NUMERO between", value1, value2, "numero");
            return (Criteria) this;
        }

        public Criteria andNumeroNotBetween(Long value1, Long value2) {
            addCriterion("NUMERO not between", value1, value2, "numero");
            return (Criteria) this;
        }

        public Criteria andIddocumentacionIsNull() {
            addCriterion("IDDOCUMENTACION is null");
            return (Criteria) this;
        }

        public Criteria andIddocumentacionIsNotNull() {
            addCriterion("IDDOCUMENTACION is not null");
            return (Criteria) this;
        }

        public Criteria andIddocumentacionEqualTo(Short value) {
            addCriterion("IDDOCUMENTACION =", value, "iddocumentacion");
            return (Criteria) this;
        }

        public Criteria andIddocumentacionNotEqualTo(Short value) {
            addCriterion("IDDOCUMENTACION <>", value, "iddocumentacion");
            return (Criteria) this;
        }

        public Criteria andIddocumentacionGreaterThan(Short value) {
            addCriterion("IDDOCUMENTACION >", value, "iddocumentacion");
            return (Criteria) this;
        }

        public Criteria andIddocumentacionGreaterThanOrEqualTo(Short value) {
            addCriterion("IDDOCUMENTACION >=", value, "iddocumentacion");
            return (Criteria) this;
        }

        public Criteria andIddocumentacionLessThan(Short value) {
            addCriterion("IDDOCUMENTACION <", value, "iddocumentacion");
            return (Criteria) this;
        }

        public Criteria andIddocumentacionLessThanOrEqualTo(Short value) {
            addCriterion("IDDOCUMENTACION <=", value, "iddocumentacion");
            return (Criteria) this;
        }

        public Criteria andIddocumentacionIn(List<Short> values) {
            addCriterion("IDDOCUMENTACION in", values, "iddocumentacion");
            return (Criteria) this;
        }

        public Criteria andIddocumentacionNotIn(List<Short> values) {
            addCriterion("IDDOCUMENTACION not in", values, "iddocumentacion");
            return (Criteria) this;
        }

        public Criteria andIddocumentacionBetween(Short value1, Short value2) {
            addCriterion("IDDOCUMENTACION between", value1, value2, "iddocumentacion");
            return (Criteria) this;
        }

        public Criteria andIddocumentacionNotBetween(Short value1, Short value2) {
            addCriterion("IDDOCUMENTACION not between", value1, value2, "iddocumentacion");
            return (Criteria) this;
        }

        public Criteria andFechalimiteIsNull() {
            addCriterion("FECHALIMITE is null");
            return (Criteria) this;
        }

        public Criteria andFechalimiteIsNotNull() {
            addCriterion("FECHALIMITE is not null");
            return (Criteria) this;
        }

        public Criteria andFechalimiteEqualTo(Date value) {
            addCriterion("FECHALIMITE =", value, "fechalimite");
            return (Criteria) this;
        }

        public Criteria andFechalimiteNotEqualTo(Date value) {
            addCriterion("FECHALIMITE <>", value, "fechalimite");
            return (Criteria) this;
        }

        public Criteria andFechalimiteGreaterThan(Date value) {
            addCriterion("FECHALIMITE >", value, "fechalimite");
            return (Criteria) this;
        }

        public Criteria andFechalimiteGreaterThanOrEqualTo(Date value) {
            addCriterion("FECHALIMITE >=", value, "fechalimite");
            return (Criteria) this;
        }

        public Criteria andFechalimiteLessThan(Date value) {
            addCriterion("FECHALIMITE <", value, "fechalimite");
            return (Criteria) this;
        }

        public Criteria andFechalimiteLessThanOrEqualTo(Date value) {
            addCriterion("FECHALIMITE <=", value, "fechalimite");
            return (Criteria) this;
        }

        public Criteria andFechalimiteIn(List<Date> values) {
            addCriterion("FECHALIMITE in", values, "fechalimite");
            return (Criteria) this;
        }

        public Criteria andFechalimiteNotIn(List<Date> values) {
            addCriterion("FECHALIMITE not in", values, "fechalimite");
            return (Criteria) this;
        }

        public Criteria andFechalimiteBetween(Date value1, Date value2) {
            addCriterion("FECHALIMITE between", value1, value2, "fechalimite");
            return (Criteria) this;
        }

        public Criteria andFechalimiteNotBetween(Date value1, Date value2) {
            addCriterion("FECHALIMITE not between", value1, value2, "fechalimite");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionIsNull() {
            addCriterion("USUMODIFICACION is null");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionIsNotNull() {
            addCriterion("USUMODIFICACION is not null");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionEqualTo(Integer value) {
            addCriterion("USUMODIFICACION =", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionNotEqualTo(Integer value) {
            addCriterion("USUMODIFICACION <>", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionGreaterThan(Integer value) {
            addCriterion("USUMODIFICACION >", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionGreaterThanOrEqualTo(Integer value) {
            addCriterion("USUMODIFICACION >=", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionLessThan(Integer value) {
            addCriterion("USUMODIFICACION <", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionLessThanOrEqualTo(Integer value) {
            addCriterion("USUMODIFICACION <=", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionIn(List<Integer> values) {
            addCriterion("USUMODIFICACION in", values, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionNotIn(List<Integer> values) {
            addCriterion("USUMODIFICACION not in", values, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionBetween(Integer value1, Integer value2) {
            addCriterion("USUMODIFICACION between", value1, value2, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionNotBetween(Integer value1, Integer value2) {
            addCriterion("USUMODIFICACION not between", value1, value2, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionIsNull() {
            addCriterion("FECHAMODIFICACION is null");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionIsNotNull() {
            addCriterion("FECHAMODIFICACION is not null");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION =", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionNotEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION <>", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionGreaterThan(Date value) {
            addCriterion("FECHAMODIFICACION >", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionGreaterThanOrEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION >=", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionLessThan(Date value) {
            addCriterion("FECHAMODIFICACION <", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionLessThanOrEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION <=", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionIn(List<Date> values) {
            addCriterion("FECHAMODIFICACION in", values, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionNotIn(List<Date> values) {
            addCriterion("FECHAMODIFICACION not in", values, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionBetween(Date value1, Date value2) {
            addCriterion("FECHAMODIFICACION between", value1, value2, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionNotBetween(Date value1, Date value2) {
            addCriterion("FECHAMODIFICACION not between", value1, value2, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andDocumentacionIsNull() {
            addCriterion("DOCUMENTACION is null");
            return (Criteria) this;
        }

        public Criteria andDocumentacionIsNotNull() {
            addCriterion("DOCUMENTACION is not null");
            return (Criteria) this;
        }

        public Criteria andDocumentacionEqualTo(String value) {
            addCriterion("DOCUMENTACION =", value, "documentacion");
            return (Criteria) this;
        }

        public Criteria andDocumentacionNotEqualTo(String value) {
            addCriterion("DOCUMENTACION <>", value, "documentacion");
            return (Criteria) this;
        }

        public Criteria andDocumentacionGreaterThan(String value) {
            addCriterion("DOCUMENTACION >", value, "documentacion");
            return (Criteria) this;
        }

        public Criteria andDocumentacionGreaterThanOrEqualTo(String value) {
            addCriterion("DOCUMENTACION >=", value, "documentacion");
            return (Criteria) this;
        }

        public Criteria andDocumentacionLessThan(String value) {
            addCriterion("DOCUMENTACION <", value, "documentacion");
            return (Criteria) this;
        }

        public Criteria andDocumentacionLessThanOrEqualTo(String value) {
            addCriterion("DOCUMENTACION <=", value, "documentacion");
            return (Criteria) this;
        }

        public Criteria andDocumentacionLike(String value) {
            addCriterion("DOCUMENTACION like", value, "documentacion");
            return (Criteria) this;
        }

        public Criteria andDocumentacionNotLike(String value) {
            addCriterion("DOCUMENTACION not like", value, "documentacion");
            return (Criteria) this;
        }

        public Criteria andDocumentacionIn(List<String> values) {
            addCriterion("DOCUMENTACION in", values, "documentacion");
            return (Criteria) this;
        }

        public Criteria andDocumentacionNotIn(List<String> values) {
            addCriterion("DOCUMENTACION not in", values, "documentacion");
            return (Criteria) this;
        }

        public Criteria andDocumentacionBetween(String value1, String value2) {
            addCriterion("DOCUMENTACION between", value1, value2, "documentacion");
            return (Criteria) this;
        }

        public Criteria andDocumentacionNotBetween(String value1, String value2) {
            addCriterion("DOCUMENTACION not between", value1, value2, "documentacion");
            return (Criteria) this;
        }

        public Criteria andFechaentregaIsNull() {
            addCriterion("FECHAENTREGA is null");
            return (Criteria) this;
        }

        public Criteria andFechaentregaIsNotNull() {
            addCriterion("FECHAENTREGA is not null");
            return (Criteria) this;
        }

        public Criteria andFechaentregaEqualTo(Date value) {
            addCriterion("FECHAENTREGA =", value, "fechaentrega");
            return (Criteria) this;
        }

        public Criteria andFechaentregaNotEqualTo(Date value) {
            addCriterion("FECHAENTREGA <>", value, "fechaentrega");
            return (Criteria) this;
        }

        public Criteria andFechaentregaGreaterThan(Date value) {
            addCriterion("FECHAENTREGA >", value, "fechaentrega");
            return (Criteria) this;
        }

        public Criteria andFechaentregaGreaterThanOrEqualTo(Date value) {
            addCriterion("FECHAENTREGA >=", value, "fechaentrega");
            return (Criteria) this;
        }

        public Criteria andFechaentregaLessThan(Date value) {
            addCriterion("FECHAENTREGA <", value, "fechaentrega");
            return (Criteria) this;
        }

        public Criteria andFechaentregaLessThanOrEqualTo(Date value) {
            addCriterion("FECHAENTREGA <=", value, "fechaentrega");
            return (Criteria) this;
        }

        public Criteria andFechaentregaIn(List<Date> values) {
            addCriterion("FECHAENTREGA in", values, "fechaentrega");
            return (Criteria) this;
        }

        public Criteria andFechaentregaNotIn(List<Date> values) {
            addCriterion("FECHAENTREGA not in", values, "fechaentrega");
            return (Criteria) this;
        }

        public Criteria andFechaentregaBetween(Date value1, Date value2) {
            addCriterion("FECHAENTREGA between", value1, value2, "fechaentrega");
            return (Criteria) this;
        }

        public Criteria andFechaentregaNotBetween(Date value1, Date value2) {
            addCriterion("FECHAENTREGA not between", value1, value2, "fechaentrega");
            return (Criteria) this;
        }

        public Criteria andRegentradaIsNull() {
            addCriterion("REGENTRADA is null");
            return (Criteria) this;
        }

        public Criteria andRegentradaIsNotNull() {
            addCriterion("REGENTRADA is not null");
            return (Criteria) this;
        }

        public Criteria andRegentradaEqualTo(String value) {
            addCriterion("REGENTRADA =", value, "regentrada");
            return (Criteria) this;
        }

        public Criteria andRegentradaNotEqualTo(String value) {
            addCriterion("REGENTRADA <>", value, "regentrada");
            return (Criteria) this;
        }

        public Criteria andRegentradaGreaterThan(String value) {
            addCriterion("REGENTRADA >", value, "regentrada");
            return (Criteria) this;
        }

        public Criteria andRegentradaGreaterThanOrEqualTo(String value) {
            addCriterion("REGENTRADA >=", value, "regentrada");
            return (Criteria) this;
        }

        public Criteria andRegentradaLessThan(String value) {
            addCriterion("REGENTRADA <", value, "regentrada");
            return (Criteria) this;
        }

        public Criteria andRegentradaLessThanOrEqualTo(String value) {
            addCriterion("REGENTRADA <=", value, "regentrada");
            return (Criteria) this;
        }

        public Criteria andRegentradaLike(String value) {
            addCriterion("REGENTRADA like", value, "regentrada");
            return (Criteria) this;
        }

        public Criteria andRegentradaNotLike(String value) {
            addCriterion("REGENTRADA not like", value, "regentrada");
            return (Criteria) this;
        }

        public Criteria andRegentradaIn(List<String> values) {
            addCriterion("REGENTRADA in", values, "regentrada");
            return (Criteria) this;
        }

        public Criteria andRegentradaNotIn(List<String> values) {
            addCriterion("REGENTRADA not in", values, "regentrada");
            return (Criteria) this;
        }

        public Criteria andRegentradaBetween(String value1, String value2) {
            addCriterion("REGENTRADA between", value1, value2, "regentrada");
            return (Criteria) this;
        }

        public Criteria andRegentradaNotBetween(String value1, String value2) {
            addCriterion("REGENTRADA not between", value1, value2, "regentrada");
            return (Criteria) this;
        }

        public Criteria andRegsalidaIsNull() {
            addCriterion("REGSALIDA is null");
            return (Criteria) this;
        }

        public Criteria andRegsalidaIsNotNull() {
            addCriterion("REGSALIDA is not null");
            return (Criteria) this;
        }

        public Criteria andRegsalidaEqualTo(String value) {
            addCriterion("REGSALIDA =", value, "regsalida");
            return (Criteria) this;
        }

        public Criteria andRegsalidaNotEqualTo(String value) {
            addCriterion("REGSALIDA <>", value, "regsalida");
            return (Criteria) this;
        }

        public Criteria andRegsalidaGreaterThan(String value) {
            addCriterion("REGSALIDA >", value, "regsalida");
            return (Criteria) this;
        }

        public Criteria andRegsalidaGreaterThanOrEqualTo(String value) {
            addCriterion("REGSALIDA >=", value, "regsalida");
            return (Criteria) this;
        }

        public Criteria andRegsalidaLessThan(String value) {
            addCriterion("REGSALIDA <", value, "regsalida");
            return (Criteria) this;
        }

        public Criteria andRegsalidaLessThanOrEqualTo(String value) {
            addCriterion("REGSALIDA <=", value, "regsalida");
            return (Criteria) this;
        }

        public Criteria andRegsalidaLike(String value) {
            addCriterion("REGSALIDA like", value, "regsalida");
            return (Criteria) this;
        }

        public Criteria andRegsalidaNotLike(String value) {
            addCriterion("REGSALIDA not like", value, "regsalida");
            return (Criteria) this;
        }

        public Criteria andRegsalidaIn(List<String> values) {
            addCriterion("REGSALIDA in", values, "regsalida");
            return (Criteria) this;
        }

        public Criteria andRegsalidaNotIn(List<String> values) {
            addCriterion("REGSALIDA not in", values, "regsalida");
            return (Criteria) this;
        }

        public Criteria andRegsalidaBetween(String value1, String value2) {
            addCriterion("REGSALIDA between", value1, value2, "regsalida");
            return (Criteria) this;
        }

        public Criteria andRegsalidaNotBetween(String value1, String value2) {
            addCriterion("REGSALIDA not between", value1, value2, "regsalida");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE_INT.SCS_DOCUMENTACIONSOJ
     *
     * @mbg.generated do_not_delete_during_merge Tue Oct 11 12:59:09 CEST 2022
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE_INT.SCS_DOCUMENTACIONSOJ
     *
     * @mbg.generated Tue Oct 11 12:59:09 CEST 2022
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}