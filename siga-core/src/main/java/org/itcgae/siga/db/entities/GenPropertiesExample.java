package org.itcgae.siga.db.entities;

import java.util.ArrayList;
import java.util.List;

public class GenPropertiesExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USCGAE_DESA.GEN_PROPERTIES
     *
     * @mbg.generated Wed Mar 14 18:23:45 CET 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USCGAE_DESA.GEN_PROPERTIES
     *
     * @mbg.generated Wed Mar 14 18:23:45 CET 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USCGAE_DESA.GEN_PROPERTIES
     *
     * @mbg.generated Wed Mar 14 18:23:45 CET 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_DESA.GEN_PROPERTIES
     *
     * @mbg.generated Wed Mar 14 18:23:45 CET 2018
     */
    public GenPropertiesExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_DESA.GEN_PROPERTIES
     *
     * @mbg.generated Wed Mar 14 18:23:45 CET 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_DESA.GEN_PROPERTIES
     *
     * @mbg.generated Wed Mar 14 18:23:45 CET 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_DESA.GEN_PROPERTIES
     *
     * @mbg.generated Wed Mar 14 18:23:45 CET 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_DESA.GEN_PROPERTIES
     *
     * @mbg.generated Wed Mar 14 18:23:45 CET 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_DESA.GEN_PROPERTIES
     *
     * @mbg.generated Wed Mar 14 18:23:45 CET 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_DESA.GEN_PROPERTIES
     *
     * @mbg.generated Wed Mar 14 18:23:45 CET 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_DESA.GEN_PROPERTIES
     *
     * @mbg.generated Wed Mar 14 18:23:45 CET 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_DESA.GEN_PROPERTIES
     *
     * @mbg.generated Wed Mar 14 18:23:45 CET 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_DESA.GEN_PROPERTIES
     *
     * @mbg.generated Wed Mar 14 18:23:45 CET 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE_DESA.GEN_PROPERTIES
     *
     * @mbg.generated Wed Mar 14 18:23:45 CET 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE_DESA.GEN_PROPERTIES
     *
     * @mbg.generated Wed Mar 14 18:23:45 CET 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andParametroIsNull() {
            addCriterion("PARAMETRO is null");
            return (Criteria) this;
        }

        public Criteria andParametroIsNotNull() {
            addCriterion("PARAMETRO is not null");
            return (Criteria) this;
        }

        public Criteria andParametroEqualTo(String value) {
            addCriterion("PARAMETRO =", value, "parametro");
            return (Criteria) this;
        }

        public Criteria andParametroNotEqualTo(String value) {
            addCriterion("PARAMETRO <>", value, "parametro");
            return (Criteria) this;
        }

        public Criteria andParametroGreaterThan(String value) {
            addCriterion("PARAMETRO >", value, "parametro");
            return (Criteria) this;
        }

        public Criteria andParametroGreaterThanOrEqualTo(String value) {
            addCriterion("PARAMETRO >=", value, "parametro");
            return (Criteria) this;
        }

        public Criteria andParametroLessThan(String value) {
            addCriterion("PARAMETRO <", value, "parametro");
            return (Criteria) this;
        }

        public Criteria andParametroLessThanOrEqualTo(String value) {
            addCriterion("PARAMETRO <=", value, "parametro");
            return (Criteria) this;
        }

        public Criteria andParametroLike(String value) {
            addCriterion("PARAMETRO like", value, "parametro");
            return (Criteria) this;
        }

        public Criteria andParametroNotLike(String value) {
            addCriterion("PARAMETRO not like", value, "parametro");
            return (Criteria) this;
        }

        public Criteria andParametroIn(List<String> values) {
            addCriterion("PARAMETRO in", values, "parametro");
            return (Criteria) this;
        }

        public Criteria andParametroNotIn(List<String> values) {
            addCriterion("PARAMETRO not in", values, "parametro");
            return (Criteria) this;
        }

        public Criteria andParametroBetween(String value1, String value2) {
            addCriterion("PARAMETRO between", value1, value2, "parametro");
            return (Criteria) this;
        }

        public Criteria andParametroNotBetween(String value1, String value2) {
            addCriterion("PARAMETRO not between", value1, value2, "parametro");
            return (Criteria) this;
        }

        public Criteria andFicheroIsNull() {
            addCriterion("FICHERO is null");
            return (Criteria) this;
        }

        public Criteria andFicheroIsNotNull() {
            addCriterion("FICHERO is not null");
            return (Criteria) this;
        }

        public Criteria andFicheroEqualTo(String value) {
            addCriterion("FICHERO =", value, "fichero");
            return (Criteria) this;
        }

        public Criteria andFicheroNotEqualTo(String value) {
            addCriterion("FICHERO <>", value, "fichero");
            return (Criteria) this;
        }

        public Criteria andFicheroGreaterThan(String value) {
            addCriterion("FICHERO >", value, "fichero");
            return (Criteria) this;
        }

        public Criteria andFicheroGreaterThanOrEqualTo(String value) {
            addCriterion("FICHERO >=", value, "fichero");
            return (Criteria) this;
        }

        public Criteria andFicheroLessThan(String value) {
            addCriterion("FICHERO <", value, "fichero");
            return (Criteria) this;
        }

        public Criteria andFicheroLessThanOrEqualTo(String value) {
            addCriterion("FICHERO <=", value, "fichero");
            return (Criteria) this;
        }

        public Criteria andFicheroLike(String value) {
            addCriterion("FICHERO like", value, "fichero");
            return (Criteria) this;
        }

        public Criteria andFicheroNotLike(String value) {
            addCriterion("FICHERO not like", value, "fichero");
            return (Criteria) this;
        }

        public Criteria andFicheroIn(List<String> values) {
            addCriterion("FICHERO in", values, "fichero");
            return (Criteria) this;
        }

        public Criteria andFicheroNotIn(List<String> values) {
            addCriterion("FICHERO not in", values, "fichero");
            return (Criteria) this;
        }

        public Criteria andFicheroBetween(String value1, String value2) {
            addCriterion("FICHERO between", value1, value2, "fichero");
            return (Criteria) this;
        }

        public Criteria andFicheroNotBetween(String value1, String value2) {
            addCriterion("FICHERO not between", value1, value2, "fichero");
            return (Criteria) this;
        }

        public Criteria andValorIsNull() {
            addCriterion("VALOR is null");
            return (Criteria) this;
        }

        public Criteria andValorIsNotNull() {
            addCriterion("VALOR is not null");
            return (Criteria) this;
        }

        public Criteria andValorEqualTo(String value) {
            addCriterion("VALOR =", value, "valor");
            return (Criteria) this;
        }

        public Criteria andValorNotEqualTo(String value) {
            addCriterion("VALOR <>", value, "valor");
            return (Criteria) this;
        }

        public Criteria andValorGreaterThan(String value) {
            addCriterion("VALOR >", value, "valor");
            return (Criteria) this;
        }

        public Criteria andValorGreaterThanOrEqualTo(String value) {
            addCriterion("VALOR >=", value, "valor");
            return (Criteria) this;
        }

        public Criteria andValorLessThan(String value) {
            addCriterion("VALOR <", value, "valor");
            return (Criteria) this;
        }

        public Criteria andValorLessThanOrEqualTo(String value) {
            addCriterion("VALOR <=", value, "valor");
            return (Criteria) this;
        }

        public Criteria andValorLike(String value) {
            addCriterion("VALOR like", value, "valor");
            return (Criteria) this;
        }

        public Criteria andValorNotLike(String value) {
            addCriterion("VALOR not like", value, "valor");
            return (Criteria) this;
        }

        public Criteria andValorIn(List<String> values) {
            addCriterion("VALOR in", values, "valor");
            return (Criteria) this;
        }

        public Criteria andValorNotIn(List<String> values) {
            addCriterion("VALOR not in", values, "valor");
            return (Criteria) this;
        }

        public Criteria andValorBetween(String value1, String value2) {
            addCriterion("VALOR between", value1, value2, "valor");
            return (Criteria) this;
        }

        public Criteria andValorNotBetween(String value1, String value2) {
            addCriterion("VALOR not between", value1, value2, "valor");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE_DESA.GEN_PROPERTIES
     *
     * @mbg.generated do_not_delete_during_merge Wed Mar 14 18:23:45 CET 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE_DESA.GEN_PROPERTIES
     *
     * @mbg.generated Wed Mar 14 18:23:45 CET 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}