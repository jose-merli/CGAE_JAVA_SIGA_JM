package org.itcgae.siga.db.mappers;

import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;
import org.itcgae.siga.db.entities.PysProductossolicitados;
import org.itcgae.siga.db.entities.PysProductossolicitadosExample;
import org.itcgae.siga.db.entities.PysProductossolicitadosExample.Criteria;
import org.itcgae.siga.db.entities.PysProductossolicitadosExample.Criterion;

public class PysProductossolicitadosSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.PYS_PRODUCTOSSOLICITADOS
     *
     * @mbg.generated Wed Jan 09 18:55:17 CET 2019
     */
    public String countByExample(PysProductossolicitadosExample example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("PYS_PRODUCTOSSOLICITADOS");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.PYS_PRODUCTOSSOLICITADOS
     *
     * @mbg.generated Wed Jan 09 18:55:17 CET 2019
     */
    public String deleteByExample(PysProductossolicitadosExample example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("PYS_PRODUCTOSSOLICITADOS");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.PYS_PRODUCTOSSOLICITADOS
     *
     * @mbg.generated Wed Jan 09 18:55:17 CET 2019
     */
    public String insertSelective(PysProductossolicitados record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("PYS_PRODUCTOSSOLICITADOS");
        
        if (record.getIdinstitucion() != null) {
            sql.VALUES("IDINSTITUCION", "#{idinstitucion,jdbcType=DECIMAL}");
        }
        
        if (record.getIdtipoproducto() != null) {
            sql.VALUES("IDTIPOPRODUCTO", "#{idtipoproducto,jdbcType=DECIMAL}");
        }
        
        if (record.getIdproducto() != null) {
            sql.VALUES("IDPRODUCTO", "#{idproducto,jdbcType=DECIMAL}");
        }
        
        if (record.getIdproductoinstitucion() != null) {
            sql.VALUES("IDPRODUCTOINSTITUCION", "#{idproductoinstitucion,jdbcType=DECIMAL}");
        }
        
        if (record.getIdpeticion() != null) {
            sql.VALUES("IDPETICION", "#{idpeticion,jdbcType=DECIMAL}");
        }
        
        if (record.getIdpersona() != null) {
            sql.VALUES("IDPERSONA", "#{idpersona,jdbcType=DECIMAL}");
        }
        
        if (record.getIdformapago() != null) {
            sql.VALUES("IDFORMAPAGO", "#{idformapago,jdbcType=DECIMAL}");
        }
        
        if (record.getCantidad() != null) {
            sql.VALUES("CANTIDAD", "#{cantidad,jdbcType=DECIMAL}");
        }
        
        if (record.getAceptado() != null) {
            sql.VALUES("ACEPTADO", "#{aceptado,jdbcType=VARCHAR}");
        }
        
        if (record.getValor() != null) {
            sql.VALUES("VALOR", "#{valor,jdbcType=DECIMAL}");
        }
        
        if (record.getFechamodificacion() != null) {
            sql.VALUES("FECHAMODIFICACION", "#{fechamodificacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUsumodificacion() != null) {
            sql.VALUES("USUMODIFICACION", "#{usumodificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getIdcuenta() != null) {
            sql.VALUES("IDCUENTA", "#{idcuenta,jdbcType=DECIMAL}");
        }
        
        if (record.getIdtipoenvios() != null) {
            sql.VALUES("IDTIPOENVIOS", "#{idtipoenvios,jdbcType=DECIMAL}");
        }
        
        if (record.getIddireccion() != null) {
            sql.VALUES("IDDIRECCION", "#{iddireccion,jdbcType=DECIMAL}");
        }
        
        if (record.getIdinstitucionorigen() != null) {
            sql.VALUES("IDINSTITUCIONORIGEN", "#{idinstitucionorigen,jdbcType=DECIMAL}");
        }
        
        if (record.getNofacturable() != null) {
            sql.VALUES("NOFACTURABLE", "#{nofacturable,jdbcType=VARCHAR}");
        }
        
        if (record.getFecharecepcionsolicitud() != null) {
            sql.VALUES("FECHARECEPCIONSOLICITUD", "#{fecharecepcionsolicitud,jdbcType=TIMESTAMP}");
        }
        
        if (record.getMetodorecepcionsolicitud() != null) {
            sql.VALUES("METODORECEPCIONSOLICITUD", "#{metodorecepcionsolicitud,jdbcType=VARCHAR}");
        }
        
        if (record.getIdinstitucioncolegiacion() != null) {
            sql.VALUES("IDINSTITUCIONCOLEGIACION", "#{idinstitucioncolegiacion,jdbcType=DECIMAL}");
        }
        
        if (record.getOrden() != null) {
            sql.VALUES("ORDEN", "#{orden,jdbcType=DECIMAL}");
        }
        
        if (record.getIdtipoiva() != null) {
            sql.VALUES("IDTIPOIVA", "#{idtipoiva,jdbcType=DECIMAL}");
        }
        
        if (record.getAceptacesionmutualidad() != null) {
            sql.VALUES("ACEPTACESIONMUTUALIDAD", "#{aceptacesionmutualidad,jdbcType=VARCHAR}");
        }
        
        if (record.getObservaciones() != null) {
            sql.VALUES("OBSERVACIONES", "#{observaciones,jdbcType=VARCHAR}");
        }
        
        if (record.getIdcensodatos() != null) {
            sql.VALUES("IDCENSODATOS", "#{idcensodatos,jdbcType=DECIMAL}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.PYS_PRODUCTOSSOLICITADOS
     *
     * @mbg.generated Wed Jan 09 18:55:17 CET 2019
     */
    public String selectByExample(PysProductossolicitadosExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("IDINSTITUCION");
        } else {
            sql.SELECT("IDINSTITUCION");
        }
        sql.SELECT("IDTIPOPRODUCTO");
        sql.SELECT("IDPRODUCTO");
        sql.SELECT("IDPRODUCTOINSTITUCION");
        sql.SELECT("IDPETICION");
        sql.SELECT("IDPERSONA");
        sql.SELECT("IDFORMAPAGO");
        sql.SELECT("CANTIDAD");
        sql.SELECT("ACEPTADO");
        sql.SELECT("VALOR");
        sql.SELECT("FECHAMODIFICACION");
        sql.SELECT("USUMODIFICACION");
        sql.SELECT("IDCUENTA");
        sql.SELECT("IDTIPOENVIOS");
        sql.SELECT("IDDIRECCION");
        sql.SELECT("IDINSTITUCIONORIGEN");
        sql.SELECT("NOFACTURABLE");
        sql.SELECT("FECHARECEPCIONSOLICITUD");
        sql.SELECT("METODORECEPCIONSOLICITUD");
        sql.SELECT("IDINSTITUCIONCOLEGIACION");
        sql.SELECT("ORDEN");
        sql.SELECT("IDTIPOIVA");
        sql.SELECT("ACEPTACESIONMUTUALIDAD");
        sql.SELECT("OBSERVACIONES");
        sql.SELECT("IDCENSODATOS");
        sql.FROM("PYS_PRODUCTOSSOLICITADOS");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.PYS_PRODUCTOSSOLICITADOS
     *
     * @mbg.generated Wed Jan 09 18:55:17 CET 2019
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        PysProductossolicitados record = (PysProductossolicitados) parameter.get("record");
        PysProductossolicitadosExample example = (PysProductossolicitadosExample) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("PYS_PRODUCTOSSOLICITADOS");
        
        if (record.getIdinstitucion() != null) {
            sql.SET("IDINSTITUCION = #{record.idinstitucion,jdbcType=DECIMAL}");
        }
        
        if (record.getIdtipoproducto() != null) {
            sql.SET("IDTIPOPRODUCTO = #{record.idtipoproducto,jdbcType=DECIMAL}");
        }
        
        if (record.getIdproducto() != null) {
            sql.SET("IDPRODUCTO = #{record.idproducto,jdbcType=DECIMAL}");
        }
        
        if (record.getIdproductoinstitucion() != null) {
            sql.SET("IDPRODUCTOINSTITUCION = #{record.idproductoinstitucion,jdbcType=DECIMAL}");
        }
        
        if (record.getIdpeticion() != null) {
            sql.SET("IDPETICION = #{record.idpeticion,jdbcType=DECIMAL}");
        }
        
        if (record.getIdpersona() != null) {
            sql.SET("IDPERSONA = #{record.idpersona,jdbcType=DECIMAL}");
        }
        
        if (record.getIdformapago() != null) {
            sql.SET("IDFORMAPAGO = #{record.idformapago,jdbcType=DECIMAL}");
        }
        
        if (record.getCantidad() != null) {
            sql.SET("CANTIDAD = #{record.cantidad,jdbcType=DECIMAL}");
        }
        
        if (record.getAceptado() != null) {
            sql.SET("ACEPTADO = #{record.aceptado,jdbcType=VARCHAR}");
        }
        
        if (record.getValor() != null) {
            sql.SET("VALOR = #{record.valor,jdbcType=DECIMAL}");
        }
        
        if (record.getFechamodificacion() != null) {
            sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUsumodificacion() != null) {
            sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getIdcuenta() != null) {
            sql.SET("IDCUENTA = #{record.idcuenta,jdbcType=DECIMAL}");
        }
        
        if (record.getIdtipoenvios() != null) {
            sql.SET("IDTIPOENVIOS = #{record.idtipoenvios,jdbcType=DECIMAL}");
        }
        
        if (record.getIddireccion() != null) {
            sql.SET("IDDIRECCION = #{record.iddireccion,jdbcType=DECIMAL}");
        }
        
        if (record.getIdinstitucionorigen() != null) {
            sql.SET("IDINSTITUCIONORIGEN = #{record.idinstitucionorigen,jdbcType=DECIMAL}");
        }
        
        if (record.getNofacturable() != null) {
            sql.SET("NOFACTURABLE = #{record.nofacturable,jdbcType=VARCHAR}");
        }
        
        if (record.getFecharecepcionsolicitud() != null) {
            sql.SET("FECHARECEPCIONSOLICITUD = #{record.fecharecepcionsolicitud,jdbcType=TIMESTAMP}");
        }
        
        if (record.getMetodorecepcionsolicitud() != null) {
            sql.SET("METODORECEPCIONSOLICITUD = #{record.metodorecepcionsolicitud,jdbcType=VARCHAR}");
        }
        
        if (record.getIdinstitucioncolegiacion() != null) {
            sql.SET("IDINSTITUCIONCOLEGIACION = #{record.idinstitucioncolegiacion,jdbcType=DECIMAL}");
        }
        
        if (record.getOrden() != null) {
            sql.SET("ORDEN = #{record.orden,jdbcType=DECIMAL}");
        }
        
        if (record.getIdtipoiva() != null) {
            sql.SET("IDTIPOIVA = #{record.idtipoiva,jdbcType=DECIMAL}");
        }
        
        if (record.getAceptacesionmutualidad() != null) {
            sql.SET("ACEPTACESIONMUTUALIDAD = #{record.aceptacesionmutualidad,jdbcType=VARCHAR}");
        }
        
        if (record.getObservaciones() != null) {
            sql.SET("OBSERVACIONES = #{record.observaciones,jdbcType=VARCHAR}");
        }
        
        if (record.getIdcensodatos() != null) {
            sql.SET("IDCENSODATOS = #{record.idcensodatos,jdbcType=DECIMAL}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.PYS_PRODUCTOSSOLICITADOS
     *
     * @mbg.generated Wed Jan 09 18:55:17 CET 2019
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("PYS_PRODUCTOSSOLICITADOS");
        
        sql.SET("IDINSTITUCION = #{record.idinstitucion,jdbcType=DECIMAL}");
        sql.SET("IDTIPOPRODUCTO = #{record.idtipoproducto,jdbcType=DECIMAL}");
        sql.SET("IDPRODUCTO = #{record.idproducto,jdbcType=DECIMAL}");
        sql.SET("IDPRODUCTOINSTITUCION = #{record.idproductoinstitucion,jdbcType=DECIMAL}");
        sql.SET("IDPETICION = #{record.idpeticion,jdbcType=DECIMAL}");
        sql.SET("IDPERSONA = #{record.idpersona,jdbcType=DECIMAL}");
        sql.SET("IDFORMAPAGO = #{record.idformapago,jdbcType=DECIMAL}");
        sql.SET("CANTIDAD = #{record.cantidad,jdbcType=DECIMAL}");
        sql.SET("ACEPTADO = #{record.aceptado,jdbcType=VARCHAR}");
        sql.SET("VALOR = #{record.valor,jdbcType=DECIMAL}");
        sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=TIMESTAMP}");
        sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
        sql.SET("IDCUENTA = #{record.idcuenta,jdbcType=DECIMAL}");
        sql.SET("IDTIPOENVIOS = #{record.idtipoenvios,jdbcType=DECIMAL}");
        sql.SET("IDDIRECCION = #{record.iddireccion,jdbcType=DECIMAL}");
        sql.SET("IDINSTITUCIONORIGEN = #{record.idinstitucionorigen,jdbcType=DECIMAL}");
        sql.SET("NOFACTURABLE = #{record.nofacturable,jdbcType=VARCHAR}");
        sql.SET("FECHARECEPCIONSOLICITUD = #{record.fecharecepcionsolicitud,jdbcType=TIMESTAMP}");
        sql.SET("METODORECEPCIONSOLICITUD = #{record.metodorecepcionsolicitud,jdbcType=VARCHAR}");
        sql.SET("IDINSTITUCIONCOLEGIACION = #{record.idinstitucioncolegiacion,jdbcType=DECIMAL}");
        sql.SET("ORDEN = #{record.orden,jdbcType=DECIMAL}");
        sql.SET("IDTIPOIVA = #{record.idtipoiva,jdbcType=DECIMAL}");
        sql.SET("ACEPTACESIONMUTUALIDAD = #{record.aceptacesionmutualidad,jdbcType=VARCHAR}");
        sql.SET("OBSERVACIONES = #{record.observaciones,jdbcType=VARCHAR}");
        sql.SET("IDCENSODATOS = #{record.idcensodatos,jdbcType=DECIMAL}");
        
        PysProductossolicitadosExample example = (PysProductossolicitadosExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.PYS_PRODUCTOSSOLICITADOS
     *
     * @mbg.generated Wed Jan 09 18:55:17 CET 2019
     */
    public String updateByPrimaryKeySelective(PysProductossolicitados record) {
        SQL sql = new SQL();
        sql.UPDATE("PYS_PRODUCTOSSOLICITADOS");
        
        if (record.getIdpersona() != null) {
            sql.SET("IDPERSONA = #{idpersona,jdbcType=DECIMAL}");
        }
        
        if (record.getIdformapago() != null) {
            sql.SET("IDFORMAPAGO = #{idformapago,jdbcType=DECIMAL}");
        }
        
        if (record.getCantidad() != null) {
            sql.SET("CANTIDAD = #{cantidad,jdbcType=DECIMAL}");
        }
        
        if (record.getAceptado() != null) {
            sql.SET("ACEPTADO = #{aceptado,jdbcType=VARCHAR}");
        }
        
        if (record.getValor() != null) {
            sql.SET("VALOR = #{valor,jdbcType=DECIMAL}");
        }
        
        if (record.getFechamodificacion() != null) {
            sql.SET("FECHAMODIFICACION = #{fechamodificacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUsumodificacion() != null) {
            sql.SET("USUMODIFICACION = #{usumodificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getIdcuenta() != null) {
            sql.SET("IDCUENTA = #{idcuenta,jdbcType=DECIMAL}");
        }
        
        if (record.getIdtipoenvios() != null) {
            sql.SET("IDTIPOENVIOS = #{idtipoenvios,jdbcType=DECIMAL}");
        }
        
        if (record.getIddireccion() != null) {
            sql.SET("IDDIRECCION = #{iddireccion,jdbcType=DECIMAL}");
        }
        
        if (record.getIdinstitucionorigen() != null) {
            sql.SET("IDINSTITUCIONORIGEN = #{idinstitucionorigen,jdbcType=DECIMAL}");
        }
        
        if (record.getNofacturable() != null) {
            sql.SET("NOFACTURABLE = #{nofacturable,jdbcType=VARCHAR}");
        }
        
        if (record.getFecharecepcionsolicitud() != null) {
            sql.SET("FECHARECEPCIONSOLICITUD = #{fecharecepcionsolicitud,jdbcType=TIMESTAMP}");
        }
        
        if (record.getMetodorecepcionsolicitud() != null) {
            sql.SET("METODORECEPCIONSOLICITUD = #{metodorecepcionsolicitud,jdbcType=VARCHAR}");
        }
        
        if (record.getIdinstitucioncolegiacion() != null) {
            sql.SET("IDINSTITUCIONCOLEGIACION = #{idinstitucioncolegiacion,jdbcType=DECIMAL}");
        }
        
        if (record.getOrden() != null) {
            sql.SET("ORDEN = #{orden,jdbcType=DECIMAL}");
        }
        
        if (record.getIdtipoiva() != null) {
            sql.SET("IDTIPOIVA = #{idtipoiva,jdbcType=DECIMAL}");
        }
        
        if (record.getAceptacesionmutualidad() != null) {
            sql.SET("ACEPTACESIONMUTUALIDAD = #{aceptacesionmutualidad,jdbcType=VARCHAR}");
        }
        
        if (record.getObservaciones() != null) {
            sql.SET("OBSERVACIONES = #{observaciones,jdbcType=VARCHAR}");
        }
        
        if (record.getIdcensodatos() != null) {
            sql.SET("IDCENSODATOS = #{idcensodatos,jdbcType=DECIMAL}");
        }
        
        sql.WHERE("IDINSTITUCION = #{idinstitucion,jdbcType=DECIMAL}");
        sql.WHERE("IDTIPOPRODUCTO = #{idtipoproducto,jdbcType=DECIMAL}");
        sql.WHERE("IDPRODUCTO = #{idproducto,jdbcType=DECIMAL}");
        sql.WHERE("IDPRODUCTOINSTITUCION = #{idproductoinstitucion,jdbcType=DECIMAL}");
        sql.WHERE("IDPETICION = #{idpeticion,jdbcType=DECIMAL}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.PYS_PRODUCTOSSOLICITADOS
     *
     * @mbg.generated Wed Jan 09 18:55:17 CET 2019
     */
    protected void applyWhere(SQL sql, PysProductossolicitadosExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}