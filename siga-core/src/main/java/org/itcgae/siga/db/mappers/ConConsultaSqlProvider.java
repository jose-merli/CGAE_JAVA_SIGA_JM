package org.itcgae.siga.db.mappers;

import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;
import org.itcgae.siga.db.entities.ConConsulta;
import org.itcgae.siga.db.entities.ConConsultaExample;
import org.itcgae.siga.db.entities.ConConsultaExample.Criteria;
import org.itcgae.siga.db.entities.ConConsultaExample.Criterion;

public class ConConsultaSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CON_CONSULTA
     *
     * @mbg.generated Tue Jan 08 18:40:39 CET 2019
     */
    public String countByExample(ConConsultaExample example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("CON_CONSULTA");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CON_CONSULTA
     *
     * @mbg.generated Tue Jan 08 18:40:39 CET 2019
     */
    public String deleteByExample(ConConsultaExample example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("CON_CONSULTA");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CON_CONSULTA
     *
     * @mbg.generated Tue Jan 08 18:40:39 CET 2019
     */
    public String insertSelective(ConConsulta record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("CON_CONSULTA");
        
        if (record.getIdinstitucion() != null) {
            sql.VALUES("IDINSTITUCION", "#{idinstitucion,jdbcType=DECIMAL}");
        }
        
        if (record.getIdconsulta() != null) {
            sql.VALUES("IDCONSULTA", "#{idconsulta,jdbcType=DECIMAL}");
        }
        
        if (record.getDescripcion() != null) {
            sql.VALUES("DESCRIPCION", "#{descripcion,jdbcType=VARCHAR}");
        }
        
        if (record.getGeneral() != null) {
            sql.VALUES("GENERAL", "#{general,jdbcType=VARCHAR}");
        }
        
        if (record.getTipoconsulta() != null) {
            sql.VALUES("TIPOCONSULTA", "#{tipoconsulta,jdbcType=VARCHAR}");
        }
        
        if (record.getIdmodulo() != null) {
            sql.VALUES("IDMODULO", "#{idmodulo,jdbcType=DECIMAL}");
        }
        
        if (record.getFechamodificacion() != null) {
            sql.VALUES("FECHAMODIFICACION", "#{fechamodificacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUsumodificacion() != null) {
            sql.VALUES("USUMODIFICACION", "#{usumodificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getBases() != null) {
            sql.VALUES("BASES", "#{bases,jdbcType=VARCHAR}");
        }
        
        if (record.getIdtabla() != null) {
            sql.VALUES("IDTABLA", "#{idtabla,jdbcType=DECIMAL}");
        }
        
        if (record.getEsexperta() != null) {
            sql.VALUES("ESEXPERTA", "#{esexperta,jdbcType=VARCHAR}");
        }
        
        if (record.getObservaciones() != null) {
            sql.VALUES("OBSERVACIONES", "#{observaciones,jdbcType=VARCHAR}");
        }
        
        if (record.getFechabaja() != null) {
            sql.VALUES("FECHABAJA", "#{fechabaja,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIdobjetivo() != null) {
            sql.VALUES("IDOBJETIVO", "#{idobjetivo,jdbcType=DECIMAL}");
        }
        
        if (record.getIdclase() != null) {
            sql.VALUES("IDCLASE", "#{idclase,jdbcType=DECIMAL}");
        }
        
        if (record.getIdclasecomunicacion() != null) {
            sql.VALUES("IDCLASECOMUNICACION", "#{idclasecomunicacion,jdbcType=DECIMAL}");
        }
        
        if (record.getSentencia() != null) {
            sql.VALUES("SENTENCIA", "#{sentencia,jdbcType=CLOB}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CON_CONSULTA
     *
     * @mbg.generated Tue Jan 08 18:40:39 CET 2019
     */
    public String selectByExampleWithBLOBs(ConConsultaExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("IDINSTITUCION");
        } else {
            sql.SELECT("IDINSTITUCION");
        }
        sql.SELECT("IDCONSULTA");
        sql.SELECT("DESCRIPCION");
        sql.SELECT("GENERAL");
        sql.SELECT("TIPOCONSULTA");
        sql.SELECT("IDMODULO");
        sql.SELECT("FECHAMODIFICACION");
        sql.SELECT("USUMODIFICACION");
        sql.SELECT("BASES");
        sql.SELECT("IDTABLA");
        sql.SELECT("ESEXPERTA");
        sql.SELECT("OBSERVACIONES");
        sql.SELECT("FECHABAJA");
        sql.SELECT("IDOBJETIVO");
        sql.SELECT("IDCLASE");
        sql.SELECT("IDCLASECOMUNICACION");
        sql.SELECT("SENTENCIA");
        sql.FROM("CON_CONSULTA");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CON_CONSULTA
     *
     * @mbg.generated Tue Jan 08 18:40:39 CET 2019
     */
    public String selectByExample(ConConsultaExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("IDINSTITUCION");
        } else {
            sql.SELECT("IDINSTITUCION");
        }
        sql.SELECT("IDCONSULTA");
        sql.SELECT("DESCRIPCION");
        sql.SELECT("GENERAL");
        sql.SELECT("TIPOCONSULTA");
        sql.SELECT("IDMODULO");
        sql.SELECT("FECHAMODIFICACION");
        sql.SELECT("USUMODIFICACION");
        sql.SELECT("BASES");
        sql.SELECT("IDTABLA");
        sql.SELECT("ESEXPERTA");
        sql.SELECT("OBSERVACIONES");
        sql.SELECT("FECHABAJA");
        sql.SELECT("IDOBJETIVO");
        sql.SELECT("IDCLASE");
        sql.SELECT("IDCLASECOMUNICACION");
        sql.FROM("CON_CONSULTA");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CON_CONSULTA
     *
     * @mbg.generated Tue Jan 08 18:40:39 CET 2019
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        ConConsulta record = (ConConsulta) parameter.get("record");
        ConConsultaExample example = (ConConsultaExample) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("CON_CONSULTA");
        
        if (record.getIdinstitucion() != null) {
            sql.SET("IDINSTITUCION = #{record.idinstitucion,jdbcType=DECIMAL}");
        }
        
        if (record.getIdconsulta() != null) {
            sql.SET("IDCONSULTA = #{record.idconsulta,jdbcType=DECIMAL}");
        }
        
        if (record.getDescripcion() != null) {
            sql.SET("DESCRIPCION = #{record.descripcion,jdbcType=VARCHAR}");
        }
        
        if (record.getGeneral() != null) {
            sql.SET("GENERAL = #{record.general,jdbcType=VARCHAR}");
        }
        
        if (record.getTipoconsulta() != null) {
            sql.SET("TIPOCONSULTA = #{record.tipoconsulta,jdbcType=VARCHAR}");
        }
        
        if (record.getIdmodulo() != null) {
            sql.SET("IDMODULO = #{record.idmodulo,jdbcType=DECIMAL}");
        }
        
        if (record.getFechamodificacion() != null) {
            sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUsumodificacion() != null) {
            sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getBases() != null) {
            sql.SET("BASES = #{record.bases,jdbcType=VARCHAR}");
        }
        
        if (record.getIdtabla() != null) {
            sql.SET("IDTABLA = #{record.idtabla,jdbcType=DECIMAL}");
        }
        
        if (record.getEsexperta() != null) {
            sql.SET("ESEXPERTA = #{record.esexperta,jdbcType=VARCHAR}");
        }
        
        if (record.getObservaciones() != null) {
            sql.SET("OBSERVACIONES = #{record.observaciones,jdbcType=VARCHAR}");
        }
        
        if (record.getFechabaja() != null) {
            sql.SET("FECHABAJA = #{record.fechabaja,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIdobjetivo() != null) {
            sql.SET("IDOBJETIVO = #{record.idobjetivo,jdbcType=DECIMAL}");
        }
        
        if (record.getIdclase() != null) {
            sql.SET("IDCLASE = #{record.idclase,jdbcType=DECIMAL}");
        }
        
        if (record.getIdclasecomunicacion() != null) {
            sql.SET("IDCLASECOMUNICACION = #{record.idclasecomunicacion,jdbcType=DECIMAL}");
        }
        
        if (record.getSentencia() != null) {
            sql.SET("SENTENCIA = #{record.sentencia,jdbcType=CLOB}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CON_CONSULTA
     *
     * @mbg.generated Tue Jan 08 18:40:39 CET 2019
     */
    public String updateByExampleWithBLOBs(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("CON_CONSULTA");
        
        sql.SET("IDINSTITUCION = #{record.idinstitucion,jdbcType=DECIMAL}");
        sql.SET("IDCONSULTA = #{record.idconsulta,jdbcType=DECIMAL}");
        sql.SET("DESCRIPCION = #{record.descripcion,jdbcType=VARCHAR}");
        sql.SET("GENERAL = #{record.general,jdbcType=VARCHAR}");
        sql.SET("TIPOCONSULTA = #{record.tipoconsulta,jdbcType=VARCHAR}");
        sql.SET("IDMODULO = #{record.idmodulo,jdbcType=DECIMAL}");
        sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=TIMESTAMP}");
        sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
        sql.SET("BASES = #{record.bases,jdbcType=VARCHAR}");
        sql.SET("IDTABLA = #{record.idtabla,jdbcType=DECIMAL}");
        sql.SET("ESEXPERTA = #{record.esexperta,jdbcType=VARCHAR}");
        sql.SET("OBSERVACIONES = #{record.observaciones,jdbcType=VARCHAR}");
        sql.SET("FECHABAJA = #{record.fechabaja,jdbcType=TIMESTAMP}");
        sql.SET("IDOBJETIVO = #{record.idobjetivo,jdbcType=DECIMAL}");
        sql.SET("IDCLASE = #{record.idclase,jdbcType=DECIMAL}");
        sql.SET("IDCLASECOMUNICACION = #{record.idclasecomunicacion,jdbcType=DECIMAL}");
        sql.SET("SENTENCIA = #{record.sentencia,jdbcType=CLOB}");
        
        ConConsultaExample example = (ConConsultaExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CON_CONSULTA
     *
     * @mbg.generated Tue Jan 08 18:40:39 CET 2019
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("CON_CONSULTA");
        
        sql.SET("IDINSTITUCION = #{record.idinstitucion,jdbcType=DECIMAL}");
        sql.SET("IDCONSULTA = #{record.idconsulta,jdbcType=DECIMAL}");
        sql.SET("DESCRIPCION = #{record.descripcion,jdbcType=VARCHAR}");
        sql.SET("GENERAL = #{record.general,jdbcType=VARCHAR}");
        sql.SET("TIPOCONSULTA = #{record.tipoconsulta,jdbcType=VARCHAR}");
        sql.SET("IDMODULO = #{record.idmodulo,jdbcType=DECIMAL}");
        sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=TIMESTAMP}");
        sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
        sql.SET("BASES = #{record.bases,jdbcType=VARCHAR}");
        sql.SET("IDTABLA = #{record.idtabla,jdbcType=DECIMAL}");
        sql.SET("ESEXPERTA = #{record.esexperta,jdbcType=VARCHAR}");
        sql.SET("OBSERVACIONES = #{record.observaciones,jdbcType=VARCHAR}");
        sql.SET("FECHABAJA = #{record.fechabaja,jdbcType=TIMESTAMP}");
        sql.SET("IDOBJETIVO = #{record.idobjetivo,jdbcType=DECIMAL}");
        sql.SET("IDCLASE = #{record.idclase,jdbcType=DECIMAL}");
        sql.SET("IDCLASECOMUNICACION = #{record.idclasecomunicacion,jdbcType=DECIMAL}");
        
        ConConsultaExample example = (ConConsultaExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CON_CONSULTA
     *
     * @mbg.generated Tue Jan 08 18:40:39 CET 2019
     */
    public String updateByPrimaryKeySelective(ConConsulta record) {
        SQL sql = new SQL();
        sql.UPDATE("CON_CONSULTA");
        
        if (record.getDescripcion() != null) {
            sql.SET("DESCRIPCION = #{descripcion,jdbcType=VARCHAR}");
        }
        
        if (record.getGeneral() != null) {
            sql.SET("GENERAL = #{general,jdbcType=VARCHAR}");
        }
        
        if (record.getTipoconsulta() != null) {
            sql.SET("TIPOCONSULTA = #{tipoconsulta,jdbcType=VARCHAR}");
        }
        
        if (record.getIdmodulo() != null) {
            sql.SET("IDMODULO = #{idmodulo,jdbcType=DECIMAL}");
        }
        
        if (record.getFechamodificacion() != null) {
            sql.SET("FECHAMODIFICACION = #{fechamodificacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUsumodificacion() != null) {
            sql.SET("USUMODIFICACION = #{usumodificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getBases() != null) {
            sql.SET("BASES = #{bases,jdbcType=VARCHAR}");
        }
        
        if (record.getIdtabla() != null) {
            sql.SET("IDTABLA = #{idtabla,jdbcType=DECIMAL}");
        }
        
        if (record.getEsexperta() != null) {
            sql.SET("ESEXPERTA = #{esexperta,jdbcType=VARCHAR}");
        }
        
        if (record.getObservaciones() != null) {
            sql.SET("OBSERVACIONES = #{observaciones,jdbcType=VARCHAR}");
        }
        
        if (record.getFechabaja() != null) {
            sql.SET("FECHABAJA = #{fechabaja,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIdobjetivo() != null) {
            sql.SET("IDOBJETIVO = #{idobjetivo,jdbcType=DECIMAL}");
        }
        
        if (record.getIdclase() != null) {
            sql.SET("IDCLASE = #{idclase,jdbcType=DECIMAL}");
        }
        
        if (record.getIdclasecomunicacion() != null) {
            sql.SET("IDCLASECOMUNICACION = #{idclasecomunicacion,jdbcType=DECIMAL}");
        }
        
        if (record.getSentencia() != null) {
            sql.SET("SENTENCIA = #{sentencia,jdbcType=CLOB}");
        }
        
        sql.WHERE("IDINSTITUCION = #{idinstitucion,jdbcType=DECIMAL}");
        sql.WHERE("IDCONSULTA = #{idconsulta,jdbcType=DECIMAL}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CON_CONSULTA
     *
     * @mbg.generated Tue Jan 08 18:40:39 CET 2019
     */
    protected void applyWhere(SQL sql, ConConsultaExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}