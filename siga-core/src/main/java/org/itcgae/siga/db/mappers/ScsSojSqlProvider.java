package org.itcgae.siga.db.mappers;

import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;
import org.itcgae.siga.db.entities.ScsSoj;
import org.itcgae.siga.db.entities.ScsSojExample.Criteria;
import org.itcgae.siga.db.entities.ScsSojExample.Criterion;
import org.itcgae.siga.db.entities.ScsSojExample;

public class ScsSojSqlProvider {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.SCS_SOJ
	 * @mbg.generated  Thu Dec 26 23:53:13 CET 2019
	 */
	public String countByExample(ScsSojExample example) {
		SQL sql = new SQL();
		sql.SELECT("count(*)").FROM("SCS_SOJ");
		applyWhere(sql, example, false);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.SCS_SOJ
	 * @mbg.generated  Thu Dec 26 23:53:13 CET 2019
	 */
	public String deleteByExample(ScsSojExample example) {
		SQL sql = new SQL();
		sql.DELETE_FROM("SCS_SOJ");
		applyWhere(sql, example, false);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.SCS_SOJ
	 * @mbg.generated  Thu Dec 26 23:53:13 CET 2019
	 */
	public String insertSelective(ScsSoj record) {
		SQL sql = new SQL();
		sql.INSERT_INTO("SCS_SOJ");
		if (record.getIdinstitucion() != null) {
			sql.VALUES("IDINSTITUCION", "#{idinstitucion,jdbcType=DECIMAL}");
		}
		if (record.getIdtiposoj() != null) {
			sql.VALUES("IDTIPOSOJ", "#{idtiposoj,jdbcType=DECIMAL}");
		}
		if (record.getAnio() != null) {
			sql.VALUES("ANIO", "#{anio,jdbcType=DECIMAL}");
		}
		if (record.getNumero() != null) {
			sql.VALUES("NUMERO", "#{numero,jdbcType=DECIMAL}");
		}
		if (record.getFechaapertura() != null) {
			sql.VALUES("FECHAAPERTURA", "#{fechaapertura,jdbcType=TIMESTAMP}");
		}
		if (record.getEstado() != null) {
			sql.VALUES("ESTADO", "#{estado,jdbcType=VARCHAR}");
		}
		if (record.getIdpersona() != null) {
			sql.VALUES("IDPERSONA", "#{idpersona,jdbcType=DECIMAL}");
		}
		if (record.getIdturno() != null) {
			sql.VALUES("IDTURNO", "#{idturno,jdbcType=DECIMAL}");
		}
		if (record.getFechamodificacion() != null) {
			sql.VALUES("FECHAMODIFICACION", "#{fechamodificacion,jdbcType=TIMESTAMP}");
		}
		if (record.getUsumodificacion() != null) {
			sql.VALUES("USUMODIFICACION", "#{usumodificacion,jdbcType=DECIMAL}");
		}
		if (record.getIdguardia() != null) {
			sql.VALUES("IDGUARDIA", "#{idguardia,jdbcType=DECIMAL}");
		}
		if (record.getDescripcionconsulta() != null) {
			sql.VALUES("DESCRIPCIONCONSULTA", "#{descripcionconsulta,jdbcType=VARCHAR}");
		}
		if (record.getRespuestaletrado() != null) {
			sql.VALUES("RESPUESTALETRADO", "#{respuestaletrado,jdbcType=VARCHAR}");
		}
		if (record.getIdtiposojcolegio() != null) {
			sql.VALUES("IDTIPOSOJCOLEGIO", "#{idtiposojcolegio,jdbcType=DECIMAL}");
		}
		if (record.getIdpersonajg() != null) {
			sql.VALUES("IDPERSONAJG", "#{idpersonajg,jdbcType=DECIMAL}");
		}
		if (record.getFacturado() != null) {
			sql.VALUES("FACTURADO", "#{facturado,jdbcType=VARCHAR}");
		}
		if (record.getPagado() != null) {
			sql.VALUES("PAGADO", "#{pagado,jdbcType=VARCHAR}");
		}
		if (record.getIdfacturacion() != null) {
			sql.VALUES("IDFACTURACION", "#{idfacturacion,jdbcType=DECIMAL}");
		}
		if (record.getNumsoj() != null) {
			sql.VALUES("NUMSOJ", "#{numsoj,jdbcType=VARCHAR}");
		}
		if (record.getIdtipoconsulta() != null) {
			sql.VALUES("IDTIPOCONSULTA", "#{idtipoconsulta,jdbcType=DECIMAL}");
		}
		if (record.getIdtiporespuesta() != null) {
			sql.VALUES("IDTIPORESPUESTA", "#{idtiporespuesta,jdbcType=DECIMAL}");
		}
		if (record.getEjgidtipoejg() != null) {
			sql.VALUES("EJGIDTIPOEJG", "#{ejgidtipoejg,jdbcType=DECIMAL}");
		}
		if (record.getEjganio() != null) {
			sql.VALUES("EJGANIO", "#{ejganio,jdbcType=DECIMAL}");
		}
		if (record.getEjgnumero() != null) {
			sql.VALUES("EJGNUMERO", "#{ejgnumero,jdbcType=DECIMAL}");
		}
		if (record.getSufijo() != null) {
			sql.VALUES("SUFIJO", "#{sufijo,jdbcType=VARCHAR}");
		}
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.SCS_SOJ
	 * @mbg.generated  Thu Dec 26 23:53:13 CET 2019
	 */
	public String selectByExample(ScsSojExample example) {
		SQL sql = new SQL();
		if (example != null && example.isDistinct()) {
			sql.SELECT_DISTINCT("IDINSTITUCION");
		} else {
			sql.SELECT("IDINSTITUCION");
		}
		sql.SELECT("IDTIPOSOJ");
		sql.SELECT("ANIO");
		sql.SELECT("NUMERO");
		sql.SELECT("FECHAAPERTURA");
		sql.SELECT("ESTADO");
		sql.SELECT("IDPERSONA");
		sql.SELECT("IDTURNO");
		sql.SELECT("FECHAMODIFICACION");
		sql.SELECT("USUMODIFICACION");
		sql.SELECT("IDGUARDIA");
		sql.SELECT("DESCRIPCIONCONSULTA");
		sql.SELECT("RESPUESTALETRADO");
		sql.SELECT("IDTIPOSOJCOLEGIO");
		sql.SELECT("IDPERSONAJG");
		sql.SELECT("FACTURADO");
		sql.SELECT("PAGADO");
		sql.SELECT("IDFACTURACION");
		sql.SELECT("NUMSOJ");
		sql.SELECT("IDTIPOCONSULTA");
		sql.SELECT("IDTIPORESPUESTA");
		sql.SELECT("EJGIDTIPOEJG");
		sql.SELECT("EJGANIO");
		sql.SELECT("EJGNUMERO");
		sql.SELECT("SUFIJO");
		sql.FROM("SCS_SOJ");
		applyWhere(sql, example, false);
		if (example != null && example.getOrderByClause() != null) {
			sql.ORDER_BY(example.getOrderByClause());
		}
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.SCS_SOJ
	 * @mbg.generated  Thu Dec 26 23:53:13 CET 2019
	 */
	public String updateByExampleSelective(Map<String, Object> parameter) {
		ScsSoj record = (ScsSoj) parameter.get("record");
		ScsSojExample example = (ScsSojExample) parameter.get("example");
		SQL sql = new SQL();
		sql.UPDATE("SCS_SOJ");
		if (record.getIdinstitucion() != null) {
			sql.SET("IDINSTITUCION = #{record.idinstitucion,jdbcType=DECIMAL}");
		}
		if (record.getIdtiposoj() != null) {
			sql.SET("IDTIPOSOJ = #{record.idtiposoj,jdbcType=DECIMAL}");
		}
		if (record.getAnio() != null) {
			sql.SET("ANIO = #{record.anio,jdbcType=DECIMAL}");
		}
		if (record.getNumero() != null) {
			sql.SET("NUMERO = #{record.numero,jdbcType=DECIMAL}");
		}
		if (record.getFechaapertura() != null) {
			sql.SET("FECHAAPERTURA = #{record.fechaapertura,jdbcType=TIMESTAMP}");
		}
		if (record.getEstado() != null) {
			sql.SET("ESTADO = #{record.estado,jdbcType=VARCHAR}");
		}
		if (record.getIdpersona() != null) {
			sql.SET("IDPERSONA = #{record.idpersona,jdbcType=DECIMAL}");
		}
		if (record.getIdturno() != null) {
			sql.SET("IDTURNO = #{record.idturno,jdbcType=DECIMAL}");
		}
		if (record.getFechamodificacion() != null) {
			sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=TIMESTAMP}");
		}
		if (record.getUsumodificacion() != null) {
			sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
		}
		if (record.getIdguardia() != null) {
			sql.SET("IDGUARDIA = #{record.idguardia,jdbcType=DECIMAL}");
		}
		if (record.getDescripcionconsulta() != null) {
			sql.SET("DESCRIPCIONCONSULTA = #{record.descripcionconsulta,jdbcType=VARCHAR}");
		}
		if (record.getRespuestaletrado() != null) {
			sql.SET("RESPUESTALETRADO = #{record.respuestaletrado,jdbcType=VARCHAR}");
		}
		if (record.getIdtiposojcolegio() != null) {
			sql.SET("IDTIPOSOJCOLEGIO = #{record.idtiposojcolegio,jdbcType=DECIMAL}");
		}
		if (record.getIdpersonajg() != null) {
			sql.SET("IDPERSONAJG = #{record.idpersonajg,jdbcType=DECIMAL}");
		}
		if (record.getFacturado() != null) {
			sql.SET("FACTURADO = #{record.facturado,jdbcType=VARCHAR}");
		}
		if (record.getPagado() != null) {
			sql.SET("PAGADO = #{record.pagado,jdbcType=VARCHAR}");
		}
		if (record.getIdfacturacion() != null) {
			sql.SET("IDFACTURACION = #{record.idfacturacion,jdbcType=DECIMAL}");
		}
		if (record.getNumsoj() != null) {
			sql.SET("NUMSOJ = #{record.numsoj,jdbcType=VARCHAR}");
		}
		if (record.getIdtipoconsulta() != null) {
			sql.SET("IDTIPOCONSULTA = #{record.idtipoconsulta,jdbcType=DECIMAL}");
		}
		if (record.getIdtiporespuesta() != null) {
			sql.SET("IDTIPORESPUESTA = #{record.idtiporespuesta,jdbcType=DECIMAL}");
		}
		if (record.getEjgidtipoejg() != null) {
			sql.SET("EJGIDTIPOEJG = #{record.ejgidtipoejg,jdbcType=DECIMAL}");
		}
		if (record.getEjganio() != null) {
			sql.SET("EJGANIO = #{record.ejganio,jdbcType=DECIMAL}");
		}
		if (record.getEjgnumero() != null) {
			sql.SET("EJGNUMERO = #{record.ejgnumero,jdbcType=DECIMAL}");
		}
		if (record.getSufijo() != null) {
			sql.SET("SUFIJO = #{record.sufijo,jdbcType=VARCHAR}");
		}
		applyWhere(sql, example, true);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.SCS_SOJ
	 * @mbg.generated  Thu Dec 26 23:53:13 CET 2019
	 */
	public String updateByExample(Map<String, Object> parameter) {
		SQL sql = new SQL();
		sql.UPDATE("SCS_SOJ");
		sql.SET("IDINSTITUCION = #{record.idinstitucion,jdbcType=DECIMAL}");
		sql.SET("IDTIPOSOJ = #{record.idtiposoj,jdbcType=DECIMAL}");
		sql.SET("ANIO = #{record.anio,jdbcType=DECIMAL}");
		sql.SET("NUMERO = #{record.numero,jdbcType=DECIMAL}");
		sql.SET("FECHAAPERTURA = #{record.fechaapertura,jdbcType=TIMESTAMP}");
		sql.SET("ESTADO = #{record.estado,jdbcType=VARCHAR}");
		sql.SET("IDPERSONA = #{record.idpersona,jdbcType=DECIMAL}");
		sql.SET("IDTURNO = #{record.idturno,jdbcType=DECIMAL}");
		sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=TIMESTAMP}");
		sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
		sql.SET("IDGUARDIA = #{record.idguardia,jdbcType=DECIMAL}");
		sql.SET("DESCRIPCIONCONSULTA = #{record.descripcionconsulta,jdbcType=VARCHAR}");
		sql.SET("RESPUESTALETRADO = #{record.respuestaletrado,jdbcType=VARCHAR}");
		sql.SET("IDTIPOSOJCOLEGIO = #{record.idtiposojcolegio,jdbcType=DECIMAL}");
		sql.SET("IDPERSONAJG = #{record.idpersonajg,jdbcType=DECIMAL}");
		sql.SET("FACTURADO = #{record.facturado,jdbcType=VARCHAR}");
		sql.SET("PAGADO = #{record.pagado,jdbcType=VARCHAR}");
		sql.SET("IDFACTURACION = #{record.idfacturacion,jdbcType=DECIMAL}");
		sql.SET("NUMSOJ = #{record.numsoj,jdbcType=VARCHAR}");
		sql.SET("IDTIPOCONSULTA = #{record.idtipoconsulta,jdbcType=DECIMAL}");
		sql.SET("IDTIPORESPUESTA = #{record.idtiporespuesta,jdbcType=DECIMAL}");
		sql.SET("EJGIDTIPOEJG = #{record.ejgidtipoejg,jdbcType=DECIMAL}");
		sql.SET("EJGANIO = #{record.ejganio,jdbcType=DECIMAL}");
		sql.SET("EJGNUMERO = #{record.ejgnumero,jdbcType=DECIMAL}");
		sql.SET("SUFIJO = #{record.sufijo,jdbcType=VARCHAR}");
		ScsSojExample example = (ScsSojExample) parameter.get("example");
		applyWhere(sql, example, true);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.SCS_SOJ
	 * @mbg.generated  Thu Dec 26 23:53:13 CET 2019
	 */
	public String updateByPrimaryKeySelective(ScsSoj record) {
		SQL sql = new SQL();
		sql.UPDATE("SCS_SOJ");
		if (record.getFechaapertura() != null) {
			sql.SET("FECHAAPERTURA = #{fechaapertura,jdbcType=TIMESTAMP}");
		}
		if (record.getEstado() != null) {
			sql.SET("ESTADO = #{estado,jdbcType=VARCHAR}");
		}
		if (record.getIdpersona() != null) {
			sql.SET("IDPERSONA = #{idpersona,jdbcType=DECIMAL}");
		}
		if (record.getIdturno() != null) {
			sql.SET("IDTURNO = #{idturno,jdbcType=DECIMAL}");
		}
		if (record.getFechamodificacion() != null) {
			sql.SET("FECHAMODIFICACION = #{fechamodificacion,jdbcType=TIMESTAMP}");
		}
		if (record.getUsumodificacion() != null) {
			sql.SET("USUMODIFICACION = #{usumodificacion,jdbcType=DECIMAL}");
		}
		if (record.getIdguardia() != null) {
			sql.SET("IDGUARDIA = #{idguardia,jdbcType=DECIMAL}");
		}
		if (record.getDescripcionconsulta() != null) {
			sql.SET("DESCRIPCIONCONSULTA = #{descripcionconsulta,jdbcType=VARCHAR}");
		}
		if (record.getRespuestaletrado() != null) {
			sql.SET("RESPUESTALETRADO = #{respuestaletrado,jdbcType=VARCHAR}");
		}
		if (record.getIdtiposojcolegio() != null) {
			sql.SET("IDTIPOSOJCOLEGIO = #{idtiposojcolegio,jdbcType=DECIMAL}");
		}
		if (record.getIdpersonajg() != null) {
			sql.SET("IDPERSONAJG = #{idpersonajg,jdbcType=DECIMAL}");
		}
		if (record.getFacturado() != null) {
			sql.SET("FACTURADO = #{facturado,jdbcType=VARCHAR}");
		}
		if (record.getPagado() != null) {
			sql.SET("PAGADO = #{pagado,jdbcType=VARCHAR}");
		}
		if (record.getIdfacturacion() != null) {
			sql.SET("IDFACTURACION = #{idfacturacion,jdbcType=DECIMAL}");
		}
		if (record.getNumsoj() != null) {
			sql.SET("NUMSOJ = #{numsoj,jdbcType=VARCHAR}");
		}
		if (record.getIdtipoconsulta() != null) {
			sql.SET("IDTIPOCONSULTA = #{idtipoconsulta,jdbcType=DECIMAL}");
		}
		if (record.getIdtiporespuesta() != null) {
			sql.SET("IDTIPORESPUESTA = #{idtiporespuesta,jdbcType=DECIMAL}");
		}
		if (record.getEjgidtipoejg() != null) {
			sql.SET("EJGIDTIPOEJG = #{ejgidtipoejg,jdbcType=DECIMAL}");
		}
		if (record.getEjganio() != null) {
			sql.SET("EJGANIO = #{ejganio,jdbcType=DECIMAL}");
		}
		if (record.getEjgnumero() != null) {
			sql.SET("EJGNUMERO = #{ejgnumero,jdbcType=DECIMAL}");
		}
		if (record.getSufijo() != null) {
			sql.SET("SUFIJO = #{sufijo,jdbcType=VARCHAR}");
		}
		sql.WHERE("IDINSTITUCION = #{idinstitucion,jdbcType=DECIMAL}");
		sql.WHERE("IDTIPOSOJ = #{idtiposoj,jdbcType=DECIMAL}");
		sql.WHERE("ANIO = #{anio,jdbcType=DECIMAL}");
		sql.WHERE("NUMERO = #{numero,jdbcType=DECIMAL}");
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.SCS_SOJ
	 * @mbg.generated  Thu Dec 26 23:53:13 CET 2019
	 */
	protected void applyWhere(SQL sql, ScsSojExample example, boolean includeExamplePhrase) {
		if (example == null) {
			return;
		}
		String parmPhrase1;
		String parmPhrase1_th;
		String parmPhrase2;
		String parmPhrase2_th;
		String parmPhrase3;
		String parmPhrase3_th;
		if (includeExamplePhrase) {
			parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
			parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
			parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
			parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
			parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
			parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
		} else {
			parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
			parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
			parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
			parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
			parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
			parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
		}
		StringBuilder sb = new StringBuilder();
		List<Criteria> oredCriteria = example.getOredCriteria();
		boolean firstCriteria = true;
		for (int i = 0; i < oredCriteria.size(); i++) {
			Criteria criteria = oredCriteria.get(i);
			if (criteria.isValid()) {
				if (firstCriteria) {
					firstCriteria = false;
				} else {
					sb.append(" or ");
				}
				sb.append('(');
				List<Criterion> criterions = criteria.getAllCriteria();
				boolean firstCriterion = true;
				for (int j = 0; j < criterions.size(); j++) {
					Criterion criterion = criterions.get(j);
					if (firstCriterion) {
						firstCriterion = false;
					} else {
						sb.append(" and ");
					}
					if (criterion.isNoValue()) {
						sb.append(criterion.getCondition());
					} else if (criterion.isSingleValue()) {
						if (criterion.getTypeHandler() == null) {
							sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
						} else {
							sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,
									criterion.getTypeHandler()));
						}
					} else if (criterion.isBetweenValue()) {
						if (criterion.getTypeHandler() == null) {
							sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
						} else {
							sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j,
									criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
						}
					} else if (criterion.isListValue()) {
						sb.append(criterion.getCondition());
						sb.append(" (");
						List<?> listItems = (List<?>) criterion.getValue();
						boolean comma = false;
						for (int k = 0; k < listItems.size(); k++) {
							if (comma) {
								sb.append(", ");
							} else {
								comma = true;
							}
							if (criterion.getTypeHandler() == null) {
								sb.append(String.format(parmPhrase3, i, j, k));
							} else {
								sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
							}
						}
						sb.append(')');
					}
				}
				sb.append(')');
			}
		}
		if (sb.length() > 0) {
			sql.WHERE(sb.toString());
		}
	}
}