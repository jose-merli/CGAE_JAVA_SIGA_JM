package org.itcgae.siga.db.entities;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CenRegMercantilExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USCGAE.CEN_REG_MERCANTIL
     *
     * @mbg.generated Fri Aug 03 11:55:26 CEST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USCGAE.CEN_REG_MERCANTIL
     *
     * @mbg.generated Fri Aug 03 11:55:26 CEST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USCGAE.CEN_REG_MERCANTIL
     *
     * @mbg.generated Fri Aug 03 11:55:26 CEST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CEN_REG_MERCANTIL
     *
     * @mbg.generated Fri Aug 03 11:55:26 CEST 2018
     */
    public CenRegMercantilExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CEN_REG_MERCANTIL
     *
     * @mbg.generated Fri Aug 03 11:55:26 CEST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CEN_REG_MERCANTIL
     *
     * @mbg.generated Fri Aug 03 11:55:26 CEST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CEN_REG_MERCANTIL
     *
     * @mbg.generated Fri Aug 03 11:55:26 CEST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CEN_REG_MERCANTIL
     *
     * @mbg.generated Fri Aug 03 11:55:26 CEST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CEN_REG_MERCANTIL
     *
     * @mbg.generated Fri Aug 03 11:55:26 CEST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CEN_REG_MERCANTIL
     *
     * @mbg.generated Fri Aug 03 11:55:26 CEST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CEN_REG_MERCANTIL
     *
     * @mbg.generated Fri Aug 03 11:55:26 CEST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CEN_REG_MERCANTIL
     *
     * @mbg.generated Fri Aug 03 11:55:26 CEST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CEN_REG_MERCANTIL
     *
     * @mbg.generated Fri Aug 03 11:55:26 CEST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CEN_REG_MERCANTIL
     *
     * @mbg.generated Fri Aug 03 11:55:26 CEST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE.CEN_REG_MERCANTIL
     *
     * @mbg.generated Fri Aug 03 11:55:26 CEST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdDatosRegIsNull() {
            addCriterion("ID_DATOS_REG is null");
            return (Criteria) this;
        }

        public Criteria andIdDatosRegIsNotNull() {
            addCriterion("ID_DATOS_REG is not null");
            return (Criteria) this;
        }

        public Criteria andIdDatosRegEqualTo(Long value) {
            addCriterion("ID_DATOS_REG =", value, "idDatosReg");
            return (Criteria) this;
        }

        public Criteria andIdDatosRegNotEqualTo(Long value) {
            addCriterion("ID_DATOS_REG <>", value, "idDatosReg");
            return (Criteria) this;
        }

        public Criteria andIdDatosRegGreaterThan(Long value) {
            addCriterion("ID_DATOS_REG >", value, "idDatosReg");
            return (Criteria) this;
        }

        public Criteria andIdDatosRegGreaterThanOrEqualTo(Long value) {
            addCriterion("ID_DATOS_REG >=", value, "idDatosReg");
            return (Criteria) this;
        }

        public Criteria andIdDatosRegLessThan(Long value) {
            addCriterion("ID_DATOS_REG <", value, "idDatosReg");
            return (Criteria) this;
        }

        public Criteria andIdDatosRegLessThanOrEqualTo(Long value) {
            addCriterion("ID_DATOS_REG <=", value, "idDatosReg");
            return (Criteria) this;
        }

        public Criteria andIdDatosRegIn(List<Long> values) {
            addCriterion("ID_DATOS_REG in", values, "idDatosReg");
            return (Criteria) this;
        }

        public Criteria andIdDatosRegNotIn(List<Long> values) {
            addCriterion("ID_DATOS_REG not in", values, "idDatosReg");
            return (Criteria) this;
        }

        public Criteria andIdDatosRegBetween(Long value1, Long value2) {
            addCriterion("ID_DATOS_REG between", value1, value2, "idDatosReg");
            return (Criteria) this;
        }

        public Criteria andIdDatosRegNotBetween(Long value1, Long value2) {
            addCriterion("ID_DATOS_REG not between", value1, value2, "idDatosReg");
            return (Criteria) this;
        }

        public Criteria andNumRegistroIsNull() {
            addCriterion("NUM_REGISTRO is null");
            return (Criteria) this;
        }

        public Criteria andNumRegistroIsNotNull() {
            addCriterion("NUM_REGISTRO is not null");
            return (Criteria) this;
        }

        public Criteria andNumRegistroEqualTo(String value) {
            addCriterion("NUM_REGISTRO =", value, "numRegistro");
            return (Criteria) this;
        }

        public Criteria andNumRegistroNotEqualTo(String value) {
            addCriterion("NUM_REGISTRO <>", value, "numRegistro");
            return (Criteria) this;
        }

        public Criteria andNumRegistroGreaterThan(String value) {
            addCriterion("NUM_REGISTRO >", value, "numRegistro");
            return (Criteria) this;
        }

        public Criteria andNumRegistroGreaterThanOrEqualTo(String value) {
            addCriterion("NUM_REGISTRO >=", value, "numRegistro");
            return (Criteria) this;
        }

        public Criteria andNumRegistroLessThan(String value) {
            addCriterion("NUM_REGISTRO <", value, "numRegistro");
            return (Criteria) this;
        }

        public Criteria andNumRegistroLessThanOrEqualTo(String value) {
            addCriterion("NUM_REGISTRO <=", value, "numRegistro");
            return (Criteria) this;
        }

        public Criteria andNumRegistroLike(String value) {
            addCriterion("NUM_REGISTRO like", value, "numRegistro");
            return (Criteria) this;
        }

        public Criteria andNumRegistroNotLike(String value) {
            addCriterion("NUM_REGISTRO not like", value, "numRegistro");
            return (Criteria) this;
        }

        public Criteria andNumRegistroIn(List<String> values) {
            addCriterion("NUM_REGISTRO in", values, "numRegistro");
            return (Criteria) this;
        }

        public Criteria andNumRegistroNotIn(List<String> values) {
            addCriterion("NUM_REGISTRO not in", values, "numRegistro");
            return (Criteria) this;
        }

        public Criteria andNumRegistroBetween(String value1, String value2) {
            addCriterion("NUM_REGISTRO between", value1, value2, "numRegistro");
            return (Criteria) this;
        }

        public Criteria andNumRegistroNotBetween(String value1, String value2) {
            addCriterion("NUM_REGISTRO not between", value1, value2, "numRegistro");
            return (Criteria) this;
        }

        public Criteria andIdentificacionRegIsNull() {
            addCriterion("IDENTIFICACION_REG is null");
            return (Criteria) this;
        }

        public Criteria andIdentificacionRegIsNotNull() {
            addCriterion("IDENTIFICACION_REG is not null");
            return (Criteria) this;
        }

        public Criteria andIdentificacionRegEqualTo(String value) {
            addCriterion("IDENTIFICACION_REG =", value, "identificacionReg");
            return (Criteria) this;
        }

        public Criteria andIdentificacionRegNotEqualTo(String value) {
            addCriterion("IDENTIFICACION_REG <>", value, "identificacionReg");
            return (Criteria) this;
        }

        public Criteria andIdentificacionRegGreaterThan(String value) {
            addCriterion("IDENTIFICACION_REG >", value, "identificacionReg");
            return (Criteria) this;
        }

        public Criteria andIdentificacionRegGreaterThanOrEqualTo(String value) {
            addCriterion("IDENTIFICACION_REG >=", value, "identificacionReg");
            return (Criteria) this;
        }

        public Criteria andIdentificacionRegLessThan(String value) {
            addCriterion("IDENTIFICACION_REG <", value, "identificacionReg");
            return (Criteria) this;
        }

        public Criteria andIdentificacionRegLessThanOrEqualTo(String value) {
            addCriterion("IDENTIFICACION_REG <=", value, "identificacionReg");
            return (Criteria) this;
        }

        public Criteria andIdentificacionRegLike(String value) {
            addCriterion("IDENTIFICACION_REG like", value, "identificacionReg");
            return (Criteria) this;
        }

        public Criteria andIdentificacionRegNotLike(String value) {
            addCriterion("IDENTIFICACION_REG not like", value, "identificacionReg");
            return (Criteria) this;
        }

        public Criteria andIdentificacionRegIn(List<String> values) {
            addCriterion("IDENTIFICACION_REG in", values, "identificacionReg");
            return (Criteria) this;
        }

        public Criteria andIdentificacionRegNotIn(List<String> values) {
            addCriterion("IDENTIFICACION_REG not in", values, "identificacionReg");
            return (Criteria) this;
        }

        public Criteria andIdentificacionRegBetween(String value1, String value2) {
            addCriterion("IDENTIFICACION_REG between", value1, value2, "identificacionReg");
            return (Criteria) this;
        }

        public Criteria andIdentificacionRegNotBetween(String value1, String value2) {
            addCriterion("IDENTIFICACION_REG not between", value1, value2, "identificacionReg");
            return (Criteria) this;
        }

        public Criteria andFechaInscripcionIsNull() {
            addCriterion("FECHA_INSCRIPCION is null");
            return (Criteria) this;
        }

        public Criteria andFechaInscripcionIsNotNull() {
            addCriterion("FECHA_INSCRIPCION is not null");
            return (Criteria) this;
        }

        public Criteria andFechaInscripcionEqualTo(Date value) {
            addCriterion("FECHA_INSCRIPCION =", value, "fechaInscripcion");
            return (Criteria) this;
        }

        public Criteria andFechaInscripcionNotEqualTo(Date value) {
            addCriterion("FECHA_INSCRIPCION <>", value, "fechaInscripcion");
            return (Criteria) this;
        }

        public Criteria andFechaInscripcionGreaterThan(Date value) {
            addCriterion("FECHA_INSCRIPCION >", value, "fechaInscripcion");
            return (Criteria) this;
        }

        public Criteria andFechaInscripcionGreaterThanOrEqualTo(Date value) {
            addCriterion("FECHA_INSCRIPCION >=", value, "fechaInscripcion");
            return (Criteria) this;
        }

        public Criteria andFechaInscripcionLessThan(Date value) {
            addCriterion("FECHA_INSCRIPCION <", value, "fechaInscripcion");
            return (Criteria) this;
        }

        public Criteria andFechaInscripcionLessThanOrEqualTo(Date value) {
            addCriterion("FECHA_INSCRIPCION <=", value, "fechaInscripcion");
            return (Criteria) this;
        }

        public Criteria andFechaInscripcionIn(List<Date> values) {
            addCriterion("FECHA_INSCRIPCION in", values, "fechaInscripcion");
            return (Criteria) this;
        }

        public Criteria andFechaInscripcionNotIn(List<Date> values) {
            addCriterion("FECHA_INSCRIPCION not in", values, "fechaInscripcion");
            return (Criteria) this;
        }

        public Criteria andFechaInscripcionBetween(Date value1, Date value2) {
            addCriterion("FECHA_INSCRIPCION between", value1, value2, "fechaInscripcion");
            return (Criteria) this;
        }

        public Criteria andFechaInscripcionNotBetween(Date value1, Date value2) {
            addCriterion("FECHA_INSCRIPCION not between", value1, value2, "fechaInscripcion");
            return (Criteria) this;
        }

        public Criteria andFechaCancelacionIsNull() {
            addCriterion("FECHA_CANCELACION is null");
            return (Criteria) this;
        }

        public Criteria andFechaCancelacionIsNotNull() {
            addCriterion("FECHA_CANCELACION is not null");
            return (Criteria) this;
        }

        public Criteria andFechaCancelacionEqualTo(Date value) {
            addCriterion("FECHA_CANCELACION =", value, "fechaCancelacion");
            return (Criteria) this;
        }

        public Criteria andFechaCancelacionNotEqualTo(Date value) {
            addCriterion("FECHA_CANCELACION <>", value, "fechaCancelacion");
            return (Criteria) this;
        }

        public Criteria andFechaCancelacionGreaterThan(Date value) {
            addCriterion("FECHA_CANCELACION >", value, "fechaCancelacion");
            return (Criteria) this;
        }

        public Criteria andFechaCancelacionGreaterThanOrEqualTo(Date value) {
            addCriterion("FECHA_CANCELACION >=", value, "fechaCancelacion");
            return (Criteria) this;
        }

        public Criteria andFechaCancelacionLessThan(Date value) {
            addCriterion("FECHA_CANCELACION <", value, "fechaCancelacion");
            return (Criteria) this;
        }

        public Criteria andFechaCancelacionLessThanOrEqualTo(Date value) {
            addCriterion("FECHA_CANCELACION <=", value, "fechaCancelacion");
            return (Criteria) this;
        }

        public Criteria andFechaCancelacionIn(List<Date> values) {
            addCriterion("FECHA_CANCELACION in", values, "fechaCancelacion");
            return (Criteria) this;
        }

        public Criteria andFechaCancelacionNotIn(List<Date> values) {
            addCriterion("FECHA_CANCELACION not in", values, "fechaCancelacion");
            return (Criteria) this;
        }

        public Criteria andFechaCancelacionBetween(Date value1, Date value2) {
            addCriterion("FECHA_CANCELACION between", value1, value2, "fechaCancelacion");
            return (Criteria) this;
        }

        public Criteria andFechaCancelacionNotBetween(Date value1, Date value2) {
            addCriterion("FECHA_CANCELACION not between", value1, value2, "fechaCancelacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionIsNull() {
            addCriterion("FECHAMODIFICACION is null");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionIsNotNull() {
            addCriterion("FECHAMODIFICACION is not null");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION =", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionNotEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION <>", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionGreaterThan(Date value) {
            addCriterion("FECHAMODIFICACION >", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionGreaterThanOrEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION >=", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionLessThan(Date value) {
            addCriterion("FECHAMODIFICACION <", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionLessThanOrEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION <=", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionIn(List<Date> values) {
            addCriterion("FECHAMODIFICACION in", values, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionNotIn(List<Date> values) {
            addCriterion("FECHAMODIFICACION not in", values, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionBetween(Date value1, Date value2) {
            addCriterion("FECHAMODIFICACION between", value1, value2, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionNotBetween(Date value1, Date value2) {
            addCriterion("FECHAMODIFICACION not between", value1, value2, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionIsNull() {
            addCriterion("USUMODIFICACION is null");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionIsNotNull() {
            addCriterion("USUMODIFICACION is not null");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionEqualTo(Integer value) {
            addCriterion("USUMODIFICACION =", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionNotEqualTo(Integer value) {
            addCriterion("USUMODIFICACION <>", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionGreaterThan(Integer value) {
            addCriterion("USUMODIFICACION >", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionGreaterThanOrEqualTo(Integer value) {
            addCriterion("USUMODIFICACION >=", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionLessThan(Integer value) {
            addCriterion("USUMODIFICACION <", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionLessThanOrEqualTo(Integer value) {
            addCriterion("USUMODIFICACION <=", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionIn(List<Integer> values) {
            addCriterion("USUMODIFICACION in", values, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionNotIn(List<Integer> values) {
            addCriterion("USUMODIFICACION not in", values, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionBetween(Integer value1, Integer value2) {
            addCriterion("USUMODIFICACION between", value1, value2, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionNotBetween(Integer value1, Integer value2) {
            addCriterion("USUMODIFICACION not between", value1, value2, "usumodificacion");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE.CEN_REG_MERCANTIL
     *
     * @mbg.generated do_not_delete_during_merge Fri Aug 03 11:55:26 CEST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE.CEN_REG_MERCANTIL
     *
     * @mbg.generated Fri Aug 03 11:55:26 CEST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}