package org.itcgae.siga.db.mappers;

import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;
import org.itcgae.siga.db.entities.ScsContrariosejg;
import org.itcgae.siga.db.entities.ScsContrariosejgExample.Criteria;
import org.itcgae.siga.db.entities.ScsContrariosejgExample.Criterion;
import org.itcgae.siga.db.entities.ScsContrariosejgExample;

public class ScsContrariosejgSqlProvider {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.SCS_CONTRARIOSEJG
	 * @mbg.generated  Wed Jun 09 13:34:59 CEST 2021
	 */
	public String countByExample(ScsContrariosejgExample example) {
		SQL sql = new SQL();
		sql.SELECT("count(*)").FROM("SCS_CONTRARIOSEJG");
		applyWhere(sql, example, false);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.SCS_CONTRARIOSEJG
	 * @mbg.generated  Wed Jun 09 13:34:59 CEST 2021
	 */
	public String deleteByExample(ScsContrariosejgExample example) {
		SQL sql = new SQL();
		sql.DELETE_FROM("SCS_CONTRARIOSEJG");
		applyWhere(sql, example, false);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.SCS_CONTRARIOSEJG
	 * @mbg.generated  Wed Jun 09 13:34:59 CEST 2021
	 */
	public String insertSelective(ScsContrariosejg record) {
		SQL sql = new SQL();
		sql.INSERT_INTO("SCS_CONTRARIOSEJG");
		if (record.getIdinstitucion() != null) {
			sql.VALUES("IDINSTITUCION", "#{idinstitucion,jdbcType=DECIMAL}");
		}
		if (record.getIdtipoejg() != null) {
			sql.VALUES("IDTIPOEJG", "#{idtipoejg,jdbcType=DECIMAL}");
		}
		if (record.getAnio() != null) {
			sql.VALUES("ANIO", "#{anio,jdbcType=DECIMAL}");
		}
		if (record.getNumero() != null) {
			sql.VALUES("NUMERO", "#{numero,jdbcType=DECIMAL}");
		}
		if (record.getIdpersona() != null) {
			sql.VALUES("IDPERSONA", "#{idpersona,jdbcType=DECIMAL}");
		}
		if (record.getFechamodificacion() != null) {
			sql.VALUES("FECHAMODIFICACION", "#{fechamodificacion,jdbcType=TIMESTAMP}");
		}
		if (record.getUsumodificacion() != null) {
			sql.VALUES("USUMODIFICACION", "#{usumodificacion,jdbcType=DECIMAL}");
		}
		if (record.getObservaciones() != null) {
			sql.VALUES("OBSERVACIONES", "#{observaciones,jdbcType=VARCHAR}");
		}
		if (record.getIdinstitucionProcu() != null) {
			sql.VALUES("IDINSTITUCION_PROCU", "#{idinstitucionProcu,jdbcType=DECIMAL}");
		}
		if (record.getIdprocurador() != null) {
			sql.VALUES("IDPROCURADOR", "#{idprocurador,jdbcType=DECIMAL}");
		}
		if (record.getIdabogadocontrarioejg() != null) {
			sql.VALUES("IDABOGADOCONTRARIOEJG", "#{idabogadocontrarioejg,jdbcType=DECIMAL}");
		}
		if (record.getNombreabogadocontrarioejg() != null) {
			sql.VALUES("NOMBREABOGADOCONTRARIOEJG", "#{nombreabogadocontrarioejg,jdbcType=VARCHAR}");
		}
		if (record.getIdrepresentanteejg() != null) {
			sql.VALUES("IDREPRESENTANTEEJG", "#{idrepresentanteejg,jdbcType=DECIMAL}");
		}
		if (record.getNombrerepresentanteejg() != null) {
			sql.VALUES("NOMBREREPRESENTANTEEJG", "#{nombrerepresentanteejg,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisproccodcolegio() != null) {
			sql.VALUES("TMPEJISPROCCODCOLEGIO", "#{tmpejisproccodcolegio,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisprocdesccolegio() != null) {
			sql.VALUES("TMPEJISPROCDESCCOLEGIO", "#{tmpejisprocdesccolegio,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisprocnumcolegiado() != null) {
			sql.VALUES("TMPEJISPROCNUMCOLEGIADO", "#{tmpejisprocnumcolegiado,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisprocnombre() != null) {
			sql.VALUES("TMPEJISPROCNOMBRE", "#{tmpejisprocnombre,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisprocapellido1() != null) {
			sql.VALUES("TMPEJISPROCAPELLIDO1", "#{tmpejisprocapellido1,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisprocapellido2() != null) {
			sql.VALUES("TMPEJISPROCAPELLIDO2", "#{tmpejisprocapellido2,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisprocnif() != null) {
			sql.VALUES("TMPEJISPROCNIF", "#{tmpejisprocnif,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisletcodcolegio() != null) {
			sql.VALUES("TMPEJISLETCODCOLEGIO", "#{tmpejisletcodcolegio,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisletdesccolegio() != null) {
			sql.VALUES("TMPEJISLETDESCCOLEGIO", "#{tmpejisletdesccolegio,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisletnumcolegiado() != null) {
			sql.VALUES("TMPEJISLETNUMCOLEGIADO", "#{tmpejisletnumcolegiado,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisletnombre() != null) {
			sql.VALUES("TMPEJISLETNOMBRE", "#{tmpejisletnombre,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisletapellido1() != null) {
			sql.VALUES("TMPEJISLETAPELLIDO1", "#{tmpejisletapellido1,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisletapellido2() != null) {
			sql.VALUES("TMPEJISLETAPELLIDO2", "#{tmpejisletapellido2,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisletnif() != null) {
			sql.VALUES("TMPEJISLETNIF", "#{tmpejisletnif,jdbcType=VARCHAR}");
		}
		if (record.getFechabaja() != null) {
			sql.VALUES("FECHABAJA", "#{fechabaja,jdbcType=TIMESTAMP}");
		}
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.SCS_CONTRARIOSEJG
	 * @mbg.generated  Wed Jun 09 13:35:00 CEST 2021
	 */
	public String selectByExample(ScsContrariosejgExample example) {
		SQL sql = new SQL();
		if (example != null && example.isDistinct()) {
			sql.SELECT_DISTINCT("IDINSTITUCION");
		} else {
			sql.SELECT("IDINSTITUCION");
		}
		sql.SELECT("IDTIPOEJG");
		sql.SELECT("ANIO");
		sql.SELECT("NUMERO");
		sql.SELECT("IDPERSONA");
		sql.SELECT("FECHAMODIFICACION");
		sql.SELECT("USUMODIFICACION");
		sql.SELECT("OBSERVACIONES");
		sql.SELECT("IDINSTITUCION_PROCU");
		sql.SELECT("IDPROCURADOR");
		sql.SELECT("IDABOGADOCONTRARIOEJG");
		sql.SELECT("NOMBREABOGADOCONTRARIOEJG");
		sql.SELECT("IDREPRESENTANTEEJG");
		sql.SELECT("NOMBREREPRESENTANTEEJG");
		sql.SELECT("TMPEJISPROCCODCOLEGIO");
		sql.SELECT("TMPEJISPROCDESCCOLEGIO");
		sql.SELECT("TMPEJISPROCNUMCOLEGIADO");
		sql.SELECT("TMPEJISPROCNOMBRE");
		sql.SELECT("TMPEJISPROCAPELLIDO1");
		sql.SELECT("TMPEJISPROCAPELLIDO2");
		sql.SELECT("TMPEJISPROCNIF");
		sql.SELECT("TMPEJISLETCODCOLEGIO");
		sql.SELECT("TMPEJISLETDESCCOLEGIO");
		sql.SELECT("TMPEJISLETNUMCOLEGIADO");
		sql.SELECT("TMPEJISLETNOMBRE");
		sql.SELECT("TMPEJISLETAPELLIDO1");
		sql.SELECT("TMPEJISLETAPELLIDO2");
		sql.SELECT("TMPEJISLETNIF");
		sql.SELECT("FECHABAJA");
		sql.FROM("SCS_CONTRARIOSEJG");
		applyWhere(sql, example, false);
		if (example != null && example.getOrderByClause() != null) {
			sql.ORDER_BY(example.getOrderByClause());
		}
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.SCS_CONTRARIOSEJG
	 * @mbg.generated  Wed Jun 09 13:35:00 CEST 2021
	 */
	public String updateByExampleSelective(Map<String, Object> parameter) {
		ScsContrariosejg record = (ScsContrariosejg) parameter.get("record");
		ScsContrariosejgExample example = (ScsContrariosejgExample) parameter.get("example");
		SQL sql = new SQL();
		sql.UPDATE("SCS_CONTRARIOSEJG");
		if (record.getIdinstitucion() != null) {
			sql.SET("IDINSTITUCION = #{record.idinstitucion,jdbcType=DECIMAL}");
		}
		if (record.getIdtipoejg() != null) {
			sql.SET("IDTIPOEJG = #{record.idtipoejg,jdbcType=DECIMAL}");
		}
		if (record.getAnio() != null) {
			sql.SET("ANIO = #{record.anio,jdbcType=DECIMAL}");
		}
		if (record.getNumero() != null) {
			sql.SET("NUMERO = #{record.numero,jdbcType=DECIMAL}");
		}
		if (record.getIdpersona() != null) {
			sql.SET("IDPERSONA = #{record.idpersona,jdbcType=DECIMAL}");
		}
		if (record.getFechamodificacion() != null) {
			sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=TIMESTAMP}");
		}
		if (record.getUsumodificacion() != null) {
			sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
		}
		if (record.getObservaciones() != null) {
			sql.SET("OBSERVACIONES = #{record.observaciones,jdbcType=VARCHAR}");
		}
		if (record.getIdinstitucionProcu() != null) {
			sql.SET("IDINSTITUCION_PROCU = #{record.idinstitucionProcu,jdbcType=DECIMAL}");
		}
		if (record.getIdprocurador() != null) {
			sql.SET("IDPROCURADOR = #{record.idprocurador,jdbcType=DECIMAL}");
		}
		if (record.getIdabogadocontrarioejg() != null) {
			sql.SET("IDABOGADOCONTRARIOEJG = #{record.idabogadocontrarioejg,jdbcType=DECIMAL}");
		}
		if (record.getNombreabogadocontrarioejg() != null) {
			sql.SET("NOMBREABOGADOCONTRARIOEJG = #{record.nombreabogadocontrarioejg,jdbcType=VARCHAR}");
		}
		if (record.getIdrepresentanteejg() != null) {
			sql.SET("IDREPRESENTANTEEJG = #{record.idrepresentanteejg,jdbcType=DECIMAL}");
		}
		if (record.getNombrerepresentanteejg() != null) {
			sql.SET("NOMBREREPRESENTANTEEJG = #{record.nombrerepresentanteejg,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisproccodcolegio() != null) {
			sql.SET("TMPEJISPROCCODCOLEGIO = #{record.tmpejisproccodcolegio,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisprocdesccolegio() != null) {
			sql.SET("TMPEJISPROCDESCCOLEGIO = #{record.tmpejisprocdesccolegio,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisprocnumcolegiado() != null) {
			sql.SET("TMPEJISPROCNUMCOLEGIADO = #{record.tmpejisprocnumcolegiado,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisprocnombre() != null) {
			sql.SET("TMPEJISPROCNOMBRE = #{record.tmpejisprocnombre,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisprocapellido1() != null) {
			sql.SET("TMPEJISPROCAPELLIDO1 = #{record.tmpejisprocapellido1,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisprocapellido2() != null) {
			sql.SET("TMPEJISPROCAPELLIDO2 = #{record.tmpejisprocapellido2,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisprocnif() != null) {
			sql.SET("TMPEJISPROCNIF = #{record.tmpejisprocnif,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisletcodcolegio() != null) {
			sql.SET("TMPEJISLETCODCOLEGIO = #{record.tmpejisletcodcolegio,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisletdesccolegio() != null) {
			sql.SET("TMPEJISLETDESCCOLEGIO = #{record.tmpejisletdesccolegio,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisletnumcolegiado() != null) {
			sql.SET("TMPEJISLETNUMCOLEGIADO = #{record.tmpejisletnumcolegiado,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisletnombre() != null) {
			sql.SET("TMPEJISLETNOMBRE = #{record.tmpejisletnombre,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisletapellido1() != null) {
			sql.SET("TMPEJISLETAPELLIDO1 = #{record.tmpejisletapellido1,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisletapellido2() != null) {
			sql.SET("TMPEJISLETAPELLIDO2 = #{record.tmpejisletapellido2,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisletnif() != null) {
			sql.SET("TMPEJISLETNIF = #{record.tmpejisletnif,jdbcType=VARCHAR}");
		}
		if (record.getFechabaja() != null) {
			sql.SET("FECHABAJA = #{record.fechabaja,jdbcType=TIMESTAMP}");
		}
		applyWhere(sql, example, true);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.SCS_CONTRARIOSEJG
	 * @mbg.generated  Wed Jun 09 13:35:00 CEST 2021
	 */
	public String updateByExample(Map<String, Object> parameter) {
		SQL sql = new SQL();
		sql.UPDATE("SCS_CONTRARIOSEJG");
		sql.SET("IDINSTITUCION = #{record.idinstitucion,jdbcType=DECIMAL}");
		sql.SET("IDTIPOEJG = #{record.idtipoejg,jdbcType=DECIMAL}");
		sql.SET("ANIO = #{record.anio,jdbcType=DECIMAL}");
		sql.SET("NUMERO = #{record.numero,jdbcType=DECIMAL}");
		sql.SET("IDPERSONA = #{record.idpersona,jdbcType=DECIMAL}");
		sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=TIMESTAMP}");
		sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
		sql.SET("OBSERVACIONES = #{record.observaciones,jdbcType=VARCHAR}");
		sql.SET("IDINSTITUCION_PROCU = #{record.idinstitucionProcu,jdbcType=DECIMAL}");
		sql.SET("IDPROCURADOR = #{record.idprocurador,jdbcType=DECIMAL}");
		sql.SET("IDABOGADOCONTRARIOEJG = #{record.idabogadocontrarioejg,jdbcType=DECIMAL}");
		sql.SET("NOMBREABOGADOCONTRARIOEJG = #{record.nombreabogadocontrarioejg,jdbcType=VARCHAR}");
		sql.SET("IDREPRESENTANTEEJG = #{record.idrepresentanteejg,jdbcType=DECIMAL}");
		sql.SET("NOMBREREPRESENTANTEEJG = #{record.nombrerepresentanteejg,jdbcType=VARCHAR}");
		sql.SET("TMPEJISPROCCODCOLEGIO = #{record.tmpejisproccodcolegio,jdbcType=VARCHAR}");
		sql.SET("TMPEJISPROCDESCCOLEGIO = #{record.tmpejisprocdesccolegio,jdbcType=VARCHAR}");
		sql.SET("TMPEJISPROCNUMCOLEGIADO = #{record.tmpejisprocnumcolegiado,jdbcType=VARCHAR}");
		sql.SET("TMPEJISPROCNOMBRE = #{record.tmpejisprocnombre,jdbcType=VARCHAR}");
		sql.SET("TMPEJISPROCAPELLIDO1 = #{record.tmpejisprocapellido1,jdbcType=VARCHAR}");
		sql.SET("TMPEJISPROCAPELLIDO2 = #{record.tmpejisprocapellido2,jdbcType=VARCHAR}");
		sql.SET("TMPEJISPROCNIF = #{record.tmpejisprocnif,jdbcType=VARCHAR}");
		sql.SET("TMPEJISLETCODCOLEGIO = #{record.tmpejisletcodcolegio,jdbcType=VARCHAR}");
		sql.SET("TMPEJISLETDESCCOLEGIO = #{record.tmpejisletdesccolegio,jdbcType=VARCHAR}");
		sql.SET("TMPEJISLETNUMCOLEGIADO = #{record.tmpejisletnumcolegiado,jdbcType=VARCHAR}");
		sql.SET("TMPEJISLETNOMBRE = #{record.tmpejisletnombre,jdbcType=VARCHAR}");
		sql.SET("TMPEJISLETAPELLIDO1 = #{record.tmpejisletapellido1,jdbcType=VARCHAR}");
		sql.SET("TMPEJISLETAPELLIDO2 = #{record.tmpejisletapellido2,jdbcType=VARCHAR}");
		sql.SET("TMPEJISLETNIF = #{record.tmpejisletnif,jdbcType=VARCHAR}");
		sql.SET("FECHABAJA = #{record.fechabaja,jdbcType=TIMESTAMP}");
		ScsContrariosejgExample example = (ScsContrariosejgExample) parameter.get("example");
		applyWhere(sql, example, true);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.SCS_CONTRARIOSEJG
	 * @mbg.generated  Wed Jun 09 13:35:00 CEST 2021
	 */
	public String updateByPrimaryKeySelective(ScsContrariosejg record) {
		SQL sql = new SQL();
		sql.UPDATE("SCS_CONTRARIOSEJG");
		if (record.getFechamodificacion() != null) {
			sql.SET("FECHAMODIFICACION = #{fechamodificacion,jdbcType=TIMESTAMP}");
		}
		if (record.getUsumodificacion() != null) {
			sql.SET("USUMODIFICACION = #{usumodificacion,jdbcType=DECIMAL}");
		}
		if (record.getObservaciones() != null) {
			sql.SET("OBSERVACIONES = #{observaciones,jdbcType=VARCHAR}");
		}
		if (record.getIdinstitucionProcu() != null) {
			sql.SET("IDINSTITUCION_PROCU = #{idinstitucionProcu,jdbcType=DECIMAL}");
		}
		if (record.getIdprocurador() != null) {
			sql.SET("IDPROCURADOR = #{idprocurador,jdbcType=DECIMAL}");
		}
		if (record.getIdabogadocontrarioejg() != null) {
			sql.SET("IDABOGADOCONTRARIOEJG = #{idabogadocontrarioejg,jdbcType=DECIMAL}");
		}
		if (record.getNombreabogadocontrarioejg() != null) {
			sql.SET("NOMBREABOGADOCONTRARIOEJG = #{nombreabogadocontrarioejg,jdbcType=VARCHAR}");
		}
		if (record.getIdrepresentanteejg() != null) {
			sql.SET("IDREPRESENTANTEEJG = #{idrepresentanteejg,jdbcType=DECIMAL}");
		}
		if (record.getNombrerepresentanteejg() != null) {
			sql.SET("NOMBREREPRESENTANTEEJG = #{nombrerepresentanteejg,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisproccodcolegio() != null) {
			sql.SET("TMPEJISPROCCODCOLEGIO = #{tmpejisproccodcolegio,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisprocdesccolegio() != null) {
			sql.SET("TMPEJISPROCDESCCOLEGIO = #{tmpejisprocdesccolegio,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisprocnumcolegiado() != null) {
			sql.SET("TMPEJISPROCNUMCOLEGIADO = #{tmpejisprocnumcolegiado,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisprocnombre() != null) {
			sql.SET("TMPEJISPROCNOMBRE = #{tmpejisprocnombre,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisprocapellido1() != null) {
			sql.SET("TMPEJISPROCAPELLIDO1 = #{tmpejisprocapellido1,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisprocapellido2() != null) {
			sql.SET("TMPEJISPROCAPELLIDO2 = #{tmpejisprocapellido2,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisprocnif() != null) {
			sql.SET("TMPEJISPROCNIF = #{tmpejisprocnif,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisletcodcolegio() != null) {
			sql.SET("TMPEJISLETCODCOLEGIO = #{tmpejisletcodcolegio,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisletdesccolegio() != null) {
			sql.SET("TMPEJISLETDESCCOLEGIO = #{tmpejisletdesccolegio,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisletnumcolegiado() != null) {
			sql.SET("TMPEJISLETNUMCOLEGIADO = #{tmpejisletnumcolegiado,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisletnombre() != null) {
			sql.SET("TMPEJISLETNOMBRE = #{tmpejisletnombre,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisletapellido1() != null) {
			sql.SET("TMPEJISLETAPELLIDO1 = #{tmpejisletapellido1,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisletapellido2() != null) {
			sql.SET("TMPEJISLETAPELLIDO2 = #{tmpejisletapellido2,jdbcType=VARCHAR}");
		}
		if (record.getTmpejisletnif() != null) {
			sql.SET("TMPEJISLETNIF = #{tmpejisletnif,jdbcType=VARCHAR}");
		}
		if (record.getFechabaja() != null) {
			sql.SET("FECHABAJA = #{fechabaja,jdbcType=TIMESTAMP}");
		}
		sql.WHERE("IDINSTITUCION = #{idinstitucion,jdbcType=DECIMAL}");
		sql.WHERE("IDTIPOEJG = #{idtipoejg,jdbcType=DECIMAL}");
		sql.WHERE("ANIO = #{anio,jdbcType=DECIMAL}");
		sql.WHERE("NUMERO = #{numero,jdbcType=DECIMAL}");
		sql.WHERE("IDPERSONA = #{idpersona,jdbcType=DECIMAL}");
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.SCS_CONTRARIOSEJG
	 * @mbg.generated  Wed Jun 09 13:35:00 CEST 2021
	 */
	protected void applyWhere(SQL sql, ScsContrariosejgExample example, boolean includeExamplePhrase) {
		if (example == null) {
			return;
		}
		String parmPhrase1;
		String parmPhrase1_th;
		String parmPhrase2;
		String parmPhrase2_th;
		String parmPhrase3;
		String parmPhrase3_th;
		if (includeExamplePhrase) {
			parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
			parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
			parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
			parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
			parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
			parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
		} else {
			parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
			parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
			parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
			parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
			parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
			parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
		}
		StringBuilder sb = new StringBuilder();
		List<Criteria> oredCriteria = example.getOredCriteria();
		boolean firstCriteria = true;
		for (int i = 0; i < oredCriteria.size(); i++) {
			Criteria criteria = oredCriteria.get(i);
			if (criteria.isValid()) {
				if (firstCriteria) {
					firstCriteria = false;
				} else {
					sb.append(" or ");
				}
				sb.append('(');
				List<Criterion> criterions = criteria.getAllCriteria();
				boolean firstCriterion = true;
				for (int j = 0; j < criterions.size(); j++) {
					Criterion criterion = criterions.get(j);
					if (firstCriterion) {
						firstCriterion = false;
					} else {
						sb.append(" and ");
					}
					if (criterion.isNoValue()) {
						sb.append(criterion.getCondition());
					} else if (criterion.isSingleValue()) {
						if (criterion.getTypeHandler() == null) {
							sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
						} else {
							sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,
									criterion.getTypeHandler()));
						}
					} else if (criterion.isBetweenValue()) {
						if (criterion.getTypeHandler() == null) {
							sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
						} else {
							sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j,
									criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
						}
					} else if (criterion.isListValue()) {
						sb.append(criterion.getCondition());
						sb.append(" (");
						List<?> listItems = (List<?>) criterion.getValue();
						boolean comma = false;
						for (int k = 0; k < listItems.size(); k++) {
							if (comma) {
								sb.append(", ");
							} else {
								comma = true;
							}
							if (criterion.getTypeHandler() == null) {
								sb.append(String.format(parmPhrase3, i, j, k));
							} else {
								sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
							}
						}
						sb.append(')');
					}
				}
				sb.append(')');
			}
		}
		if (sb.length() > 0) {
			sql.WHERE(sb.toString());
		}
	}
}