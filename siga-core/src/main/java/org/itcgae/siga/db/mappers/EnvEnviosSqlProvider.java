package org.itcgae.siga.db.mappers;

import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;
import org.itcgae.siga.db.entities.EnvEnvios;
import org.itcgae.siga.db.entities.EnvEnviosExample.Criteria;
import org.itcgae.siga.db.entities.EnvEnviosExample.Criterion;
import org.itcgae.siga.db.entities.EnvEnviosExample;

public class EnvEnviosSqlProvider {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.ENV_ENVIOS
	 * @mbg.generated  Tue Jan 22 10:10:11 CET 2019
	 */
	public String countByExample(EnvEnviosExample example) {
		SQL sql = new SQL();
		sql.SELECT("count(*)").FROM("ENV_ENVIOS");
		applyWhere(sql, example, false);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.ENV_ENVIOS
	 * @mbg.generated  Tue Jan 22 10:10:11 CET 2019
	 */
	public String deleteByExample(EnvEnviosExample example) {
		SQL sql = new SQL();
		sql.DELETE_FROM("ENV_ENVIOS");
		applyWhere(sql, example, false);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.ENV_ENVIOS
	 * @mbg.generated  Tue Jan 22 10:10:11 CET 2019
	 */
	public String insertSelective(EnvEnvios record) {
		SQL sql = new SQL();
		sql.INSERT_INTO("ENV_ENVIOS");
		if (record.getIdinstitucion() != null) {
			sql.VALUES("IDINSTITUCION", "#{idinstitucion,jdbcType=DECIMAL}");
		}
		sql.VALUES("IDENVIO", "#{idenvio,jdbcType=DECIMAL}");
		if (record.getDescripcion() != null) {
			sql.VALUES("DESCRIPCION", "#{descripcion,jdbcType=VARCHAR}");
		}
		if (record.getFecha() != null) {
			sql.VALUES("FECHA", "#{fecha,jdbcType=TIMESTAMP}");
		}
		if (record.getGenerardocumento() != null) {
			sql.VALUES("GENERARDOCUMENTO", "#{generardocumento,jdbcType=VARCHAR}");
		}
		if (record.getImprimiretiquetas() != null) {
			sql.VALUES("IMPRIMIRETIQUETAS", "#{imprimiretiquetas,jdbcType=VARCHAR}");
		}
		if (record.getIdplantillaenvios() != null) {
			sql.VALUES("IDPLANTILLAENVIOS", "#{idplantillaenvios,jdbcType=DECIMAL}");
		}
		if (record.getIdestado() != null) {
			sql.VALUES("IDESTADO", "#{idestado,jdbcType=DECIMAL}");
		}
		if (record.getIdtipoenvios() != null) {
			sql.VALUES("IDTIPOENVIOS", "#{idtipoenvios,jdbcType=DECIMAL}");
		}
		if (record.getFechamodificacion() != null) {
			sql.VALUES("FECHAMODIFICACION", "#{fechamodificacion,jdbcType=TIMESTAMP}");
		}
		if (record.getUsumodificacion() != null) {
			sql.VALUES("USUMODIFICACION", "#{usumodificacion,jdbcType=DECIMAL}");
		}
		if (record.getIdplantilla() != null) {
			sql.VALUES("IDPLANTILLA", "#{idplantilla,jdbcType=DECIMAL}");
		}
		if (record.getIdimpresora() != null) {
			sql.VALUES("IDIMPRESORA", "#{idimpresora,jdbcType=DECIMAL}");
		}
		if (record.getFechaprogramada() != null) {
			sql.VALUES("FECHAPROGRAMADA", "#{fechaprogramada,jdbcType=TIMESTAMP}");
		}
		if (record.getConsulta() != null) {
			sql.VALUES("CONSULTA", "#{consulta,jdbcType=VARCHAR}");
		}
		if (record.getAcuserecibo() != null) {
			sql.VALUES("ACUSERECIBO", "#{acuserecibo,jdbcType=VARCHAR}");
		}
		if (record.getIdtipointercambiotelematico() != null) {
			sql.VALUES("IDTIPOINTERCAMBIOTELEMATICO", "#{idtipointercambiotelematico,jdbcType=VARCHAR}");
		}
		if (record.getComisionajg() != null) {
			sql.VALUES("COMISIONAJG", "#{comisionajg,jdbcType=DECIMAL}");
		}
		if (record.getFechabaja() != null) {
			sql.VALUES("FECHABAJA", "#{fechabaja,jdbcType=TIMESTAMP}");
		}
		if (record.getCsv() != null) {
			sql.VALUES("CSV", "#{csv,jdbcType=VARCHAR}");
		}
		if (record.getIdsolicitudecos() != null) {
			sql.VALUES("IDSOLICITUDECOS", "#{idsolicitudecos,jdbcType=VARCHAR}");
		}
		if (record.getEnvio() != null) {
			sql.VALUES("ENVIO", "#{envio,jdbcType=VARCHAR}");
		}
		if (record.getIdmodelocomunicacion() != null) {
			sql.VALUES("IDMODELOCOMUNICACION", "#{idmodelocomunicacion,jdbcType=DECIMAL}");
		}
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.ENV_ENVIOS
	 * @mbg.generated  Tue Jan 22 10:10:11 CET 2019
	 */
	public String selectByExample(EnvEnviosExample example) {
		SQL sql = new SQL();
		if (example != null && example.isDistinct()) {
			sql.SELECT_DISTINCT("IDINSTITUCION");
		} else {
			sql.SELECT("IDINSTITUCION");
		}
		sql.SELECT("IDENVIO");
		sql.SELECT("DESCRIPCION");
		sql.SELECT("FECHA");
		sql.SELECT("GENERARDOCUMENTO");
		sql.SELECT("IMPRIMIRETIQUETAS");
		sql.SELECT("IDPLANTILLAENVIOS");
		sql.SELECT("IDESTADO");
		sql.SELECT("IDTIPOENVIOS");
		sql.SELECT("FECHAMODIFICACION");
		sql.SELECT("USUMODIFICACION");
		sql.SELECT("IDPLANTILLA");
		sql.SELECT("IDIMPRESORA");
		sql.SELECT("FECHAPROGRAMADA");
		sql.SELECT("CONSULTA");
		sql.SELECT("ACUSERECIBO");
		sql.SELECT("IDTIPOINTERCAMBIOTELEMATICO");
		sql.SELECT("COMISIONAJG");
		sql.SELECT("FECHABAJA");
		sql.SELECT("CSV");
		sql.SELECT("IDSOLICITUDECOS");
		sql.SELECT("ENVIO");
		sql.SELECT("IDMODELOCOMUNICACION");
		sql.FROM("ENV_ENVIOS");
		applyWhere(sql, example, false);
		if (example != null && example.getOrderByClause() != null) {
			sql.ORDER_BY(example.getOrderByClause());
		}
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.ENV_ENVIOS
	 * @mbg.generated  Tue Jan 22 10:10:11 CET 2019
	 */
	public String updateByExampleSelective(Map<String, Object> parameter) {
		EnvEnvios record = (EnvEnvios) parameter.get("record");
		EnvEnviosExample example = (EnvEnviosExample) parameter.get("example");
		SQL sql = new SQL();
		sql.UPDATE("ENV_ENVIOS");
		if (record.getIdinstitucion() != null) {
			sql.SET("IDINSTITUCION = #{record.idinstitucion,jdbcType=DECIMAL}");
		}
		if (record.getIdenvio() != null) {
			sql.SET("IDENVIO = #{record.idenvio,jdbcType=DECIMAL}");
		}
		if (record.getDescripcion() != null) {
			sql.SET("DESCRIPCION = #{record.descripcion,jdbcType=VARCHAR}");
		}
		if (record.getFecha() != null) {
			sql.SET("FECHA = #{record.fecha,jdbcType=TIMESTAMP}");
		}
		if (record.getGenerardocumento() != null) {
			sql.SET("GENERARDOCUMENTO = #{record.generardocumento,jdbcType=VARCHAR}");
		}
		if (record.getImprimiretiquetas() != null) {
			sql.SET("IMPRIMIRETIQUETAS = #{record.imprimiretiquetas,jdbcType=VARCHAR}");
		}
		if (record.getIdplantillaenvios() != null) {
			sql.SET("IDPLANTILLAENVIOS = #{record.idplantillaenvios,jdbcType=DECIMAL}");
		}
		if (record.getIdestado() != null) {
			sql.SET("IDESTADO = #{record.idestado,jdbcType=DECIMAL}");
		}
		if (record.getIdtipoenvios() != null) {
			sql.SET("IDTIPOENVIOS = #{record.idtipoenvios,jdbcType=DECIMAL}");
		}
		if (record.getFechamodificacion() != null) {
			sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=TIMESTAMP}");
		}
		if (record.getUsumodificacion() != null) {
			sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
		}
		if (record.getIdplantilla() != null) {
			sql.SET("IDPLANTILLA = #{record.idplantilla,jdbcType=DECIMAL}");
		}
		if (record.getIdimpresora() != null) {
			sql.SET("IDIMPRESORA = #{record.idimpresora,jdbcType=DECIMAL}");
		}
		if (record.getFechaprogramada() != null) {
			sql.SET("FECHAPROGRAMADA = #{record.fechaprogramada,jdbcType=TIMESTAMP}");
		}
		if (record.getConsulta() != null) {
			sql.SET("CONSULTA = #{record.consulta,jdbcType=VARCHAR}");
		}
		if (record.getAcuserecibo() != null) {
			sql.SET("ACUSERECIBO = #{record.acuserecibo,jdbcType=VARCHAR}");
		}
		if (record.getIdtipointercambiotelematico() != null) {
			sql.SET("IDTIPOINTERCAMBIOTELEMATICO = #{record.idtipointercambiotelematico,jdbcType=VARCHAR}");
		}
		if (record.getComisionajg() != null) {
			sql.SET("COMISIONAJG = #{record.comisionajg,jdbcType=DECIMAL}");
		}
		if (record.getFechabaja() != null) {
			sql.SET("FECHABAJA = #{record.fechabaja,jdbcType=TIMESTAMP}");
		}
		if (record.getCsv() != null) {
			sql.SET("CSV = #{record.csv,jdbcType=VARCHAR}");
		}
		if (record.getIdsolicitudecos() != null) {
			sql.SET("IDSOLICITUDECOS = #{record.idsolicitudecos,jdbcType=VARCHAR}");
		}
		if (record.getEnvio() != null) {
			sql.SET("ENVIO = #{record.envio,jdbcType=VARCHAR}");
		}
		if (record.getIdmodelocomunicacion() != null) {
			sql.SET("IDMODELOCOMUNICACION = #{record.idmodelocomunicacion,jdbcType=DECIMAL}");
		}
		applyWhere(sql, example, true);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.ENV_ENVIOS
	 * @mbg.generated  Tue Jan 22 10:10:11 CET 2019
	 */
	public String updateByExample(Map<String, Object> parameter) {
		SQL sql = new SQL();
		sql.UPDATE("ENV_ENVIOS");
		sql.SET("IDINSTITUCION = #{record.idinstitucion,jdbcType=DECIMAL}");
		sql.SET("IDENVIO = #{record.idenvio,jdbcType=DECIMAL}");
		sql.SET("DESCRIPCION = #{record.descripcion,jdbcType=VARCHAR}");
		sql.SET("FECHA = #{record.fecha,jdbcType=TIMESTAMP}");
		sql.SET("GENERARDOCUMENTO = #{record.generardocumento,jdbcType=VARCHAR}");
		sql.SET("IMPRIMIRETIQUETAS = #{record.imprimiretiquetas,jdbcType=VARCHAR}");
		sql.SET("IDPLANTILLAENVIOS = #{record.idplantillaenvios,jdbcType=DECIMAL}");
		sql.SET("IDESTADO = #{record.idestado,jdbcType=DECIMAL}");
		sql.SET("IDTIPOENVIOS = #{record.idtipoenvios,jdbcType=DECIMAL}");
		sql.SET("FECHAMODIFICACION = #{record.fechamodificacion,jdbcType=TIMESTAMP}");
		sql.SET("USUMODIFICACION = #{record.usumodificacion,jdbcType=DECIMAL}");
		sql.SET("IDPLANTILLA = #{record.idplantilla,jdbcType=DECIMAL}");
		sql.SET("IDIMPRESORA = #{record.idimpresora,jdbcType=DECIMAL}");
		sql.SET("FECHAPROGRAMADA = #{record.fechaprogramada,jdbcType=TIMESTAMP}");
		sql.SET("CONSULTA = #{record.consulta,jdbcType=VARCHAR}");
		sql.SET("ACUSERECIBO = #{record.acuserecibo,jdbcType=VARCHAR}");
		sql.SET("IDTIPOINTERCAMBIOTELEMATICO = #{record.idtipointercambiotelematico,jdbcType=VARCHAR}");
		sql.SET("COMISIONAJG = #{record.comisionajg,jdbcType=DECIMAL}");
		sql.SET("FECHABAJA = #{record.fechabaja,jdbcType=TIMESTAMP}");
		sql.SET("CSV = #{record.csv,jdbcType=VARCHAR}");
		sql.SET("IDSOLICITUDECOS = #{record.idsolicitudecos,jdbcType=VARCHAR}");
		sql.SET("ENVIO = #{record.envio,jdbcType=VARCHAR}");
		sql.SET("IDMODELOCOMUNICACION = #{record.idmodelocomunicacion,jdbcType=DECIMAL}");
		EnvEnviosExample example = (EnvEnviosExample) parameter.get("example");
		applyWhere(sql, example, true);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.ENV_ENVIOS
	 * @mbg.generated  Tue Jan 22 10:10:11 CET 2019
	 */
	public String updateByPrimaryKeySelective(EnvEnvios record) {
		SQL sql = new SQL();
		sql.UPDATE("ENV_ENVIOS");
		if (record.getDescripcion() != null) {
			sql.SET("DESCRIPCION = #{descripcion,jdbcType=VARCHAR}");
		}
		if (record.getFecha() != null) {
			sql.SET("FECHA = #{fecha,jdbcType=TIMESTAMP}");
		}
		if (record.getGenerardocumento() != null) {
			sql.SET("GENERARDOCUMENTO = #{generardocumento,jdbcType=VARCHAR}");
		}
		if (record.getImprimiretiquetas() != null) {
			sql.SET("IMPRIMIRETIQUETAS = #{imprimiretiquetas,jdbcType=VARCHAR}");
		}
		if (record.getIdplantillaenvios() != null) {
			sql.SET("IDPLANTILLAENVIOS = #{idplantillaenvios,jdbcType=DECIMAL}");
		}
		if (record.getIdestado() != null) {
			sql.SET("IDESTADO = #{idestado,jdbcType=DECIMAL}");
		}
		if (record.getIdtipoenvios() != null) {
			sql.SET("IDTIPOENVIOS = #{idtipoenvios,jdbcType=DECIMAL}");
		}
		if (record.getFechamodificacion() != null) {
			sql.SET("FECHAMODIFICACION = #{fechamodificacion,jdbcType=TIMESTAMP}");
		}
		if (record.getUsumodificacion() != null) {
			sql.SET("USUMODIFICACION = #{usumodificacion,jdbcType=DECIMAL}");
		}
		if (record.getIdplantilla() != null) {
			sql.SET("IDPLANTILLA = #{idplantilla,jdbcType=DECIMAL}");
		}
		if (record.getIdimpresora() != null) {
			sql.SET("IDIMPRESORA = #{idimpresora,jdbcType=DECIMAL}");
		}
		if (record.getFechaprogramada() != null) {
			sql.SET("FECHAPROGRAMADA = #{fechaprogramada,jdbcType=TIMESTAMP}");
		}
		if (record.getConsulta() != null) {
			sql.SET("CONSULTA = #{consulta,jdbcType=VARCHAR}");
		}
		if (record.getAcuserecibo() != null) {
			sql.SET("ACUSERECIBO = #{acuserecibo,jdbcType=VARCHAR}");
		}
		if (record.getIdtipointercambiotelematico() != null) {
			sql.SET("IDTIPOINTERCAMBIOTELEMATICO = #{idtipointercambiotelematico,jdbcType=VARCHAR}");
		}
		if (record.getComisionajg() != null) {
			sql.SET("COMISIONAJG = #{comisionajg,jdbcType=DECIMAL}");
		}
		if (record.getFechabaja() != null) {
			sql.SET("FECHABAJA = #{fechabaja,jdbcType=TIMESTAMP}");
		}
		if (record.getCsv() != null) {
			sql.SET("CSV = #{csv,jdbcType=VARCHAR}");
		}
		if (record.getIdsolicitudecos() != null) {
			sql.SET("IDSOLICITUDECOS = #{idsolicitudecos,jdbcType=VARCHAR}");
		}
		if (record.getEnvio() != null) {
			sql.SET("ENVIO = #{envio,jdbcType=VARCHAR}");
		}
		if (record.getIdmodelocomunicacion() != null) {
			sql.SET("IDMODELOCOMUNICACION = #{idmodelocomunicacion,jdbcType=DECIMAL}");
		}
		sql.WHERE("IDINSTITUCION = #{idinstitucion,jdbcType=DECIMAL}");
		sql.WHERE("IDENVIO = #{idenvio,jdbcType=DECIMAL}");
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE.ENV_ENVIOS
	 * @mbg.generated  Tue Jan 22 10:10:11 CET 2019
	 */
	protected void applyWhere(SQL sql, EnvEnviosExample example, boolean includeExamplePhrase) {
		if (example == null) {
			return;
		}
		String parmPhrase1;
		String parmPhrase1_th;
		String parmPhrase2;
		String parmPhrase2_th;
		String parmPhrase3;
		String parmPhrase3_th;
		if (includeExamplePhrase) {
			parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
			parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
			parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
			parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
			parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
			parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
		} else {
			parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
			parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
			parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
			parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
			parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
			parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
		}
		StringBuilder sb = new StringBuilder();
		List<Criteria> oredCriteria = example.getOredCriteria();
		boolean firstCriteria = true;
		for (int i = 0; i < oredCriteria.size(); i++) {
			Criteria criteria = oredCriteria.get(i);
			if (criteria.isValid()) {
				if (firstCriteria) {
					firstCriteria = false;
				} else {
					sb.append(" or ");
				}
				sb.append('(');
				List<Criterion> criterions = criteria.getAllCriteria();
				boolean firstCriterion = true;
				for (int j = 0; j < criterions.size(); j++) {
					Criterion criterion = criterions.get(j);
					if (firstCriterion) {
						firstCriterion = false;
					} else {
						sb.append(" and ");
					}
					if (criterion.isNoValue()) {
						sb.append(criterion.getCondition());
					} else if (criterion.isSingleValue()) {
						if (criterion.getTypeHandler() == null) {
							sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
						} else {
							sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,
									criterion.getTypeHandler()));
						}
					} else if (criterion.isBetweenValue()) {
						if (criterion.getTypeHandler() == null) {
							sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
						} else {
							sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j,
									criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
						}
					} else if (criterion.isListValue()) {
						sb.append(criterion.getCondition());
						sb.append(" (");
						List<?> listItems = (List<?>) criterion.getValue();
						boolean comma = false;
						for (int k = 0; k < listItems.size(); k++) {
							if (comma) {
								sb.append(", ");
							} else {
								comma = true;
							}
							if (criterion.getTypeHandler() == null) {
								sb.append(String.format(parmPhrase3, i, j, k));
							} else {
								sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
							}
						}
						sb.append(')');
					}
				}
				sb.append(')');
			}
		}
		if (sb.length() > 0) {
			sql.WHERE(sb.toString());
		}
	}
}