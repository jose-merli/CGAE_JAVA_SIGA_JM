package org.itcgae.siga.db.entities;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class FacRegistrofichcontaExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table USCGAE_INT.FAC_REGISTROFICHCONTA
	 * @mbg.generated  Tue Jan 25 09:48:46 CET 2022
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table USCGAE_INT.FAC_REGISTROFICHCONTA
	 * @mbg.generated  Tue Jan 25 09:48:46 CET 2022
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table USCGAE_INT.FAC_REGISTROFICHCONTA
	 * @mbg.generated  Tue Jan 25 09:48:46 CET 2022
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_INT.FAC_REGISTROFICHCONTA
	 * @mbg.generated  Tue Jan 25 09:48:46 CET 2022
	 */
	public FacRegistrofichcontaExample() {
		oredCriteria = new ArrayList<>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_INT.FAC_REGISTROFICHCONTA
	 * @mbg.generated  Tue Jan 25 09:48:46 CET 2022
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_INT.FAC_REGISTROFICHCONTA
	 * @mbg.generated  Tue Jan 25 09:48:46 CET 2022
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_INT.FAC_REGISTROFICHCONTA
	 * @mbg.generated  Tue Jan 25 09:48:46 CET 2022
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_INT.FAC_REGISTROFICHCONTA
	 * @mbg.generated  Tue Jan 25 09:48:46 CET 2022
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_INT.FAC_REGISTROFICHCONTA
	 * @mbg.generated  Tue Jan 25 09:48:46 CET 2022
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_INT.FAC_REGISTROFICHCONTA
	 * @mbg.generated  Tue Jan 25 09:48:46 CET 2022
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_INT.FAC_REGISTROFICHCONTA
	 * @mbg.generated  Tue Jan 25 09:48:46 CET 2022
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_INT.FAC_REGISTROFICHCONTA
	 * @mbg.generated  Tue Jan 25 09:48:46 CET 2022
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_INT.FAC_REGISTROFICHCONTA
	 * @mbg.generated  Tue Jan 25 09:48:46 CET 2022
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table USCGAE_INT.FAC_REGISTROFICHCONTA
	 * @mbg.generated  Tue Jan 25 09:48:46 CET 2022
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table USCGAE_INT.FAC_REGISTROFICHCONTA
	 * @mbg.generated  Tue Jan 25 09:48:46 CET 2022
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdinstitucionIsNull() {
			addCriterion("IDINSTITUCION is null");
			return (Criteria) this;
		}

		public Criteria andIdinstitucionIsNotNull() {
			addCriterion("IDINSTITUCION is not null");
			return (Criteria) this;
		}

		public Criteria andIdinstitucionEqualTo(Short value) {
			addCriterion("IDINSTITUCION =", value, "idinstitucion");
			return (Criteria) this;
		}

		public Criteria andIdinstitucionNotEqualTo(Short value) {
			addCriterion("IDINSTITUCION <>", value, "idinstitucion");
			return (Criteria) this;
		}

		public Criteria andIdinstitucionGreaterThan(Short value) {
			addCriterion("IDINSTITUCION >", value, "idinstitucion");
			return (Criteria) this;
		}

		public Criteria andIdinstitucionGreaterThanOrEqualTo(Short value) {
			addCriterion("IDINSTITUCION >=", value, "idinstitucion");
			return (Criteria) this;
		}

		public Criteria andIdinstitucionLessThan(Short value) {
			addCriterion("IDINSTITUCION <", value, "idinstitucion");
			return (Criteria) this;
		}

		public Criteria andIdinstitucionLessThanOrEqualTo(Short value) {
			addCriterion("IDINSTITUCION <=", value, "idinstitucion");
			return (Criteria) this;
		}

		public Criteria andIdinstitucionIn(List<Short> values) {
			addCriterion("IDINSTITUCION in", values, "idinstitucion");
			return (Criteria) this;
		}

		public Criteria andIdinstitucionNotIn(List<Short> values) {
			addCriterion("IDINSTITUCION not in", values, "idinstitucion");
			return (Criteria) this;
		}

		public Criteria andIdinstitucionBetween(Short value1, Short value2) {
			addCriterion("IDINSTITUCION between", value1, value2, "idinstitucion");
			return (Criteria) this;
		}

		public Criteria andIdinstitucionNotBetween(Short value1, Short value2) {
			addCriterion("IDINSTITUCION not between", value1, value2, "idinstitucion");
			return (Criteria) this;
		}

		public Criteria andIdcontabilidadIsNull() {
			addCriterion("IDCONTABILIDAD is null");
			return (Criteria) this;
		}

		public Criteria andIdcontabilidadIsNotNull() {
			addCriterion("IDCONTABILIDAD is not null");
			return (Criteria) this;
		}

		public Criteria andIdcontabilidadEqualTo(Long value) {
			addCriterion("IDCONTABILIDAD =", value, "idcontabilidad");
			return (Criteria) this;
		}

		public Criteria andIdcontabilidadNotEqualTo(Long value) {
			addCriterion("IDCONTABILIDAD <>", value, "idcontabilidad");
			return (Criteria) this;
		}

		public Criteria andIdcontabilidadGreaterThan(Long value) {
			addCriterion("IDCONTABILIDAD >", value, "idcontabilidad");
			return (Criteria) this;
		}

		public Criteria andIdcontabilidadGreaterThanOrEqualTo(Long value) {
			addCriterion("IDCONTABILIDAD >=", value, "idcontabilidad");
			return (Criteria) this;
		}

		public Criteria andIdcontabilidadLessThan(Long value) {
			addCriterion("IDCONTABILIDAD <", value, "idcontabilidad");
			return (Criteria) this;
		}

		public Criteria andIdcontabilidadLessThanOrEqualTo(Long value) {
			addCriterion("IDCONTABILIDAD <=", value, "idcontabilidad");
			return (Criteria) this;
		}

		public Criteria andIdcontabilidadIn(List<Long> values) {
			addCriterion("IDCONTABILIDAD in", values, "idcontabilidad");
			return (Criteria) this;
		}

		public Criteria andIdcontabilidadNotIn(List<Long> values) {
			addCriterion("IDCONTABILIDAD not in", values, "idcontabilidad");
			return (Criteria) this;
		}

		public Criteria andIdcontabilidadBetween(Long value1, Long value2) {
			addCriterion("IDCONTABILIDAD between", value1, value2, "idcontabilidad");
			return (Criteria) this;
		}

		public Criteria andIdcontabilidadNotBetween(Long value1, Long value2) {
			addCriterion("IDCONTABILIDAD not between", value1, value2, "idcontabilidad");
			return (Criteria) this;
		}

		public Criteria andFechacreacionIsNull() {
			addCriterion("FECHACREACION is null");
			return (Criteria) this;
		}

		public Criteria andFechacreacionIsNotNull() {
			addCriterion("FECHACREACION is not null");
			return (Criteria) this;
		}

		public Criteria andFechacreacionEqualTo(Date value) {
			addCriterion("FECHACREACION =", value, "fechacreacion");
			return (Criteria) this;
		}

		public Criteria andFechacreacionNotEqualTo(Date value) {
			addCriterion("FECHACREACION <>", value, "fechacreacion");
			return (Criteria) this;
		}

		public Criteria andFechacreacionGreaterThan(Date value) {
			addCriterion("FECHACREACION >", value, "fechacreacion");
			return (Criteria) this;
		}

		public Criteria andFechacreacionGreaterThanOrEqualTo(Date value) {
			addCriterion("FECHACREACION >=", value, "fechacreacion");
			return (Criteria) this;
		}

		public Criteria andFechacreacionLessThan(Date value) {
			addCriterion("FECHACREACION <", value, "fechacreacion");
			return (Criteria) this;
		}

		public Criteria andFechacreacionLessThanOrEqualTo(Date value) {
			addCriterion("FECHACREACION <=", value, "fechacreacion");
			return (Criteria) this;
		}

		public Criteria andFechacreacionIn(List<Date> values) {
			addCriterion("FECHACREACION in", values, "fechacreacion");
			return (Criteria) this;
		}

		public Criteria andFechacreacionNotIn(List<Date> values) {
			addCriterion("FECHACREACION not in", values, "fechacreacion");
			return (Criteria) this;
		}

		public Criteria andFechacreacionBetween(Date value1, Date value2) {
			addCriterion("FECHACREACION between", value1, value2, "fechacreacion");
			return (Criteria) this;
		}

		public Criteria andFechacreacionNotBetween(Date value1, Date value2) {
			addCriterion("FECHACREACION not between", value1, value2, "fechacreacion");
			return (Criteria) this;
		}

		public Criteria andFechadesdeIsNull() {
			addCriterion("FECHADESDE is null");
			return (Criteria) this;
		}

		public Criteria andFechadesdeIsNotNull() {
			addCriterion("FECHADESDE is not null");
			return (Criteria) this;
		}

		public Criteria andFechadesdeEqualTo(Date value) {
			addCriterion("FECHADESDE =", value, "fechadesde");
			return (Criteria) this;
		}

		public Criteria andFechadesdeNotEqualTo(Date value) {
			addCriterion("FECHADESDE <>", value, "fechadesde");
			return (Criteria) this;
		}

		public Criteria andFechadesdeGreaterThan(Date value) {
			addCriterion("FECHADESDE >", value, "fechadesde");
			return (Criteria) this;
		}

		public Criteria andFechadesdeGreaterThanOrEqualTo(Date value) {
			addCriterion("FECHADESDE >=", value, "fechadesde");
			return (Criteria) this;
		}

		public Criteria andFechadesdeLessThan(Date value) {
			addCriterion("FECHADESDE <", value, "fechadesde");
			return (Criteria) this;
		}

		public Criteria andFechadesdeLessThanOrEqualTo(Date value) {
			addCriterion("FECHADESDE <=", value, "fechadesde");
			return (Criteria) this;
		}

		public Criteria andFechadesdeIn(List<Date> values) {
			addCriterion("FECHADESDE in", values, "fechadesde");
			return (Criteria) this;
		}

		public Criteria andFechadesdeNotIn(List<Date> values) {
			addCriterion("FECHADESDE not in", values, "fechadesde");
			return (Criteria) this;
		}

		public Criteria andFechadesdeBetween(Date value1, Date value2) {
			addCriterion("FECHADESDE between", value1, value2, "fechadesde");
			return (Criteria) this;
		}

		public Criteria andFechadesdeNotBetween(Date value1, Date value2) {
			addCriterion("FECHADESDE not between", value1, value2, "fechadesde");
			return (Criteria) this;
		}

		public Criteria andFechahastaIsNull() {
			addCriterion("FECHAHASTA is null");
			return (Criteria) this;
		}

		public Criteria andFechahastaIsNotNull() {
			addCriterion("FECHAHASTA is not null");
			return (Criteria) this;
		}

		public Criteria andFechahastaEqualTo(Date value) {
			addCriterion("FECHAHASTA =", value, "fechahasta");
			return (Criteria) this;
		}

		public Criteria andFechahastaNotEqualTo(Date value) {
			addCriterion("FECHAHASTA <>", value, "fechahasta");
			return (Criteria) this;
		}

		public Criteria andFechahastaGreaterThan(Date value) {
			addCriterion("FECHAHASTA >", value, "fechahasta");
			return (Criteria) this;
		}

		public Criteria andFechahastaGreaterThanOrEqualTo(Date value) {
			addCriterion("FECHAHASTA >=", value, "fechahasta");
			return (Criteria) this;
		}

		public Criteria andFechahastaLessThan(Date value) {
			addCriterion("FECHAHASTA <", value, "fechahasta");
			return (Criteria) this;
		}

		public Criteria andFechahastaLessThanOrEqualTo(Date value) {
			addCriterion("FECHAHASTA <=", value, "fechahasta");
			return (Criteria) this;
		}

		public Criteria andFechahastaIn(List<Date> values) {
			addCriterion("FECHAHASTA in", values, "fechahasta");
			return (Criteria) this;
		}

		public Criteria andFechahastaNotIn(List<Date> values) {
			addCriterion("FECHAHASTA not in", values, "fechahasta");
			return (Criteria) this;
		}

		public Criteria andFechahastaBetween(Date value1, Date value2) {
			addCriterion("FECHAHASTA between", value1, value2, "fechahasta");
			return (Criteria) this;
		}

		public Criteria andFechahastaNotBetween(Date value1, Date value2) {
			addCriterion("FECHAHASTA not between", value1, value2, "fechahasta");
			return (Criteria) this;
		}

		public Criteria andNumeroasientosIsNull() {
			addCriterion("NUMEROASIENTOS is null");
			return (Criteria) this;
		}

		public Criteria andNumeroasientosIsNotNull() {
			addCriterion("NUMEROASIENTOS is not null");
			return (Criteria) this;
		}

		public Criteria andNumeroasientosEqualTo(Long value) {
			addCriterion("NUMEROASIENTOS =", value, "numeroasientos");
			return (Criteria) this;
		}

		public Criteria andNumeroasientosNotEqualTo(Long value) {
			addCriterion("NUMEROASIENTOS <>", value, "numeroasientos");
			return (Criteria) this;
		}

		public Criteria andNumeroasientosGreaterThan(Long value) {
			addCriterion("NUMEROASIENTOS >", value, "numeroasientos");
			return (Criteria) this;
		}

		public Criteria andNumeroasientosGreaterThanOrEqualTo(Long value) {
			addCriterion("NUMEROASIENTOS >=", value, "numeroasientos");
			return (Criteria) this;
		}

		public Criteria andNumeroasientosLessThan(Long value) {
			addCriterion("NUMEROASIENTOS <", value, "numeroasientos");
			return (Criteria) this;
		}

		public Criteria andNumeroasientosLessThanOrEqualTo(Long value) {
			addCriterion("NUMEROASIENTOS <=", value, "numeroasientos");
			return (Criteria) this;
		}

		public Criteria andNumeroasientosIn(List<Long> values) {
			addCriterion("NUMEROASIENTOS in", values, "numeroasientos");
			return (Criteria) this;
		}

		public Criteria andNumeroasientosNotIn(List<Long> values) {
			addCriterion("NUMEROASIENTOS not in", values, "numeroasientos");
			return (Criteria) this;
		}

		public Criteria andNumeroasientosBetween(Long value1, Long value2) {
			addCriterion("NUMEROASIENTOS between", value1, value2, "numeroasientos");
			return (Criteria) this;
		}

		public Criteria andNumeroasientosNotBetween(Long value1, Long value2) {
			addCriterion("NUMEROASIENTOS not between", value1, value2, "numeroasientos");
			return (Criteria) this;
		}

		public Criteria andFechamodificacionIsNull() {
			addCriterion("FECHAMODIFICACION is null");
			return (Criteria) this;
		}

		public Criteria andFechamodificacionIsNotNull() {
			addCriterion("FECHAMODIFICACION is not null");
			return (Criteria) this;
		}

		public Criteria andFechamodificacionEqualTo(Date value) {
			addCriterion("FECHAMODIFICACION =", value, "fechamodificacion");
			return (Criteria) this;
		}

		public Criteria andFechamodificacionNotEqualTo(Date value) {
			addCriterion("FECHAMODIFICACION <>", value, "fechamodificacion");
			return (Criteria) this;
		}

		public Criteria andFechamodificacionGreaterThan(Date value) {
			addCriterion("FECHAMODIFICACION >", value, "fechamodificacion");
			return (Criteria) this;
		}

		public Criteria andFechamodificacionGreaterThanOrEqualTo(Date value) {
			addCriterion("FECHAMODIFICACION >=", value, "fechamodificacion");
			return (Criteria) this;
		}

		public Criteria andFechamodificacionLessThan(Date value) {
			addCriterion("FECHAMODIFICACION <", value, "fechamodificacion");
			return (Criteria) this;
		}

		public Criteria andFechamodificacionLessThanOrEqualTo(Date value) {
			addCriterion("FECHAMODIFICACION <=", value, "fechamodificacion");
			return (Criteria) this;
		}

		public Criteria andFechamodificacionIn(List<Date> values) {
			addCriterion("FECHAMODIFICACION in", values, "fechamodificacion");
			return (Criteria) this;
		}

		public Criteria andFechamodificacionNotIn(List<Date> values) {
			addCriterion("FECHAMODIFICACION not in", values, "fechamodificacion");
			return (Criteria) this;
		}

		public Criteria andFechamodificacionBetween(Date value1, Date value2) {
			addCriterion("FECHAMODIFICACION between", value1, value2, "fechamodificacion");
			return (Criteria) this;
		}

		public Criteria andFechamodificacionNotBetween(Date value1, Date value2) {
			addCriterion("FECHAMODIFICACION not between", value1, value2, "fechamodificacion");
			return (Criteria) this;
		}

		public Criteria andUsumodificacionIsNull() {
			addCriterion("USUMODIFICACION is null");
			return (Criteria) this;
		}

		public Criteria andUsumodificacionIsNotNull() {
			addCriterion("USUMODIFICACION is not null");
			return (Criteria) this;
		}

		public Criteria andUsumodificacionEqualTo(Integer value) {
			addCriterion("USUMODIFICACION =", value, "usumodificacion");
			return (Criteria) this;
		}

		public Criteria andUsumodificacionNotEqualTo(Integer value) {
			addCriterion("USUMODIFICACION <>", value, "usumodificacion");
			return (Criteria) this;
		}

		public Criteria andUsumodificacionGreaterThan(Integer value) {
			addCriterion("USUMODIFICACION >", value, "usumodificacion");
			return (Criteria) this;
		}

		public Criteria andUsumodificacionGreaterThanOrEqualTo(Integer value) {
			addCriterion("USUMODIFICACION >=", value, "usumodificacion");
			return (Criteria) this;
		}

		public Criteria andUsumodificacionLessThan(Integer value) {
			addCriterion("USUMODIFICACION <", value, "usumodificacion");
			return (Criteria) this;
		}

		public Criteria andUsumodificacionLessThanOrEqualTo(Integer value) {
			addCriterion("USUMODIFICACION <=", value, "usumodificacion");
			return (Criteria) this;
		}

		public Criteria andUsumodificacionIn(List<Integer> values) {
			addCriterion("USUMODIFICACION in", values, "usumodificacion");
			return (Criteria) this;
		}

		public Criteria andUsumodificacionNotIn(List<Integer> values) {
			addCriterion("USUMODIFICACION not in", values, "usumodificacion");
			return (Criteria) this;
		}

		public Criteria andUsumodificacionBetween(Integer value1, Integer value2) {
			addCriterion("USUMODIFICACION between", value1, value2, "usumodificacion");
			return (Criteria) this;
		}

		public Criteria andUsumodificacionNotBetween(Integer value1, Integer value2) {
			addCriterion("USUMODIFICACION not between", value1, value2, "usumodificacion");
			return (Criteria) this;
		}

		public Criteria andNombreficheroIsNull() {
			addCriterion("NOMBREFICHERO is null");
			return (Criteria) this;
		}

		public Criteria andNombreficheroIsNotNull() {
			addCriterion("NOMBREFICHERO is not null");
			return (Criteria) this;
		}

		public Criteria andNombreficheroEqualTo(String value) {
			addCriterion("NOMBREFICHERO =", value, "nombrefichero");
			return (Criteria) this;
		}

		public Criteria andNombreficheroNotEqualTo(String value) {
			addCriterion("NOMBREFICHERO <>", value, "nombrefichero");
			return (Criteria) this;
		}

		public Criteria andNombreficheroGreaterThan(String value) {
			addCriterion("NOMBREFICHERO >", value, "nombrefichero");
			return (Criteria) this;
		}

		public Criteria andNombreficheroGreaterThanOrEqualTo(String value) {
			addCriterion("NOMBREFICHERO >=", value, "nombrefichero");
			return (Criteria) this;
		}

		public Criteria andNombreficheroLessThan(String value) {
			addCriterion("NOMBREFICHERO <", value, "nombrefichero");
			return (Criteria) this;
		}

		public Criteria andNombreficheroLessThanOrEqualTo(String value) {
			addCriterion("NOMBREFICHERO <=", value, "nombrefichero");
			return (Criteria) this;
		}

		public Criteria andNombreficheroLike(String value) {
			addCriterion("NOMBREFICHERO like", value, "nombrefichero");
			return (Criteria) this;
		}

		public Criteria andNombreficheroNotLike(String value) {
			addCriterion("NOMBREFICHERO not like", value, "nombrefichero");
			return (Criteria) this;
		}

		public Criteria andNombreficheroIn(List<String> values) {
			addCriterion("NOMBREFICHERO in", values, "nombrefichero");
			return (Criteria) this;
		}

		public Criteria andNombreficheroNotIn(List<String> values) {
			addCriterion("NOMBREFICHERO not in", values, "nombrefichero");
			return (Criteria) this;
		}

		public Criteria andNombreficheroBetween(String value1, String value2) {
			addCriterion("NOMBREFICHERO between", value1, value2, "nombrefichero");
			return (Criteria) this;
		}

		public Criteria andNombreficheroNotBetween(String value1, String value2) {
			addCriterion("NOMBREFICHERO not between", value1, value2, "nombrefichero");
			return (Criteria) this;
		}

		public Criteria andEstadoIsNull() {
			addCriterion("ESTADO is null");
			return (Criteria) this;
		}

		public Criteria andEstadoIsNotNull() {
			addCriterion("ESTADO is not null");
			return (Criteria) this;
		}

		public Criteria andEstadoEqualTo(Short value) {
			addCriterion("ESTADO =", value, "estado");
			return (Criteria) this;
		}

		public Criteria andEstadoNotEqualTo(Short value) {
			addCriterion("ESTADO <>", value, "estado");
			return (Criteria) this;
		}

		public Criteria andEstadoGreaterThan(Short value) {
			addCriterion("ESTADO >", value, "estado");
			return (Criteria) this;
		}

		public Criteria andEstadoGreaterThanOrEqualTo(Short value) {
			addCriterion("ESTADO >=", value, "estado");
			return (Criteria) this;
		}

		public Criteria andEstadoLessThan(Short value) {
			addCriterion("ESTADO <", value, "estado");
			return (Criteria) this;
		}

		public Criteria andEstadoLessThanOrEqualTo(Short value) {
			addCriterion("ESTADO <=", value, "estado");
			return (Criteria) this;
		}

		public Criteria andEstadoIn(List<Short> values) {
			addCriterion("ESTADO in", values, "estado");
			return (Criteria) this;
		}

		public Criteria andEstadoNotIn(List<Short> values) {
			addCriterion("ESTADO not in", values, "estado");
			return (Criteria) this;
		}

		public Criteria andEstadoBetween(Short value1, Short value2) {
			addCriterion("ESTADO between", value1, value2, "estado");
			return (Criteria) this;
		}

		public Criteria andEstadoNotBetween(Short value1, Short value2) {
			addCriterion("ESTADO not between", value1, value2, "estado");
			return (Criteria) this;
		}

		public Criteria andFechabajaIsNull() {
			addCriterion("FECHABAJA is null");
			return (Criteria) this;
		}

		public Criteria andFechabajaIsNotNull() {
			addCriterion("FECHABAJA is not null");
			return (Criteria) this;
		}

		public Criteria andFechabajaEqualTo(Date value) {
			addCriterion("FECHABAJA =", value, "fechabaja");
			return (Criteria) this;
		}

		public Criteria andFechabajaNotEqualTo(Date value) {
			addCriterion("FECHABAJA <>", value, "fechabaja");
			return (Criteria) this;
		}

		public Criteria andFechabajaGreaterThan(Date value) {
			addCriterion("FECHABAJA >", value, "fechabaja");
			return (Criteria) this;
		}

		public Criteria andFechabajaGreaterThanOrEqualTo(Date value) {
			addCriterion("FECHABAJA >=", value, "fechabaja");
			return (Criteria) this;
		}

		public Criteria andFechabajaLessThan(Date value) {
			addCriterion("FECHABAJA <", value, "fechabaja");
			return (Criteria) this;
		}

		public Criteria andFechabajaLessThanOrEqualTo(Date value) {
			addCriterion("FECHABAJA <=", value, "fechabaja");
			return (Criteria) this;
		}

		public Criteria andFechabajaIn(List<Date> values) {
			addCriterion("FECHABAJA in", values, "fechabaja");
			return (Criteria) this;
		}

		public Criteria andFechabajaNotIn(List<Date> values) {
			addCriterion("FECHABAJA not in", values, "fechabaja");
			return (Criteria) this;
		}

		public Criteria andFechabajaBetween(Date value1, Date value2) {
			addCriterion("FECHABAJA between", value1, value2, "fechabaja");
			return (Criteria) this;
		}

		public Criteria andFechabajaNotBetween(Date value1, Date value2) {
			addCriterion("FECHABAJA not between", value1, value2, "fechabaja");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table USCGAE_INT.FAC_REGISTROFICHCONTA
	 * @mbg.generated  Tue Jan 25 09:48:46 CET 2022
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE.FAC_REGISTROFICHCONTA
     *
     * @mbg.generated do_not_delete_during_merge Wed Dec 22 13:46:39 CET 2021
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }
}