package org.itcgae.siga.db.entities;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class FcsCobrosRetencionjudicialExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USCGAE.FCS_COBROS_RETENCIONJUDICIAL
     *
     * @mbg.generated Fri Sep 24 12:01:30 CEST 2021
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USCGAE.FCS_COBROS_RETENCIONJUDICIAL
     *
     * @mbg.generated Fri Sep 24 12:01:30 CEST 2021
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USCGAE.FCS_COBROS_RETENCIONJUDICIAL
     *
     * @mbg.generated Fri Sep 24 12:01:30 CEST 2021
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_COBROS_RETENCIONJUDICIAL
     *
     * @mbg.generated Fri Sep 24 12:01:30 CEST 2021
     */
    public FcsCobrosRetencionjudicialExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_COBROS_RETENCIONJUDICIAL
     *
     * @mbg.generated Fri Sep 24 12:01:30 CEST 2021
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_COBROS_RETENCIONJUDICIAL
     *
     * @mbg.generated Fri Sep 24 12:01:30 CEST 2021
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_COBROS_RETENCIONJUDICIAL
     *
     * @mbg.generated Fri Sep 24 12:01:30 CEST 2021
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_COBROS_RETENCIONJUDICIAL
     *
     * @mbg.generated Fri Sep 24 12:01:30 CEST 2021
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_COBROS_RETENCIONJUDICIAL
     *
     * @mbg.generated Fri Sep 24 12:01:30 CEST 2021
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_COBROS_RETENCIONJUDICIAL
     *
     * @mbg.generated Fri Sep 24 12:01:30 CEST 2021
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_COBROS_RETENCIONJUDICIAL
     *
     * @mbg.generated Fri Sep 24 12:01:30 CEST 2021
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_COBROS_RETENCIONJUDICIAL
     *
     * @mbg.generated Fri Sep 24 12:01:30 CEST 2021
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_COBROS_RETENCIONJUDICIAL
     *
     * @mbg.generated Fri Sep 24 12:01:30 CEST 2021
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.FCS_COBROS_RETENCIONJUDICIAL
     *
     * @mbg.generated Fri Sep 24 12:01:30 CEST 2021
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE.FCS_COBROS_RETENCIONJUDICIAL
     *
     * @mbg.generated Fri Sep 24 12:01:30 CEST 2021
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdinstitucionIsNull() {
            addCriterion("IDINSTITUCION is null");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionIsNotNull() {
            addCriterion("IDINSTITUCION is not null");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionEqualTo(Short value) {
            addCriterion("IDINSTITUCION =", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionNotEqualTo(Short value) {
            addCriterion("IDINSTITUCION <>", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionGreaterThan(Short value) {
            addCriterion("IDINSTITUCION >", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionGreaterThanOrEqualTo(Short value) {
            addCriterion("IDINSTITUCION >=", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionLessThan(Short value) {
            addCriterion("IDINSTITUCION <", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionLessThanOrEqualTo(Short value) {
            addCriterion("IDINSTITUCION <=", value, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionIn(List<Short> values) {
            addCriterion("IDINSTITUCION in", values, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionNotIn(List<Short> values) {
            addCriterion("IDINSTITUCION not in", values, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionBetween(Short value1, Short value2) {
            addCriterion("IDINSTITUCION between", value1, value2, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdinstitucionNotBetween(Short value1, Short value2) {
            addCriterion("IDINSTITUCION not between", value1, value2, "idinstitucion");
            return (Criteria) this;
        }

        public Criteria andIdpersonaIsNull() {
            addCriterion("IDPERSONA is null");
            return (Criteria) this;
        }

        public Criteria andIdpersonaIsNotNull() {
            addCriterion("IDPERSONA is not null");
            return (Criteria) this;
        }

        public Criteria andIdpersonaEqualTo(Long value) {
            addCriterion("IDPERSONA =", value, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaNotEqualTo(Long value) {
            addCriterion("IDPERSONA <>", value, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaGreaterThan(Long value) {
            addCriterion("IDPERSONA >", value, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaGreaterThanOrEqualTo(Long value) {
            addCriterion("IDPERSONA >=", value, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaLessThan(Long value) {
            addCriterion("IDPERSONA <", value, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaLessThanOrEqualTo(Long value) {
            addCriterion("IDPERSONA <=", value, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaIn(List<Long> values) {
            addCriterion("IDPERSONA in", values, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaNotIn(List<Long> values) {
            addCriterion("IDPERSONA not in", values, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaBetween(Long value1, Long value2) {
            addCriterion("IDPERSONA between", value1, value2, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdpersonaNotBetween(Long value1, Long value2) {
            addCriterion("IDPERSONA not between", value1, value2, "idpersona");
            return (Criteria) this;
        }

        public Criteria andIdretencionIsNull() {
            addCriterion("IDRETENCION is null");
            return (Criteria) this;
        }

        public Criteria andIdretencionIsNotNull() {
            addCriterion("IDRETENCION is not null");
            return (Criteria) this;
        }

        public Criteria andIdretencionEqualTo(Long value) {
            addCriterion("IDRETENCION =", value, "idretencion");
            return (Criteria) this;
        }

        public Criteria andIdretencionNotEqualTo(Long value) {
            addCriterion("IDRETENCION <>", value, "idretencion");
            return (Criteria) this;
        }

        public Criteria andIdretencionGreaterThan(Long value) {
            addCriterion("IDRETENCION >", value, "idretencion");
            return (Criteria) this;
        }

        public Criteria andIdretencionGreaterThanOrEqualTo(Long value) {
            addCriterion("IDRETENCION >=", value, "idretencion");
            return (Criteria) this;
        }

        public Criteria andIdretencionLessThan(Long value) {
            addCriterion("IDRETENCION <", value, "idretencion");
            return (Criteria) this;
        }

        public Criteria andIdretencionLessThanOrEqualTo(Long value) {
            addCriterion("IDRETENCION <=", value, "idretencion");
            return (Criteria) this;
        }

        public Criteria andIdretencionIn(List<Long> values) {
            addCriterion("IDRETENCION in", values, "idretencion");
            return (Criteria) this;
        }

        public Criteria andIdretencionNotIn(List<Long> values) {
            addCriterion("IDRETENCION not in", values, "idretencion");
            return (Criteria) this;
        }

        public Criteria andIdretencionBetween(Long value1, Long value2) {
            addCriterion("IDRETENCION between", value1, value2, "idretencion");
            return (Criteria) this;
        }

        public Criteria andIdretencionNotBetween(Long value1, Long value2) {
            addCriterion("IDRETENCION not between", value1, value2, "idretencion");
            return (Criteria) this;
        }

        public Criteria andIdcobroIsNull() {
            addCriterion("IDCOBRO is null");
            return (Criteria) this;
        }

        public Criteria andIdcobroIsNotNull() {
            addCriterion("IDCOBRO is not null");
            return (Criteria) this;
        }

        public Criteria andIdcobroEqualTo(Short value) {
            addCriterion("IDCOBRO =", value, "idcobro");
            return (Criteria) this;
        }

        public Criteria andIdcobroNotEqualTo(Short value) {
            addCriterion("IDCOBRO <>", value, "idcobro");
            return (Criteria) this;
        }

        public Criteria andIdcobroGreaterThan(Short value) {
            addCriterion("IDCOBRO >", value, "idcobro");
            return (Criteria) this;
        }

        public Criteria andIdcobroGreaterThanOrEqualTo(Short value) {
            addCriterion("IDCOBRO >=", value, "idcobro");
            return (Criteria) this;
        }

        public Criteria andIdcobroLessThan(Short value) {
            addCriterion("IDCOBRO <", value, "idcobro");
            return (Criteria) this;
        }

        public Criteria andIdcobroLessThanOrEqualTo(Short value) {
            addCriterion("IDCOBRO <=", value, "idcobro");
            return (Criteria) this;
        }

        public Criteria andIdcobroIn(List<Short> values) {
            addCriterion("IDCOBRO in", values, "idcobro");
            return (Criteria) this;
        }

        public Criteria andIdcobroNotIn(List<Short> values) {
            addCriterion("IDCOBRO not in", values, "idcobro");
            return (Criteria) this;
        }

        public Criteria andIdcobroBetween(Short value1, Short value2) {
            addCriterion("IDCOBRO between", value1, value2, "idcobro");
            return (Criteria) this;
        }

        public Criteria andIdcobroNotBetween(Short value1, Short value2) {
            addCriterion("IDCOBRO not between", value1, value2, "idcobro");
            return (Criteria) this;
        }

        public Criteria andIdpagosjgIsNull() {
            addCriterion("IDPAGOSJG is null");
            return (Criteria) this;
        }

        public Criteria andIdpagosjgIsNotNull() {
            addCriterion("IDPAGOSJG is not null");
            return (Criteria) this;
        }

        public Criteria andIdpagosjgEqualTo(Integer value) {
            addCriterion("IDPAGOSJG =", value, "idpagosjg");
            return (Criteria) this;
        }

        public Criteria andIdpagosjgNotEqualTo(Integer value) {
            addCriterion("IDPAGOSJG <>", value, "idpagosjg");
            return (Criteria) this;
        }

        public Criteria andIdpagosjgGreaterThan(Integer value) {
            addCriterion("IDPAGOSJG >", value, "idpagosjg");
            return (Criteria) this;
        }

        public Criteria andIdpagosjgGreaterThanOrEqualTo(Integer value) {
            addCriterion("IDPAGOSJG >=", value, "idpagosjg");
            return (Criteria) this;
        }

        public Criteria andIdpagosjgLessThan(Integer value) {
            addCriterion("IDPAGOSJG <", value, "idpagosjg");
            return (Criteria) this;
        }

        public Criteria andIdpagosjgLessThanOrEqualTo(Integer value) {
            addCriterion("IDPAGOSJG <=", value, "idpagosjg");
            return (Criteria) this;
        }

        public Criteria andIdpagosjgIn(List<Integer> values) {
            addCriterion("IDPAGOSJG in", values, "idpagosjg");
            return (Criteria) this;
        }

        public Criteria andIdpagosjgNotIn(List<Integer> values) {
            addCriterion("IDPAGOSJG not in", values, "idpagosjg");
            return (Criteria) this;
        }

        public Criteria andIdpagosjgBetween(Integer value1, Integer value2) {
            addCriterion("IDPAGOSJG between", value1, value2, "idpagosjg");
            return (Criteria) this;
        }

        public Criteria andIdpagosjgNotBetween(Integer value1, Integer value2) {
            addCriterion("IDPAGOSJG not between", value1, value2, "idpagosjg");
            return (Criteria) this;
        }

        public Criteria andFecharetencionIsNull() {
            addCriterion("FECHARETENCION is null");
            return (Criteria) this;
        }

        public Criteria andFecharetencionIsNotNull() {
            addCriterion("FECHARETENCION is not null");
            return (Criteria) this;
        }

        public Criteria andFecharetencionEqualTo(Date value) {
            addCriterion("FECHARETENCION =", value, "fecharetencion");
            return (Criteria) this;
        }

        public Criteria andFecharetencionNotEqualTo(Date value) {
            addCriterion("FECHARETENCION <>", value, "fecharetencion");
            return (Criteria) this;
        }

        public Criteria andFecharetencionGreaterThan(Date value) {
            addCriterion("FECHARETENCION >", value, "fecharetencion");
            return (Criteria) this;
        }

        public Criteria andFecharetencionGreaterThanOrEqualTo(Date value) {
            addCriterion("FECHARETENCION >=", value, "fecharetencion");
            return (Criteria) this;
        }

        public Criteria andFecharetencionLessThan(Date value) {
            addCriterion("FECHARETENCION <", value, "fecharetencion");
            return (Criteria) this;
        }

        public Criteria andFecharetencionLessThanOrEqualTo(Date value) {
            addCriterion("FECHARETENCION <=", value, "fecharetencion");
            return (Criteria) this;
        }

        public Criteria andFecharetencionIn(List<Date> values) {
            addCriterion("FECHARETENCION in", values, "fecharetencion");
            return (Criteria) this;
        }

        public Criteria andFecharetencionNotIn(List<Date> values) {
            addCriterion("FECHARETENCION not in", values, "fecharetencion");
            return (Criteria) this;
        }

        public Criteria andFecharetencionBetween(Date value1, Date value2) {
            addCriterion("FECHARETENCION between", value1, value2, "fecharetencion");
            return (Criteria) this;
        }

        public Criteria andFecharetencionNotBetween(Date value1, Date value2) {
            addCriterion("FECHARETENCION not between", value1, value2, "fecharetencion");
            return (Criteria) this;
        }

        public Criteria andImporteretenidoIsNull() {
            addCriterion("IMPORTERETENIDO is null");
            return (Criteria) this;
        }

        public Criteria andImporteretenidoIsNotNull() {
            addCriterion("IMPORTERETENIDO is not null");
            return (Criteria) this;
        }

        public Criteria andImporteretenidoEqualTo(BigDecimal value) {
            addCriterion("IMPORTERETENIDO =", value, "importeretenido");
            return (Criteria) this;
        }

        public Criteria andImporteretenidoNotEqualTo(BigDecimal value) {
            addCriterion("IMPORTERETENIDO <>", value, "importeretenido");
            return (Criteria) this;
        }

        public Criteria andImporteretenidoGreaterThan(BigDecimal value) {
            addCriterion("IMPORTERETENIDO >", value, "importeretenido");
            return (Criteria) this;
        }

        public Criteria andImporteretenidoGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("IMPORTERETENIDO >=", value, "importeretenido");
            return (Criteria) this;
        }

        public Criteria andImporteretenidoLessThan(BigDecimal value) {
            addCriterion("IMPORTERETENIDO <", value, "importeretenido");
            return (Criteria) this;
        }

        public Criteria andImporteretenidoLessThanOrEqualTo(BigDecimal value) {
            addCriterion("IMPORTERETENIDO <=", value, "importeretenido");
            return (Criteria) this;
        }

        public Criteria andImporteretenidoIn(List<BigDecimal> values) {
            addCriterion("IMPORTERETENIDO in", values, "importeretenido");
            return (Criteria) this;
        }

        public Criteria andImporteretenidoNotIn(List<BigDecimal> values) {
            addCriterion("IMPORTERETENIDO not in", values, "importeretenido");
            return (Criteria) this;
        }

        public Criteria andImporteretenidoBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("IMPORTERETENIDO between", value1, value2, "importeretenido");
            return (Criteria) this;
        }

        public Criteria andImporteretenidoNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("IMPORTERETENIDO not between", value1, value2, "importeretenido");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionIsNull() {
            addCriterion("FECHAMODIFICACION is null");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionIsNotNull() {
            addCriterion("FECHAMODIFICACION is not null");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION =", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionNotEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION <>", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionGreaterThan(Date value) {
            addCriterion("FECHAMODIFICACION >", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionGreaterThanOrEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION >=", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionLessThan(Date value) {
            addCriterion("FECHAMODIFICACION <", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionLessThanOrEqualTo(Date value) {
            addCriterion("FECHAMODIFICACION <=", value, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionIn(List<Date> values) {
            addCriterion("FECHAMODIFICACION in", values, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionNotIn(List<Date> values) {
            addCriterion("FECHAMODIFICACION not in", values, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionBetween(Date value1, Date value2) {
            addCriterion("FECHAMODIFICACION between", value1, value2, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andFechamodificacionNotBetween(Date value1, Date value2) {
            addCriterion("FECHAMODIFICACION not between", value1, value2, "fechamodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionIsNull() {
            addCriterion("USUMODIFICACION is null");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionIsNotNull() {
            addCriterion("USUMODIFICACION is not null");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionEqualTo(Long value) {
            addCriterion("USUMODIFICACION =", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionNotEqualTo(Long value) {
            addCriterion("USUMODIFICACION <>", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionGreaterThan(Long value) {
            addCriterion("USUMODIFICACION >", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionGreaterThanOrEqualTo(Long value) {
            addCriterion("USUMODIFICACION >=", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionLessThan(Long value) {
            addCriterion("USUMODIFICACION <", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionLessThanOrEqualTo(Long value) {
            addCriterion("USUMODIFICACION <=", value, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionIn(List<Long> values) {
            addCriterion("USUMODIFICACION in", values, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionNotIn(List<Long> values) {
            addCriterion("USUMODIFICACION not in", values, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionBetween(Long value1, Long value2) {
            addCriterion("USUMODIFICACION between", value1, value2, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andUsumodificacionNotBetween(Long value1, Long value2) {
            addCriterion("USUMODIFICACION not between", value1, value2, "usumodificacion");
            return (Criteria) this;
        }

        public Criteria andImporteaplicaretencionIsNull() {
            addCriterion("IMPORTEAPLICARETENCION is null");
            return (Criteria) this;
        }

        public Criteria andImporteaplicaretencionIsNotNull() {
            addCriterion("IMPORTEAPLICARETENCION is not null");
            return (Criteria) this;
        }

        public Criteria andImporteaplicaretencionEqualTo(BigDecimal value) {
            addCriterion("IMPORTEAPLICARETENCION =", value, "importeaplicaretencion");
            return (Criteria) this;
        }

        public Criteria andImporteaplicaretencionNotEqualTo(BigDecimal value) {
            addCriterion("IMPORTEAPLICARETENCION <>", value, "importeaplicaretencion");
            return (Criteria) this;
        }

        public Criteria andImporteaplicaretencionGreaterThan(BigDecimal value) {
            addCriterion("IMPORTEAPLICARETENCION >", value, "importeaplicaretencion");
            return (Criteria) this;
        }

        public Criteria andImporteaplicaretencionGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("IMPORTEAPLICARETENCION >=", value, "importeaplicaretencion");
            return (Criteria) this;
        }

        public Criteria andImporteaplicaretencionLessThan(BigDecimal value) {
            addCriterion("IMPORTEAPLICARETENCION <", value, "importeaplicaretencion");
            return (Criteria) this;
        }

        public Criteria andImporteaplicaretencionLessThanOrEqualTo(BigDecimal value) {
            addCriterion("IMPORTEAPLICARETENCION <=", value, "importeaplicaretencion");
            return (Criteria) this;
        }

        public Criteria andImporteaplicaretencionIn(List<BigDecimal> values) {
            addCriterion("IMPORTEAPLICARETENCION in", values, "importeaplicaretencion");
            return (Criteria) this;
        }

        public Criteria andImporteaplicaretencionNotIn(List<BigDecimal> values) {
            addCriterion("IMPORTEAPLICARETENCION not in", values, "importeaplicaretencion");
            return (Criteria) this;
        }

        public Criteria andImporteaplicaretencionBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("IMPORTEAPLICARETENCION between", value1, value2, "importeaplicaretencion");
            return (Criteria) this;
        }

        public Criteria andImporteaplicaretencionNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("IMPORTEAPLICARETENCION not between", value1, value2, "importeaplicaretencion");
            return (Criteria) this;
        }

        public Criteria andMesIsNull() {
            addCriterion("MES is null");
            return (Criteria) this;
        }

        public Criteria andMesIsNotNull() {
            addCriterion("MES is not null");
            return (Criteria) this;
        }

        public Criteria andMesEqualTo(Short value) {
            addCriterion("MES =", value, "mes");
            return (Criteria) this;
        }

        public Criteria andMesNotEqualTo(Short value) {
            addCriterion("MES <>", value, "mes");
            return (Criteria) this;
        }

        public Criteria andMesGreaterThan(Short value) {
            addCriterion("MES >", value, "mes");
            return (Criteria) this;
        }

        public Criteria andMesGreaterThanOrEqualTo(Short value) {
            addCriterion("MES >=", value, "mes");
            return (Criteria) this;
        }

        public Criteria andMesLessThan(Short value) {
            addCriterion("MES <", value, "mes");
            return (Criteria) this;
        }

        public Criteria andMesLessThanOrEqualTo(Short value) {
            addCriterion("MES <=", value, "mes");
            return (Criteria) this;
        }

        public Criteria andMesIn(List<Short> values) {
            addCriterion("MES in", values, "mes");
            return (Criteria) this;
        }

        public Criteria andMesNotIn(List<Short> values) {
            addCriterion("MES not in", values, "mes");
            return (Criteria) this;
        }

        public Criteria andMesBetween(Short value1, Short value2) {
            addCriterion("MES between", value1, value2, "mes");
            return (Criteria) this;
        }

        public Criteria andMesNotBetween(Short value1, Short value2) {
            addCriterion("MES not between", value1, value2, "mes");
            return (Criteria) this;
        }

        public Criteria andAnioIsNull() {
            addCriterion("ANIO is null");
            return (Criteria) this;
        }

        public Criteria andAnioIsNotNull() {
            addCriterion("ANIO is not null");
            return (Criteria) this;
        }

        public Criteria andAnioEqualTo(Short value) {
            addCriterion("ANIO =", value, "anio");
            return (Criteria) this;
        }

        public Criteria andAnioNotEqualTo(Short value) {
            addCriterion("ANIO <>", value, "anio");
            return (Criteria) this;
        }

        public Criteria andAnioGreaterThan(Short value) {
            addCriterion("ANIO >", value, "anio");
            return (Criteria) this;
        }

        public Criteria andAnioGreaterThanOrEqualTo(Short value) {
            addCriterion("ANIO >=", value, "anio");
            return (Criteria) this;
        }

        public Criteria andAnioLessThan(Short value) {
            addCriterion("ANIO <", value, "anio");
            return (Criteria) this;
        }

        public Criteria andAnioLessThanOrEqualTo(Short value) {
            addCriterion("ANIO <=", value, "anio");
            return (Criteria) this;
        }

        public Criteria andAnioIn(List<Short> values) {
            addCriterion("ANIO in", values, "anio");
            return (Criteria) this;
        }

        public Criteria andAnioNotIn(List<Short> values) {
            addCriterion("ANIO not in", values, "anio");
            return (Criteria) this;
        }

        public Criteria andAnioBetween(Short value1, Short value2) {
            addCriterion("ANIO between", value1, value2, "anio");
            return (Criteria) this;
        }

        public Criteria andAnioNotBetween(Short value1, Short value2) {
            addCriterion("ANIO not between", value1, value2, "anio");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE.FCS_COBROS_RETENCIONJUDICIAL
     *
     * @mbg.generated do_not_delete_during_merge Fri Sep 24 12:01:30 CEST 2021
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USCGAE.FCS_COBROS_RETENCIONJUDICIAL
     *
     * @mbg.generated Fri Sep 24 12:01:30 CEST 2021
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}