package org.itcgae.siga.db.mappers;

import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;
import org.itcgae.siga.db.entities.CargasWs;
import org.itcgae.siga.db.entities.CargasWsExample.Criteria;
import org.itcgae.siga.db.entities.CargasWsExample.Criterion;
import org.itcgae.siga.db.entities.CargasWsExample;

public class CargasWsSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CARGAS_WS
     *
     * @mbg.generated Thu Jun 28 12:30:00 CEST 2018
     */
    public String countByExample(CargasWsExample example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("CARGAS_WS");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CARGAS_WS
     *
     * @mbg.generated Thu Jun 28 12:30:00 CEST 2018
     */
    public String deleteByExample(CargasWsExample example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("CARGAS_WS");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CARGAS_WS
     *
     * @mbg.generated Thu Jun 28 12:30:00 CEST 2018
     */
    public String insertSelective(CargasWs record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("CARGAS_WS");
        
        sql.VALUES("ID_CARGA", "#{idCarga,jdbcType=DECIMAL}");
        
        if (record.getIdEstadoCarga() != null) {
            sql.VALUES("ID_ESTADO_CARGA", "#{idEstadoCarga,jdbcType=DECIMAL}");
        }
        
        if (record.getIdTipoCarga() != null) {
            sql.VALUES("ID_TIPO_CARGA", "#{idTipoCarga,jdbcType=DECIMAL}");
        }
        
        if (record.getConErrores() != null) {
            sql.VALUES("CON_ERRORES", "#{conErrores,jdbcType=DECIMAL}");
        }
        
        if (record.getUsuModificacion() != null) {
            sql.VALUES("USU_MODIFICACION", "#{usuModificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getFechaCreacion() != null) {
            sql.VALUES("FECHA_CREACION", "#{fechaCreacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getFechaModificacion() != null) {
            sql.VALUES("FECHA_MODIFICACION", "#{fechaModificacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIdInstitucion() != null) {
            sql.VALUES("ID_INSTITUCION", "#{idInstitucion,jdbcType=DECIMAL}");
        }
        
        if (record.getNumeroPeticion() != null) {
            sql.VALUES("NUMERO_PETICION", "#{numeroPeticion,jdbcType=VARCHAR}");
        }
        
        if (record.getTotalPaginas() != null) {
            sql.VALUES("TOTAL_PAGINAS", "#{totalPaginas,jdbcType=DECIMAL}");
        }
        
        if (record.getFechaFinDeProceso() != null) {
            sql.VALUES("FECHA_FIN_DE_PROCESO", "#{fechaFinDeProceso,jdbcType=TIMESTAMP}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CARGAS_WS
     *
     * @mbg.generated Thu Jun 28 12:30:00 CEST 2018
     */
    public String selectByExample(CargasWsExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("ID_CARGA");
        } else {
            sql.SELECT("ID_CARGA");
        }
        sql.SELECT("ID_ESTADO_CARGA");
        sql.SELECT("ID_TIPO_CARGA");
        sql.SELECT("CON_ERRORES");
        sql.SELECT("USU_MODIFICACION");
        sql.SELECT("FECHA_CREACION");
        sql.SELECT("FECHA_MODIFICACION");
        sql.SELECT("ID_INSTITUCION");
        sql.SELECT("NUMERO_PETICION");
        sql.SELECT("TOTAL_PAGINAS");
        sql.SELECT("FECHA_FIN_DE_PROCESO");
        sql.FROM("CARGAS_WS");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CARGAS_WS
     *
     * @mbg.generated Thu Jun 28 12:30:00 CEST 2018
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        CargasWs record = (CargasWs) parameter.get("record");
        CargasWsExample example = (CargasWsExample) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("CARGAS_WS");
        
        if (record.getIdCarga() != null) {
            sql.SET("ID_CARGA = #{record.idCarga,jdbcType=DECIMAL}");
        }
        
        if (record.getIdEstadoCarga() != null) {
            sql.SET("ID_ESTADO_CARGA = #{record.idEstadoCarga,jdbcType=DECIMAL}");
        }
        
        if (record.getIdTipoCarga() != null) {
            sql.SET("ID_TIPO_CARGA = #{record.idTipoCarga,jdbcType=DECIMAL}");
        }
        
        if (record.getConErrores() != null) {
            sql.SET("CON_ERRORES = #{record.conErrores,jdbcType=DECIMAL}");
        }
        
        if (record.getUsuModificacion() != null) {
            sql.SET("USU_MODIFICACION = #{record.usuModificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getFechaCreacion() != null) {
            sql.SET("FECHA_CREACION = #{record.fechaCreacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getFechaModificacion() != null) {
            sql.SET("FECHA_MODIFICACION = #{record.fechaModificacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIdInstitucion() != null) {
            sql.SET("ID_INSTITUCION = #{record.idInstitucion,jdbcType=DECIMAL}");
        }
        
        if (record.getNumeroPeticion() != null) {
            sql.SET("NUMERO_PETICION = #{record.numeroPeticion,jdbcType=VARCHAR}");
        }
        
        if (record.getTotalPaginas() != null) {
            sql.SET("TOTAL_PAGINAS = #{record.totalPaginas,jdbcType=DECIMAL}");
        }
        
        if (record.getFechaFinDeProceso() != null) {
            sql.SET("FECHA_FIN_DE_PROCESO = #{record.fechaFinDeProceso,jdbcType=TIMESTAMP}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CARGAS_WS
     *
     * @mbg.generated Thu Jun 28 12:30:00 CEST 2018
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("CARGAS_WS");
        
        sql.SET("ID_CARGA = #{record.idCarga,jdbcType=DECIMAL}");
        sql.SET("ID_ESTADO_CARGA = #{record.idEstadoCarga,jdbcType=DECIMAL}");
        sql.SET("ID_TIPO_CARGA = #{record.idTipoCarga,jdbcType=DECIMAL}");
        sql.SET("CON_ERRORES = #{record.conErrores,jdbcType=DECIMAL}");
        sql.SET("USU_MODIFICACION = #{record.usuModificacion,jdbcType=DECIMAL}");
        sql.SET("FECHA_CREACION = #{record.fechaCreacion,jdbcType=TIMESTAMP}");
        sql.SET("FECHA_MODIFICACION = #{record.fechaModificacion,jdbcType=TIMESTAMP}");
        sql.SET("ID_INSTITUCION = #{record.idInstitucion,jdbcType=DECIMAL}");
        sql.SET("NUMERO_PETICION = #{record.numeroPeticion,jdbcType=VARCHAR}");
        sql.SET("TOTAL_PAGINAS = #{record.totalPaginas,jdbcType=DECIMAL}");
        sql.SET("FECHA_FIN_DE_PROCESO = #{record.fechaFinDeProceso,jdbcType=TIMESTAMP}");
        
        CargasWsExample example = (CargasWsExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CARGAS_WS
     *
     * @mbg.generated Thu Jun 28 12:30:00 CEST 2018
     */
    public String updateByPrimaryKeySelective(CargasWs record) {
        SQL sql = new SQL();
        sql.UPDATE("CARGAS_WS");
        
        if (record.getIdEstadoCarga() != null) {
            sql.SET("ID_ESTADO_CARGA = #{idEstadoCarga,jdbcType=DECIMAL}");
        }
        
        if (record.getIdTipoCarga() != null) {
            sql.SET("ID_TIPO_CARGA = #{idTipoCarga,jdbcType=DECIMAL}");
        }
        
        if (record.getConErrores() != null) {
            sql.SET("CON_ERRORES = #{conErrores,jdbcType=DECIMAL}");
        }
        
        if (record.getUsuModificacion() != null) {
            sql.SET("USU_MODIFICACION = #{usuModificacion,jdbcType=DECIMAL}");
        }
        
        if (record.getFechaCreacion() != null) {
            sql.SET("FECHA_CREACION = #{fechaCreacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getFechaModificacion() != null) {
            sql.SET("FECHA_MODIFICACION = #{fechaModificacion,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIdInstitucion() != null) {
            sql.SET("ID_INSTITUCION = #{idInstitucion,jdbcType=DECIMAL}");
        }
        
        if (record.getNumeroPeticion() != null) {
            sql.SET("NUMERO_PETICION = #{numeroPeticion,jdbcType=VARCHAR}");
        }
        
        if (record.getTotalPaginas() != null) {
            sql.SET("TOTAL_PAGINAS = #{totalPaginas,jdbcType=DECIMAL}");
        }
        
        if (record.getFechaFinDeProceso() != null) {
            sql.SET("FECHA_FIN_DE_PROCESO = #{fechaFinDeProceso,jdbcType=TIMESTAMP}");
        }
        
        sql.WHERE("ID_CARGA = #{idCarga,jdbcType=DECIMAL}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USCGAE.CARGAS_WS
     *
     * @mbg.generated Thu Jun 28 12:30:00 CEST 2018
     */
    protected void applyWhere(SQL sql, CargasWsExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}